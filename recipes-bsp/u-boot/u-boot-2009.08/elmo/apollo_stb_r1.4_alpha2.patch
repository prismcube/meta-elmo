diff -Naur u-boot-2009.08/common/cmd_boot.c u-boot-2009.08_alpha2/common/cmd_boot.c
--- u-boot-2009.08/common/cmd_boot.c	2009-08-31 12:57:42.000000000 -0500
+++ u-boot-2009.08_alpha2/common/cmd_boot.c	2010-01-18 14:58:40.000000000 -0600
@@ -46,14 +46,40 @@
 	}
 
 	addr = simple_strtoul(argv[1], NULL, 16);
-
 	printf ("## Starting application at 0x%08lX ...\n", addr);
 
 	/*
 	 * pass address parameter as argv[0] (aka command name),
 	 * and all remaining args
 	 */
+
+#if defined(CONFIG_APOLLO)
+
+
+/* setup Mac address */
+
+/* setup Cmd Line */
+#if 1
+
+      patch_ataglist();
+		//*((unsigned int*)0xe06ead50) = MACH_TYPE ;
+		//*((unsigned int*)0xe06ead54) = 0x2000 ;
+		
+		asm("mov	r0, #0x0") ;
+		//asm("LDR	r4,=0xe06ead50") ;
+		asm("LDR	r1, =0x85D") ;
+	//	asm("LDR	r4,=0xe06ead54") ;
+		asm("LDR	r2, =0x2000") ;
+		asm("LDR	r3,=0x8000") ;
+		asm("mov	pc, r3") ;
+#else
+   patch_ataglist();
+	rc = do_go_exec ((void *)addr, 0x2000, MACH_TYPE);
+#endif	
+#else
 	rc = do_go_exec ((void *)addr, argc - 1, argv + 1);
+#endif
+
 	if (rc != 0) rcode = 1;
 
 	printf ("## Application terminated, rc = 0x%lX\n", rc);
diff -Naur u-boot-2009.08/common/cmd_nand.c u-boot-2009.08_alpha2/common/cmd_nand.c
--- u-boot-2009.08/common/cmd_nand.c	2010-01-18 19:09:08.000000000 -0600
+++ u-boot-2009.08_alpha2/common/cmd_nand.c	2009-12-17 10:10:28.000000000 -0600
@@ -28,6 +28,10 @@
 #include <jffs2/jffs2.h>
 #include <nand.h>
 
+//#include "ip1902dmac.h"
+
+
+
 #if defined(CONFIG_CMD_MTDPARTS)
 
 /* parition handling routines */
@@ -215,6 +219,124 @@
 	       nand->name, nand->erasesize >> 10);
 }
 
+/*---------------------------------------------------------------------------------*/
+#if 0
+typedef enum _retcode_t_
+{
+   RETCODE_OK = 0,
+   RETCODE_BAD_PARAMETER,
+   RETCODE_MISMATCH,                /* Security violation. */
+   RETCODE_INVALID_FUSE_SETTING,    /* Security violation. */
+   RETCODE_INVALID_FLASH_HEADER,    /* Security violation. */
+   RETCODE_CHAN_BUSY,
+   RETCODE_INVALID_SP,              /* Security violation during boot only. */
+   RETCODE_CRYPT_ERR,               /* Security Violation during boot only. */
+   RETCODE_INVALID_SP_COMMAND,      /* Security Violation during boot only. */
+   RETCODE_RSA_ERROR,               /* Security Violation. */
+   RETCODE_KEY2_MISSING,            /* Security Violation. */
+   RETCODE_NO_VALID_COPY,  
+   RETCODE_INVALID_CMD_CODE,
+   RETCODE_INVALID_IRQ_SOURCE,
+   RETCODE_HDCP_KEY_LOAD_FAILED,
+   RETCODE_FUSE_PROGRAM_FAILED,
+   RETCODE_OVERFLOW,
+   RETCODE_UNDERFLOW,
+   RETCODE_TOO_MANY_PAUSES,
+   RETCODE_FEATURE_DISABLED,
+   RETCODE_NOT_DTCP_REGION,
+   RETCODE_INVALID_SRM,
+   RETCODE_OTP_CTRL_ERR,
+   RETCODE_MC_WAITING,
+   RETCODE_FAILED,
+   RETCODE_BOOTDEV_UART,
+   RETCODE_BOOTDEV_FLASH,
+   RETCODE_BOOTDEV_INVALID,
+   RETCODE_FLASH_DEVICE_NOT_SUPPORTED,
+   RETCODE_FLASH_CTRL_ERROR,
+   RETCODE_FLASH_BAD_BLOCK,
+   RETCODE_FLASH_UNCORRECTABLE_ERROR,
+   RETCODE_UARTBOOT_ERROR,
+   RETCODE_YMODEM_HDR_ERROR,
+   RETCODE_YMODEM_PKT_ERROR,
+   RETCODE_YMODEM_DONE_ERROR,
+   RETCODE_NOT_SUPPORTED,
+   RETCODE_INVALID_BOOT_DEV,
+   /* 
+    * Echostar 07/25/2005 - Addition of a new error used in bkgnd.c
+    */
+   RETCODE_FATAL_PROGRAMMING_ERROR
+} retcode_t;
+
+typedef enum _devicetype_t
+{
+   NAND_x16_small_4cycle=0,
+   NAND_x16_small_5cycle,
+   NAND_x16_large_4cycle,
+   NAND_x16_large_5cycle,
+   NAND_x8_small_4cycle,
+   NAND_x8_small_5cycle,
+   NAND_x8_large_4cycle,
+   NAND_x8_large_5cycle,
+   PCI_DEV_BOOT,
+   NAND_x16_small_3cycle,
+   ARM_IN_RESET,
+   NAND_x8_small_3cycle,
+   SPI_16bit,
+   SPI_24bit,
+   SPI_32bit,
+   ARM_IN_RESET1,
+   NOR_x8_21bit, /* 16 */
+   NOR_x8_22bit,
+   NOR_x8_23bit,
+   NOR_x8_24bit,
+   NOR_x8_25bit,
+   NOR_x8_26bit,
+   NOR_x8_27bit,
+   ARM_IN_RESET2,
+   NOR_x16_21bit,
+   NOR_x16_22bit,
+   NOR_x16_23bit,
+   NOR_x16_24bit,
+   NOR_x16_25bit,
+   NOR_x16_26bit,
+   NOR_x16_27bit,
+   NOR_x16_ADM,
+   NAND_x8_large4K_4cycle,
+   NAND_x8_large4K_5cycle,
+   NAND_x16_large4K_4cycle,
+   NAND_x16_large4K_5cycle,
+   Invalid_dev_type
+  
+} devicetype_t;
+
+/* Define the class of Flash device used for booting: 
+    IP2017-NAND, IP2016-NOR SFC-SPI Flash
+*/
+typedef enum
+{
+  invalid_flash_IP,
+  ip2017,
+  ip2016,
+  sfc
+}flashtype_t;
+
+
+typedef unsigned long u_int32;
+typedef unsigned short u_int16;
+typedef unsigned char u_int8;
+
+extern void nx_nor_init (devicetype_t type) ;
+extern retcode_t nx_download_data_from_nor_flash(
+            u_int32        offset,  /* NOTE - should be on page boundary */
+            u_int8         *buffer,
+            u_int32        length,  /* NOTE - should be a multiple of pagesize */
+            devicetype_t   type,
+            flashtype_t eFlashtype) ;
+
+#endif
+/*---------------------------------------------------------------------------------*/
+
+
 int do_nand(cmd_tbl_t * cmdtp, int flag, int argc, char *argv[])
 {
 	int i, dev, ret = 0;
@@ -228,7 +350,24 @@
 	int quiet = 0;
 #endif
 	const char *quiet_str = getenv("quiet");
+#if 0
+	puts("U-Boot -- Copying from NOR flash\n");
+
+
+	printf ("## addr1 %x ...\n", ((ulong)simple_strtoul(argv[2], NULL, 16)));
+	printf ("## addr2 %x ...\n", ((ulong)simple_strtoul(argv[3], NULL, 16)));
+	printf ("## addr3 %x ...\n", ((ulong)simple_strtoul(argv[4], NULL, 16)));
+
+	
+	nx_nor_init (0) ;
+	nx_download_data_from_nor_flash(0x180000, 0x8000, 0x400000, 2, 0) ;
+	//nx_download_data_from_nor_flash(0x8000, 0x8000, 0x400000, 2, 0) ;
+
 
+	puts("U-Boot -- Copying from NAND flash.....Done\n");
+	return 0 ;
+
+#endif
 	/* at least two arguments please */
 	if (argc < 2)
 		goto usage;
@@ -509,6 +648,8 @@
 #endif
 );
 
+
+
 static int nand_load_image(cmd_tbl_t *cmdtp, nand_info_t *nand,
 			   ulong offset, ulong addr, char *cmd)
 {
diff -Naur u-boot-2009.08/common/cmd_nor_bkp.c u-boot-2009.08_alpha2/common/cmd_nor_bkp.c
--- u-boot-2009.08/common/cmd_nor_bkp.c	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/common/cmd_nor_bkp.c	2009-12-17 10:10:28.000000000 -0600
@@ -0,0 +1,205 @@
+/*
+ * Driver for NOR support, Makarand Pawagi
+ */
+
+#include <common.h>
+
+
+/*
+ *
+ * New NOR support
+ *
+ */
+#include <common.h>
+#include <linux/mtd/mtd.h>
+
+#include <command.h>
+#include <watchdog.h>
+#include <malloc.h>
+#include <asm/byteorder.h>
+#include <nor.h>
+
+//#include "ip1902dmac.h"
+
+
+/*---------------------------------------------------------------------------------*/
+#if 0
+typedef enum _retcode_t_
+{
+   RETCODE_OK = 0,
+   RETCODE_BAD_PARAMETER,
+   RETCODE_MISMATCH,                /* Security violation. */
+   RETCODE_INVALID_FUSE_SETTING,    /* Security violation. */
+   RETCODE_INVALID_FLASH_HEADER,    /* Security violation. */
+   RETCODE_CHAN_BUSY,
+   RETCODE_INVALID_SP,              /* Security violation during boot only. */
+   RETCODE_CRYPT_ERR,               /* Security Violation during boot only. */
+   RETCODE_INVALID_SP_COMMAND,      /* Security Violation during boot only. */
+   RETCODE_RSA_ERROR,               /* Security Violation. */
+   RETCODE_KEY2_MISSING,            /* Security Violation. */
+   RETCODE_NO_VALID_COPY,  
+   RETCODE_INVALID_CMD_CODE,
+   RETCODE_INVALID_IRQ_SOURCE,
+   RETCODE_HDCP_KEY_LOAD_FAILED,
+   RETCODE_FUSE_PROGRAM_FAILED,
+   RETCODE_OVERFLOW,
+   RETCODE_UNDERFLOW,
+   RETCODE_TOO_MANY_PAUSES,
+   RETCODE_FEATURE_DISABLED,
+   RETCODE_NOT_DTCP_REGION,
+   RETCODE_INVALID_SRM,
+   RETCODE_OTP_CTRL_ERR,
+   RETCODE_MC_WAITING,
+   RETCODE_FAILED,
+   RETCODE_BOOTDEV_UART,
+   RETCODE_BOOTDEV_FLASH,
+   RETCODE_BOOTDEV_INVALID,
+   RETCODE_FLASH_DEVICE_NOT_SUPPORTED,
+   RETCODE_FLASH_CTRL_ERROR,
+   RETCODE_FLASH_BAD_BLOCK,
+   RETCODE_FLASH_UNCORRECTABLE_ERROR,
+   RETCODE_UARTBOOT_ERROR,
+   RETCODE_YMODEM_HDR_ERROR,
+   RETCODE_YMODEM_PKT_ERROR,
+   RETCODE_YMODEM_DONE_ERROR,
+   RETCODE_NOT_SUPPORTED,
+   RETCODE_INVALID_BOOT_DEV,
+   /* 
+    * Echostar 07/25/2005 - Addition of a new error used in bkgnd.c
+    */
+   RETCODE_FATAL_PROGRAMMING_ERROR
+} retcode_t;
+
+typedef enum _devicetype_t
+{
+   NAND_x16_small_4cycle=0,
+   NAND_x16_small_5cycle,
+   NAND_x16_large_4cycle,
+   NAND_x16_large_5cycle,
+   NAND_x8_small_4cycle,
+   NAND_x8_small_5cycle,
+   NAND_x8_large_4cycle,
+   NAND_x8_large_5cycle,
+   PCI_DEV_BOOT,
+   NAND_x16_small_3cycle,
+   ARM_IN_RESET,
+   NAND_x8_small_3cycle,
+   SPI_16bit,
+   SPI_24bit,
+   SPI_32bit,
+   ARM_IN_RESET1,
+   NOR_x8_21bit, /* 16 */
+   NOR_x8_22bit,
+   NOR_x8_23bit,
+   NOR_x8_24bit,
+   NOR_x8_25bit,
+   NOR_x8_26bit,
+   NOR_x8_27bit,
+   ARM_IN_RESET2,
+   NOR_x16_21bit,
+   NOR_x16_22bit,
+   NOR_x16_23bit,
+   NOR_x16_24bit,
+   NOR_x16_25bit,
+   NOR_x16_26bit,
+   NOR_x16_27bit,
+   NOR_x16_ADM,
+   NAND_x8_large4K_4cycle,
+   NAND_x8_large4K_5cycle,
+   NAND_x16_large4K_4cycle,
+   NAND_x16_large4K_5cycle,
+   Invalid_dev_type
+  
+} devicetype_t;
+
+/* Define the class of Flash device used for booting: 
+    IP2017-NAND, IP2016-NOR SFC-SPI Flash
+*/
+typedef enum
+{
+  invalid_flash_IP,
+  ip2017,
+  ip2016,
+  sfc
+}flashtype_t;
+
+
+typedef unsigned long u_int32;
+typedef unsigned short u_int16;
+typedef unsigned char u_int8;
+
+extern void nx_nor_init (devicetype_t type) ;
+extern retcode_t nx_download_data_from_nor_flash(
+            u_int32        offset,  /* NOTE - should be on page boundary */
+            u_int8         *buffer,
+            u_int32        length,  /* NOTE - should be a multiple of pagesize */
+            devicetype_t   type,
+            flashtype_t eFlashtype) ;
+
+#endif
+/*---------------------------------------------------------------------------------*/
+
+
+int do_nor(cmd_tbl_t * cmdtp, int flag, int argc, char *argv[])
+{
+	ulong addr, off;
+	size_t size;
+	char *cmd;
+
+	/* at least two arguments please */
+	if (argc < 2)
+		goto usage1;
+
+	cmd = argv[1];
+
+	if (strncmp(cmd, "read", 4) == 0) {
+
+		printf("\nNOR Read.. ");
+
+		if (argc < 4)
+			goto usage1;
+
+		addr = (ulong)simple_strtoul(argv[2], NULL, 16);
+		off = (ulong)simple_strtoul(argv[3], NULL, 16);
+		size = (ulong)simple_strtoul(argv[4], NULL, 16);
+
+		printf ("## RAM Addr         %x ...\n", addr);
+		printf ("## NOR Flash Offset %x ...\n", off);
+		printf ("## Image size       %x ...\n", size);
+	
+		puts("U-Boot -- Copying from NOR flash\n");
+/*		nx_nor_init (0) ;*/
+		//nx_download_data_from_nor_flash(0x180000, 0x8000, 0x400000, 2, 0) ;
+	/*	nx_download_data_from_nor_flash(off, addr, size, 2, 0) ;*/
+
+//		static inline int nor_read(nor_info_t *info, loff_t ofs, size_t *len, u_char *buf)
+
+		printf ("## Image size       %x ...\n", *((size_t *)(&size)));
+
+		nor_read(&nor_info, (loff_t)off, (size_t *)(&size), (u_char *)addr) ;
+
+
+		puts("U-Boot -- Copying from NOR flash.....Done\n");
+		
+	} else {
+		printf("Unknown NOR command suffix '%s'.\n");
+		return 1;
+	}
+
+		return 0 ;
+
+usage1:
+	cmd_usage(cmdtp);
+	return 1;
+}
+
+U_BOOT_CMD(nor, CONFIG_SYS_MAXARGS, 1, do_nor,
+	"NOR sub-system",
+	"info - read from NOR Flash\n"
+	"cmd usage - \n"	
+	"nor read addr off size\n"		
+	"addr - RAM address where Image is copied\n"			
+	"off - Image offset in Flash\n"			
+	"size - Size of Image to be copied\n"				
+);
+
diff -Naur u-boot-2009.08/common/cmd_nor.c u-boot-2009.08_alpha2/common/cmd_nor.c
--- u-boot-2009.08/common/cmd_nor.c	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/common/cmd_nor.c	2010-01-13 17:51:26.000000000 -0600
@@ -0,0 +1,128 @@
+/*
+ * Driver for NOR support, Makarand Pawagi
+ */
+
+#include <common.h>
+
+
+/*
+ *
+ * New NOR support - Makarand Pawagi
+ *
+ */
+#include <common.h>
+#include <linux/mtd/mtd.h>
+
+#include <command.h>
+#include <watchdog.h>
+#include <malloc.h>
+#include <asm/byteorder.h>
+#include <nor.h>
+
+
+int do_nor(cmd_tbl_t * cmdtp, int flag, int argc, char *argv[])
+{
+	ulong addr, off;
+	size_t size;
+	char *cmd;
+
+	/* at least two arguments please */
+	if (argc < 2)
+		goto usage1;
+
+	cmd = argv[1];
+
+#if defined(CONFIG_CMD_NOR)
+	if (strncmp(cmd, "read", 4) == 0) {
+
+		printf("\nNOR Read.. ");
+
+		if (argc < 4)
+			goto usage1;
+
+		addr = (ulong)simple_strtoul(argv[2], NULL, 16);
+		off = (ulong)simple_strtoul(argv[3], NULL, 16);
+		size = (ulong)simple_strtoul(argv[4], NULL, 16);
+
+		printf ("## RAM Addr         %x ...\n", addr);
+		printf ("## NOR Flash Offset %x ...\n", off);
+		printf ("## Image size       %x ...\n", size);
+	
+		puts("U-Boot -- Copying from NOR flash\n");
+
+		nor_read(&nor_info, (loff_t)off, (size_t *)(&size), (u_char *)addr) ;
+
+		puts("U-Boot -- Copying from NOR flash.....Done\n");
+		
+	} 
+   else if(strncmp(cmd, "write", 4) == 0) {
+
+		printf("\nNOR Write.. ");
+
+		if (argc < 4)
+			goto usage1;
+
+		addr = (ulong)simple_strtoul(argv[2], NULL, 16);
+		off = (ulong)simple_strtoul(argv[3], NULL, 16);
+		size = (ulong)simple_strtoul(argv[4], NULL, 16);
+
+		printf ("## RAM Addr         %x ...\n", addr);
+		printf ("## NOR Flash Offset %x ...\n", off);
+		printf ("## Image size       %x ...\n", size);
+	
+		puts("U-Boot -- Writing NOR flash\n");
+
+		nor_write(&nor_info, (loff_t)off, (size_t *)(&size), (u_char *)addr) ;
+
+		puts("U-Boot -- Writing NOR flash.....Done\n");
+		
+	} 
+   else if(strncmp(cmd, "erase", 4) == 0) {
+
+		printf("\nNOR Erase.. ");
+
+		if (argc < 4)
+			goto usage1;
+
+	   off = (ulong)simple_strtoul(argv[2], NULL, 16);
+		size = (ulong)simple_strtoul(argv[3], NULL, 16);
+	
+		printf ("## NOR Flash Offset %x ...\n", off);
+		printf ("## Image size       %x ...\n", size);
+	
+		puts("U-Boot -- Erasing NOR flash\n");
+
+      nor_erase_info.addr = off;
+      nor_erase_info.len = size;
+		nor_erase(&nor_info, &nor_erase_info) ;
+    
+		puts("U-Boot -- Erasing NOR flash.....Done\n");
+		
+	} 
+   else {
+		printf("Unknown NOR command suffix '%s'.\n");
+		return 1;
+	}
+#else
+		printf("NOR sub-system Not Supported.\n");
+#endif
+		return 0 ;
+
+usage1:
+	cmd_usage(cmdtp);
+	return 1;
+}
+
+U_BOOT_CMD(nor, CONFIG_SYS_MAXARGS, 1, do_nor,
+	"NOR sub-system",
+	"info - read/write from NOR Flash\n"
+	"cmd usage - \n"	
+	"nor read addr off size\n"	
+	"nor write addr off size\n"
+	"nor read write off size\n"
+	"nor erase off size\n"
+	"addr - RAM address where Image is copied\n"			
+	"off - Image offset in Flash\n"			
+	"size - Size of Image to be copied\n"				
+);
+
diff -Naur u-boot-2009.08/common/env_flash.c u-boot-2009.08_alpha2/common/env_flash.c
--- u-boot-2009.08/common/env_flash.c	2009-08-31 12:57:42.000000000 -0500
+++ u-boot-2009.08_alpha2/common/env_flash.c	2010-01-15 20:20:02.000000000 -0600
@@ -31,6 +31,8 @@
 #include <environment.h>
 #include <linux/stddef.h>
 #include <malloc.h>
+#include <nor.h>
+
 
 DECLARE_GLOBAL_DATA_PTR;
 
@@ -64,7 +66,8 @@
 
 #else /* ! ENV_IS_EMBEDDED */
 
-env_t *env_ptr = (env_t *)CONFIG_ENV_ADDR;
+env_t *env_ptr = (env_t *)((ulong)CONFIG_ENV_ADDR | 0xC00E0000);
+//env_t *env_ptr = (env_t *)CONFIG_ENV_ADDR
 #ifdef CMD_SAVEENV
 static env_t *flash_addr = (env_t *)CONFIG_ENV_ADDR;
 #endif
@@ -245,7 +248,10 @@
 
 int  env_init(void)
 {
-	if (crc32(0, env_ptr->data, ENV_SIZE) == env_ptr->crc) {
+  //long flash_sect_addr;
+   ulong len = ENV_SIZE;
+ //flash_sect_addr = ((ulong)flash_addr) & ~(CONFIG_ENV_SECT_SIZE-1);
+	if (crc32(0, env_ptr->data, len) == env_ptr->crc) {
 		gd->env_addr  = (ulong)&(env_ptr->data);
 		gd->env_valid = 1;
 		return(0);
@@ -281,12 +287,16 @@
 		flash_sect_addr, (ulong)flash_addr, flash_offset);
 
 	/* copy old contents to temporary buffer */
-	memcpy (env_buffer, (void *)flash_sect_addr, CONFIG_ENV_SECT_SIZE);
+	memcpy (env_buffer, (void *)(flash_sect_addr | 0xC00E0000), CONFIG_ENV_SECT_SIZE);
 
 	/* copy current environment to temporary buffer */
-	memcpy ((uchar *)((unsigned long)env_buffer + flash_offset),
+	memcpy ((uchar *)((unsigned long)env_buffer),
 		env_ptr,
 		CONFIG_ENV_SIZE);
+	/* copy current environment to temporary buffer */
+/*	memcpy ((uchar *)((unsigned long)env_buffer + flash_offset),
+		gd->env_addr,
+		CONFIG_ENV_SIZE);*/
 
 	len	 = CONFIG_ENV_SECT_SIZE;
 #else
@@ -301,19 +311,27 @@
 	/* otherwise we will get stack problems on loading 128 KB environment */
 	end_addr = flash_sect_addr + 0x20000 - 1;
 #endif
-
+#if 0
 	debug ("Protect off %08lX ... %08lX\n",
 		(ulong)flash_sect_addr, end_addr);
 
 	if (flash_sect_protect (0, flash_sect_addr, end_addr))
 		return 1;
-
+#endif
 	puts ("Erasing Flash...");
+#if 0
 	if (flash_sect_erase (flash_sect_addr, end_addr))
 		return 1;
+#endif
+   nor_erase_info.addr = flash_sect_addr;
+   nor_erase_info.len = end_addr - flash_sect_addr;
+   nor_erase(&nor_info, &nor_erase_info) ;
 
 	puts ("Writing to Flash... ");
-	rc = flash_write((char *)env_buffer, flash_sect_addr, len);
+   nor_write(&nor_info, (loff_t)flash_sect_addr, (size_t *)(&len), (u_char *)env_buffer) ;
+  
+#if 0
+   rc = flash_write((char *)env_buffer, flash_sect_addr, len); 
 	if (rc != 0) {
 		flash_perror (rc);
 		rcode = 1;
@@ -323,6 +341,7 @@
 
 	/* try to re-protect */
 	(void) flash_sect_protect (1, flash_sect_addr, end_addr);
+#endif
 	return rcode;
 }
 
@@ -375,7 +394,7 @@
 		      "reading environment; recovered successfully\n\n");
 #endif /* CONFIG_ENV_ADDR_REDUND */
 #ifdef CMD_SAVEENV
-	memcpy (env_ptr, (void*)flash_addr, CONFIG_ENV_SIZE);
+	memcpy (env_ptr, (void*)((ulong)flash_addr | 0xC00E0000), CONFIG_ENV_SIZE);
 #endif
 #endif /* ! ENV_IS_EMBEDDED || CONFIG_ENV_ADDR_REDUND */
 }
diff -Naur u-boot-2009.08/common/Makefile u-boot-2009.08_alpha2/common/Makefile
--- u-boot-2009.08/common/Makefile	2010-01-18 19:09:08.000000000 -0600
+++ u-boot-2009.08_alpha2/common/Makefile	2009-12-17 10:10:28.000000000 -0600
@@ -117,6 +117,7 @@
 COBJS-$(CONFIG_MP) += cmd_mp.o
 COBJS-$(CONFIG_CMD_MTDPARTS) += cmd_mtdparts.o
 COBJS-y += cmd_nand.o
+COBJS-y += cmd_nor.o
 COBJS-$(CONFIG_CMD_NET) += cmd_net.o
 COBJS-$(CONFIG_CMD_ONENAND) += cmd_onenand.o
 COBJS-$(CONFIG_CMD_OTP) += cmd_otp.o
diff -Naur u-boot-2009.08/common/Makefile~ u-boot-2009.08_alpha2/common/Makefile~
--- u-boot-2009.08/common/Makefile~	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/common/Makefile~	2009-12-17 10:10:28.000000000 -0600
@@ -0,0 +1,193 @@
+#
+# (C) Copyright 2004-2006
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+include $(TOPDIR)/config.mk
+
+LIB	= $(obj)libcommon.a
+
+AOBJS	=
+
+# core
+COBJS-y += main.o
+COBJS-y += circbuf.o
+COBJS-y += console.o
+COBJS-y += command.o
+COBJS-y += dlmalloc.o
+COBJS-y += exports.o
+COBJS-$(CONFIG_SYS_HUSH_PARSER) += hush.o
+COBJS-y += image.o
+COBJS-y += memsize.o
+COBJS-y += s_record.o
+COBJS-$(CONFIG_SERIAL_MULTI) += serial.o
+COBJS-y += stdio.o
+COBJS-y += xyzModem.o
+
+# core command
+COBJS-y += cmd_boot.o
+COBJS-y += cmd_bootm.o
+COBJS-y += cmd_nvedit.o
+
+# environment
+COBJS-y += env_common.o
+COBJS-$(CONFIG_ENV_IS_IN_DATAFLASH) += env_dataflash.o
+COBJS-$(CONFIG_ENV_IS_IN_EEPROM) += env_eeprom.o
+COBJS-$(CONFIG_ENV_IS_EMBEDDED) += env_embedded.o
+COBJS-$(CONFIG_ENV_IS_IN_EEPROM) += env_embedded.o
+COBJS-$(CONFIG_ENV_IS_IN_FLASH) += env_embedded.o
+COBJS-$(CONFIG_ENV_IS_IN_NVRAM) += env_embedded.o
+COBJS-$(CONFIG_ENV_IS_IN_FLASH) += env_flash.o
+COBJS-$(CONFIG_ENV_IS_IN_MG_DISK) += env_mgdisk.o
+COBJS-$(CONFIG_ENV_IS_IN_NAND) += env_nand.o
+COBJS-$(CONFIG_ENV_IS_IN_NVRAM) += env_nvram.o
+COBJS-$(CONFIG_ENV_IS_IN_ONENAND) += env_onenand.o
+COBJS-$(CONFIG_ENV_IS_IN_SPI_FLASH) += env_sf.o
+COBJS-$(CONFIG_ENV_IS_NOWHERE) += env_nowhere.o
+
+# command
+COBJS-$(CONFIG_CMD_AMBAPP) += cmd_ambapp.o
+COBJS-$(CONFIG_SOURCE) += cmd_source.o
+COBJS-$(CONFIG_CMD_SOURCE) += cmd_source.o
+COBJS-$(CONFIG_CMD_BDI) += cmd_bdinfo.o
+COBJS-$(CONFIG_CMD_BEDBUG) += bedbug.o cmd_bedbug.o
+COBJS-$(CONFIG_CMD_BMP) += cmd_bmp.o
+COBJS-$(CONFIG_CMD_BOOTLDR) += cmd_bootldr.o
+COBJS-$(CONFIG_CMD_CACHE) += cmd_cache.o
+COBJS-$(CONFIG_CMD_CONSOLE) += cmd_console.o
+COBJS-$(CONFIG_CMD_CPLBINFO) += cmd_cplbinfo.o
+COBJS-$(CONFIG_DATAFLASH_MMC_SELECT) += cmd_dataflash_mmc_mux.o
+COBJS-$(CONFIG_CMD_DATE) += cmd_date.o
+ifdef CONFIG_4xx
+COBJS-$(CONFIG_CMD_SETGETDCR) += cmd_dcr.o
+endif
+ifdef CONFIG_POST
+COBJS-$(CONFIG_CMD_DIAG) += cmd_diag.o
+endif
+COBJS-$(CONFIG_CMD_DISPLAY) += cmd_display.o
+COBJS-$(CONFIG_CMD_DTT) += cmd_dtt.o
+COBJS-$(CONFIG_ENV_IS_IN_EEPROM) += cmd_eeprom.o
+COBJS-$(CONFIG_CMD_EEPROM) += cmd_eeprom.o
+COBJS-$(CONFIG_CMD_ELF) += cmd_elf.o
+COBJS-$(CONFIG_CMD_EXT2) += cmd_ext2.o
+COBJS-$(CONFIG_CMD_FAT) += cmd_fat.o
+COBJS-$(CONFIG_CMD_FDC)$(CONFIG_CMD_FDOS) += cmd_fdc.o
+COBJS-$(CONFIG_OF_LIBFDT) += cmd_fdt.o fdt_support.o
+COBJS-$(CONFIG_CMD_FDOS) += cmd_fdos.o
+COBJS-$(CONFIG_CMD_FLASH) += cmd_flash.o
+ifdef CONFIG_FPGA
+COBJS-$(CONFIG_CMD_FPGA) += cmd_fpga.o
+endif
+COBJS-$(CONFIG_CMD_I2C) += cmd_i2c.o
+COBJS-$(CONFIG_CMD_IDE) += cmd_ide.o
+COBJS-$(CONFIG_CMD_IMMAP) += cmd_immap.o
+COBJS-$(CONFIG_CMD_IRQ) += cmd_irq.o
+COBJS-$(CONFIG_CMD_ITEST) += cmd_itest.o
+COBJS-$(CONFIG_CMD_JFFS2) += cmd_jffs2.o
+COBJS-$(CONFIG_CMD_LICENSE) += cmd_license.o
+COBJS-y += cmd_load.o
+COBJS-$(CONFIG_LOGBUFFER) += cmd_log.o
+COBJS-$(CONFIG_ID_EEPROM) += cmd_mac.o
+COBJS-$(CONFIG_CMD_MEMORY) += cmd_mem.o
+COBJS-$(CONFIG_CMD_MFSL) += cmd_mfsl.o
+COBJS-$(CONFIG_CMD_MG_DISK) += cmd_mgdisk.o
+COBJS-$(CONFIG_MII) += miiphyutil.o
+COBJS-$(CONFIG_CMD_MII) += miiphyutil.o
+COBJS-$(CONFIG_CMD_MII) += cmd_mii.o
+COBJS-$(CONFIG_CMD_MISC) += cmd_misc.o
+COBJS-$(CONFIG_CMD_MMC) += cmd_mmc.o
+COBJS-$(CONFIG_MP) += cmd_mp.o
+COBJS-$(CONFIG_CMD_MTDPARTS) += cmd_mtdparts.o
+COBJS-y += cmd_nand.o
+COBJS-$(CONFIG_CMD_NET) += cmd_net.o
+COBJS-$(CONFIG_CMD_ONENAND) += cmd_onenand.o
+COBJS-$(CONFIG_CMD_OTP) += cmd_otp.o
+ifdef CONFIG_PCI
+COBJS-$(CONFIG_CMD_PCI) += cmd_pci.o
+endif
+COBJS-y += cmd_pcmcia.o
+COBJS-$(CONFIG_CMD_PORTIO) += cmd_portio.o
+COBJS-$(CONFIG_CMD_REGINFO) += cmd_reginfo.o
+COBJS-$(CONFIG_CMD_REISER) += cmd_reiser.o
+COBJS-$(CONFIG_CMD_SATA) += cmd_sata.o
+COBJS-$(CONFIG_CMD_SF) += cmd_sf.o
+COBJS-$(CONFIG_CMD_SCSI) += cmd_scsi.o
+COBJS-$(CONFIG_CMD_SETEXPR) += cmd_setexpr.o
+COBJS-$(CONFIG_CMD_SPI) += cmd_spi.o
+COBJS-$(CONFIG_CMD_SPIBOOTLDR) += cmd_spibootldr.o
+COBJS-$(CONFIG_CMD_STRINGS) += cmd_strings.o
+COBJS-$(CONFIG_CMD_TERMINAL) += cmd_terminal.o
+COBJS-$(CONFIG_CMD_TSI148) += cmd_tsi148.o
+COBJS-$(CONFIG_CMD_UBI) += cmd_ubi.o
+COBJS-$(CONFIG_CMD_UBIFS) += cmd_ubifs.o
+COBJS-$(CONFIG_CMD_UNIVERSE) += cmd_universe.o
+ifdef CONFIG_CMD_USB
+COBJS-y += cmd_usb.o
+COBJS-y += cmd_sari.o
+COBJS-y += usb.o
+COBJS-$(CONFIG_USB_STORAGE) += usb_storage.o
+COBJS-$(CONFIG_USB_NETWORK) += usb_network.o
+endif
+COBJS-$(CONFIG_CMD_XIMG) += cmd_ximg.o
+COBJS-$(CONFIG_YAFFS2) += cmd_yaffs2.o
+COBJS-$(CONFIG_VFD) += cmd_vfd.o
+
+# others
+COBJS-$(CONFIG_DDR_SPD) += ddr_spd.o
+COBJS-$(CONFIG_HWCONFIG) += hwconfig.o
+COBJS-$(CONFIG_CONSOLE_MUX) += iomux.o
+COBJS-y += flash.o
+COBJS-$(CONFIG_CMD_KGDB) += kgdb.o
+COBJS-$(CONFIG_KALLSYMS) += kallsyms.o
+COBJS-$(CONFIG_LCD) += lcd.o
+COBJS-$(CONFIG_LYNXKDI) += lynxkdi.o
+COBJS-$(CONFIG_MODEM_SUPPORT) += modem.o
+COBJS-$(CONFIG_UPDATE_TFTP) += update.o
+COBJS-$(CONFIG_USB_KEYBOARD) += usb_kbd.o
+
+
+COBJS	:= $(sort $(COBJS-y))
+SRCS	:= $(AOBJS:.o=.S) $(COBJS:.o=.c)
+OBJS	:= $(addprefix $(obj),$(AOBJS) $(COBJS))
+
+CPPFLAGS += -I..
+
+all:	$(LIB) $(AOBJS)
+
+$(LIB): $(obj).depend $(OBJS)
+	$(AR) $(ARFLAGS) $@ $(OBJS)
+
+$(obj)env_embedded.o: $(src)env_embedded.c $(obj)../tools/envcrc
+	$(CC) $(AFLAGS) -Wa,--no-warn \
+		-DENV_CRC=$(shell $(obj)../tools/envcrc) \
+		-c -o $@ $(src)env_embedded.c
+
+$(obj)../tools/envcrc:
+	$(MAKE) -C ../tools
+
+#########################################################################
+
+# defines $(obj).depend target
+include $(SRCTREE)/rules.mk
+
+sinclude $(obj).depend
+
+#########################################################################
diff -Naur u-boot-2009.08/cpu/arm_cortexa8/pnx84xx/timer.c u-boot-2009.08_alpha2/cpu/arm_cortexa8/pnx84xx/timer.c
--- u-boot-2009.08/cpu/arm_cortexa8/pnx84xx/timer.c	2010-01-18 19:09:08.000000000 -0600
+++ u-boot-2009.08_alpha2/cpu/arm_cortexa8/pnx84xx/timer.c	2010-01-18 17:21:23.000000000 -0600
@@ -99,8 +99,9 @@
 /* delay x useconds */
 void udelay(unsigned long usec)
 {
-	unsigned long tmo = TO_TICKS(usec);
-	unsigned long now, last = readl(&timer_base->tcrr);
+	//unsigned long tmo = TO_USEC(usec);
+  unsigned long tmo = usec;
+  unsigned long now, last = readl(&timer_base->tcrr);
 
 	while (tmo > 0) {
 		now = readl(&timer_base->tcrr);
diff -Naur u-boot-2009.08/drivers/mtd/nor/Makefile u-boot-2009.08_alpha2/drivers/mtd/nor/Makefile
--- u-boot-2009.08/drivers/mtd/nor/Makefile	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor/Makefile	2009-12-21 10:18:03.000000000 -0600
@@ -0,0 +1,59 @@
+#
+# (C) Copyright 2006
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+include $(TOPDIR)/config.mk
+
+LIB	:= $(obj)libnor.a
+
+ifdef CONFIG_CMD_NOR
+COBJS-y += nor.o
+COBJS-y += nor_flashdescr.o
+COBJS-y += nor_setupflashdescr.o
+COBJS-y += nor_flashamd.o
+#COBJS-y += dmac.o
+#COBJS-y += ip2070gcs.o
+endif
+HOSTCFLAGS += -I $(_TMROOT)/inc
+HOSTCFLAGS += -I $(_TMTGTBUILDROOT)/cfgtoh/$(STB_HW_CONFIG)-bare
+HOSTCFLAGS += -I $(SRCTREE)/lib_arm
+HOSTCFLAGS += -D__UBOOT__
+CFLAGS += $(HOSTCFLAGS)
+COBJS	:= $(COBJS-y)
+SRCS	:= $(COBJS:.o=.c)
+OBJS	:= $(addprefix $(obj),$(COBJS))
+
+all:	$(LIB)
+
+$(LIB):	$(OBJS)
+	$(AR) $(ARFLAGS) $@ $(OBJS)
+
+$(LIB):	$(OBJS)
+	$(AR) $(ARFLAGS) $@ $(OBJS)
+#########################################################################
+
+# defines $(obj).depend target
+include $(SRCTREE)/rules.mk
+
+sinclude $(obj).depend
+
+#########################################################################
diff -Naur u-boot-2009.08/drivers/mtd/nor/Makefile~ u-boot-2009.08_alpha2/drivers/mtd/nor/Makefile~
--- u-boot-2009.08/drivers/mtd/nor/Makefile~	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor/Makefile~	2009-12-17 10:10:28.000000000 -0600
@@ -0,0 +1,51 @@
+#
+# (C) Copyright 2006
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+include $(TOPDIR)/config.mk
+
+LIB	:= $(obj)libnor.a
+
+ifdef CONFIG_CMD_NOR
+COBJS-y += nor.o
+COBJS-y += ip2016nor.o
+COBJS-y += ip1902dmac.o
+COBJS-y += ip2070gcs.o
+endif
+
+COBJS	:= $(COBJS-y)
+SRCS	:= $(COBJS:.o=.c)
+OBJS	:= $(addprefix $(obj),$(COBJS))
+
+all:	$(LIB)
+
+$(LIB):	$(obj).depend $(OBJS)
+	$(AR) $(ARFLAGS) $@ $(OBJS)
+
+#########################################################################
+
+# defines $(obj).depend target
+include $(SRCTREE)/rules.mk
+
+sinclude $(obj).depend
+
+#########################################################################
diff -Naur u-boot-2009.08/drivers/mtd/nor/nor.c u-boot-2009.08_alpha2/drivers/mtd/nor/nor.c
--- u-boot-2009.08/drivers/mtd/nor/nor.c	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor/nor.c	2009-12-21 09:23:43.000000000 -0600
@@ -0,0 +1,653 @@
+/*
+#===========================================================
+#        COPYRIGHT (c) NXP B.V. 2009
+#        All rights are reserved. Reproduction in whole or in part is
+#        prohibited without the written consent of the copyright owner.
+#
+#        Author   : Karthik Murthy
+#
+#        Filename : nor.c
+#
+#        Purpose  : Mini NOR Flash driver
+#===========================================================
+*/
+/*! 
+ *  @A9 DDR Controller Driver
+ *  @nor.c*
+ *  <pre>
+ *  $Author: murthyk $
+ *  $Revision: 133386 $
+ *  $Date: 2009-12-03 01:26:52 -0600 (Thu, 03 Dec 2009) $
+ *
+ *  Revision history
+ *  $Log: $
+ *  
+ *
+ *  $KeysEnd$
+ *  </pre>
+ *
+ */
+#include "stbcfg.h" 
+#include "ldr_types.h"
+#include "ldr_common.h"
+#include "board.h"
+#include "ip2070gcs.h"
+#include "dmac.h"
+#include "nor.h"
+#include "nor_flashdescr.h"
+
+
+//#define NOR_MAX_BOOT_IMAGE_LEN_ALLOWED    2048
+#define NOR_DMA_CHAN_CONFIG_VAL                 0xC001
+#define NOR_DMA_CHAN_CTL_VAL_SWIDTH_32B  0x8D4B6200
+#define NOR_DMA_CHAN_CTL_VAL_SWIDTH_8B    0x8D436800
+#define NOR_DMA_CHAN_CTL_VAL_SWIDTH_16B  0x8D476400
+
+#if 0 // DOWNLOAD_SERIAL_SUPPORT==YES
+ #include "libfuncs.h"
+#endif
+
+#define FLASH_ROMS_COPY_CODE_SIZE  4096       /* 4 K ... current size is about 800 bytes */
+
+#define SSP_PROTECTION_START 0xF0000050
+#define SSP_PROTECTION_END   0xF0000057
+#define NCROM_BASE ROM_BASE
+
+/************************/
+/* External Definitions */
+/************************/
+
+extern u_int8 NumROMBanks;
+
+#if 0 // DOWNLOAD_SERIAL_SUPPORT==YES
+extern u_int8 *FirstCodeAddr;
+extern bool   PermissionToWriteBootSector;
+extern char   GetUserChoice(int iMax);
+#endif
+
+/******************************************/
+/* Local Definitions and Global Variables */
+/******************************************/
+extern BANK_INFO Bank[];
+extern int CurrentBank;
+
+extern int (*write_flash_array[MAX_NUM_FLASH_ROM_BANKS])(void *addr, void *buffer, int size);
+extern int (*erase_flash_array[MAX_NUM_FLASH_ROM_BANKS])(void *addr, void (*callback)(void));
+extern int (*erase_flash_bank[MAX_NUM_FLASH_ROM_BANKS])(void *addr, void (*callback)(void));
+
+/**************************/
+/* Function Prototypes    */
+/**************************/
+int nx_nor_block_erase(void *addr, int block_size, void (*callback)(void));
+int nx_nor_erase(void *addr, void (*callback)(void));
+bool block_check(void *addr, int block_size);
+bool block_check_nosem(void *addr, int block_size);
+int write_flash(void *addr, void *buffer, int size);
+static int erase_flash(void *addr, void (*callback)(void));
+
+u_int32 internal_get_device_width(devicetype_t type)
+{
+   u_int32 value = 0;
+   if (type >= NOR_x8_21bit && type <= NOR_x8_27bit)
+   {
+      value = 0;
+   }
+   else if (type >= NOR_x16_21bit && type <= NOR_x16_27bit)
+   {
+      value = 1;
+   }
+   else /* NOR_x16_ADM */
+   {
+      value = 2;
+   }
+   return value;
+}
+
+retcode_t internal_nor_flash_read(
+            u_int32        offset, 
+            u_int8         *buffer,
+            u_int32        length )
+{
+    u_int32 i, src, dest ;
+    u_int32 dma_chan_control=0;
+    u_int32 dma_chan_config=0;
+    retcode_t   ret = RETCODE_OK;
+
+    /* length must be a multiple of 2K */
+    if ((length & (NOR_FLASH_BULK_XFER_SIZE -1UL)) != 0)    
+    {
+      /* throw error trace */
+      return RETCODE_BAD_PARAMETER;
+    }
+
+    /* Tell the world that NOR input params are not crazy - throw trace */
+    //myprint(" INFO: Entered NOR DOWNLOAD API, Params OK .....\n") ;
+    src = offset  ;  /* Src is the address in the flash device */
+    dest = (u_int32)buffer ;  
+    dma_chan_config = NOR_DMA_CHAN_CONFIG_VAL ; //0xC001;
+    dma_chan_control = NOR_DMA_CHAN_CTL_VAL_SWIDTH_32B ; //0x8D4B6200;
+        
+    for ( i = 0 ; i < length ;  i += NOR_FLASH_BULK_XFER_SIZE) 
+    {
+        /* start the DMAC */
+        nx_dmac_trans_start( dest,\
+                                             (NX_GCS_NOR_AHB_BUF+src),\
+                                             dma_chan_control,\
+                                             dma_chan_config);
+        //myprint("NOR: DMA started\n") ;
+        /* complete the DMA transfer */
+        ret = nx_dmac_trans_comp();
+        //myprint("NOR: DMA completed\n") ;
+        if (ret == RETCODE_FAILED)
+        {
+             myprint("NOR: ERROR! DMA error \n") ;
+             break;
+        }
+        dest += NOR_FLASH_BULK_XFER_SIZE ;
+        src += NOR_FLASH_BULK_XFER_SIZE ;
+    }
+    return (ret);
+}
+
+/********************************************************************/
+/*  internal_flash_get_ncrom_base                                   */
+/*                                                                  */
+/*  PARAMETERS:                                                     */
+/*      None                                                        */
+/*                                                                  */
+/*  DESCRIPTION:                                                    */
+/*      return Non Cache ROM Base, when MMU is disabled or DCACHE   */
+/*      is disabled, the Non Cache ROM Base should be zero, or      */
+/*      it should be 0x08000000.                                    */
+/*                                                                  */
+/*  RETURNS:                                                        */
+/*      return the Non Cache ROM Base.                              */
+/********************************************************************/
+u_int32 internal_flash_get_ncrom_base(void)
+{
+   u_int32 uNCRomBase = NCROM_BASE;
+
+   return uNCRomBase;
+} /* internal_flash_get_ncrom_base */
+
+
+/********************************************************************/
+/*  SetFlashWPLine                                                 */
+/*                                                                  */
+/*  PARAMETERS:                                                     */
+/*      set  - TRUE to enable flash programming, FALSE to protect.  */
+/*                                                                  */
+/*  DESCRIPTION:                                                    */
+/*      If the target IRD uses a GPIO to implement flash write      */
+/*      protection, this function will set it appropriately.        */
+/*                                                                  */
+/*  RETURNS:                                                        */
+/*      Nothing.                                                    */
+/********************************************************************/
+static void SetFlashWPLine(bool set)
+{
+   
+   
+   /* in PECOS revB, the ROM write protection is added, so need to unlock
+      the ROM write protection for ROM descriptor 0 and 1. */
+   
+         /*
+          * per hw engineer: write a start address and end address combination, 
+          * where the start address is strictly larger than end address -> such 
+          * combinations has the effect of making the whole address space writable 
+          * in the hardware implementation. 
+          */
+         
+         
+         /* lock it */
+        
+         /* unlock the start and end addresses */
+         
+         /*
+          * write the start address and end address as approperate, 
+          * so that the region is protected by the write access. 
+          */
+         
+         
+         /* lock it */
+     
+   
+}
+
+
+/****************************************************/
+/* Generic function to read flash memory, any type. */
+/****************************************************/
+int read_flash(void *addr, int count, void *buffer)
+{
+   u_int32 uNCRomBase;
+
+   //uNCRomBase = internal_flash_get_ncrom_base();
+   
+  // ENTER_READ_MODE();
+   
+//   FCopy((char*)buffer, (char *)((u_int32)addr | uNCRomBase), count);
+   internal_nor_flash_read(
+      ((u_int32)addr), 
+      (u_int8*)buffer, 
+      (u_int32)count);
+   
+   return count;
+}
+
+#if 0
+/*****************************************************************************************/
+/* This is the low level flash erase sector function.                                    */
+/*****************************************************************************************/
+int nx_nor_block_erase(void *addr, int block_size)
+{
+    int result=0;
+
+    /*
+     Set the current bank according to the addr
+    */
+    FindCurrentBank(addr);
+     
+    /*
+     If the area is already erased, don't erase it again
+    */
+   if(block_check_nosem((void *)((u_int32)addr | (u_int32)NCROM_BASE) , block_size)==FALSE)
+    {
+
+       /*
+         Erase the sector containing addr
+        */
+        result = erase_flash(addr, NULL);  
+
+    }
+
+
+   return result;
+}
+#endif
+#if 0
+/*****************************************************************************************/
+/* This is the low level flash erase bank function.                                      */
+/*****************************************************************************************/
+int nx_nor_erase(void *addr)
+{
+    int result=0;
+    
+    /*
+     Set the current bank according to the addr
+    */
+    FindCurrentBank(addr);
+     
+    /*
+     If the area is already erased, don't erase it again
+    */
+    if(block_check_nosem(addr, (int)Bank[CurrentBank].BankSize)==FALSE)
+    {
+        /*
+         Erase the sector containing addr
+        */
+        result = erase_flash_bank[CurrentBank]((void *)Bank[CurrentBank].BankBase, NULL);
+        clear_ssp_flash_header_after_erase((void *)Bank[CurrentBank].BankBase);
+    }
+    
+   return result;
+}
+#endif
+
+/*********************************************************************/
+/* This function checks to see if the flash block is all ff's or not */
+/* Return Value:        TRUE if block is all ff's                    */
+/*                      FALSE if otherwise                           */
+/*********************************************************************/
+bool block_check_nosem(void *addr, int block_size)
+{
+#if 0
+    int i;
+    bool erased_flag = TRUE;
+    volatile u_int8 *dest;
+    for(i = 0, dest = (u_int8 *)addr; i < block_size; i++, dest++)
+    {       
+        if(*dest != 0xff)
+        {
+            erased_flag = FALSE;
+            break;
+        }
+    }
+    return (erased_flag);
+#else
+    return (FALSE);
+#endif
+}
+
+/*********************************************************************/
+/* This is a wrapper for block_check_nosem that claims the driver    */
+/* access semaphore before checking the block. This is required since*/
+/* block_check function is needed both from other functions at the   */
+/* same level (eg. block_erase) and from higher level APIs.          */
+/*********************************************************************/
+bool block_check(void *addr, int block_size)
+{
+    bool erased_flag = TRUE;
+
+    erased_flag = block_check_nosem(addr, block_size);
+
+    return (erased_flag);
+}
+
+int write_flash(void *addr, void *buffer, int size)
+{
+    int	rc;
+
+   SetFlashWPLine(TRUE);
+   
+#if 0 //(defined(DLOAD) || (RTOS == LINUX))
+       /* For the flash download utility, we just call the function */
+       /* check the ssp flash header and make sure they will be forced to zero */
+       fix_ssp_flash_header_in_buffer(addr, buffer, size);
+       rc = write_flash_array[CurrentBank](addr, buffer, size);
+#else
+       #if 0
+       /* Are we running from ROM and the same bank we're flashing? */
+       if(((u_int32)&write_flash >= Bank[CurrentBank].BankBase) &&
+          ((u_int32)&write_flash < (Bank[CurrentBank].BankBase +
+                                    Bank[CurrentBank].BankSize)))
+       {
+           /* Running from ROM and the same bank we're flashing to */
+           rc = CopyAndCallRoutine((u_int8 *)write_flash_array[CurrentBank],
+         (u_int32) addr, (u_int32) buffer, (u_int32) size);
+       }
+       else
+       #endif
+       {
+           /* Either running from RAM or not running from the same ROM
+             bank we're flashing to
+         */
+           rc = write_flash_array[CurrentBank](addr, buffer, size);
+       }
+#endif /* !DLOAD */
+
+    SetFlashWPLine(FALSE);
+    
+    return (rc);
+}
+
+static int erase_flash(void *addr, void (*callback)(void))
+{
+    int	rc;
+
+   SetFlashWPLine(TRUE);
+
+#if 0 //( (defined(DLOAD)) || (RTOS==LINUX))
+    /* For the flash download utility, we just call the function */
+    rc = erase_flash_array[CurrentBank](addr, callback);
+    rc = clear_ssp_flash_header_after_erase(addr);
+#else
+    #if 0
+    /* Are we running from ROM and the same bank we're flashing? */
+    if(((u_int32)&write_flash >= Bank[CurrentBank].BankBase) &&
+       ((u_int32)&write_flash < (Bank[CurrentBank].BankBase +
+                                 Bank[CurrentBank].BankSize)))
+    {
+        /* Running from ROM and the same bank we're flashing to */
+        rc = CopyAndCallRoutine ((u_int8 *)erase_flash_array[CurrentBank],
+                                 (u_int32) addr, (u_int32) callback, (u_int32) NULL);
+    }
+    else
+    #endif
+    {
+        /* Either running from RAM or not running from the same ROM */
+        /* bank we're flashing to                                   */
+        rc = erase_flash_array[CurrentBank](addr, callback);
+    }
+#endif /* !DLOAD */
+
+    SetFlashWPLine(FALSE);
+    
+    return (rc);
+}
+
+int nx_nor_get_flash_ids(int banknum, u_int16 *mfgid, u_int16 *devid)
+{
+   if (banknum >= MAX_NUM_FLASH_ROM_BANKS)
+   {
+      return -1;
+   }
+
+   if (Bank[banknum].BankWidth == 0)
+   {
+      return -1;
+   }
+
+   if ((mfgid == NULL) || (devid == NULL))
+   {
+      return -1;
+   }
+
+   *mfgid = (u_int16)Bank[banknum].pFlashDesc->MfrID;
+   *devid = (u_int16)Bank[banknum].pFlashDesc->DeviceID;
+
+   return 0;
+}
+
+void nx_nor_init (devicetype_t devicetype, flashtype_t flashtype)
+{
+   u_int32 value = 0;
+
+  value = internal_get_device_width(devicetype);
+
+   // DEV_WIDTH 0x1 for 16 bit devices and 0x0 for 8 bit devices
+   writel(value, NX_NOR_DEV_MAIN_CFG(0));
+
+   setupFlashDescriptors(devicetype, TRUE);
+   return;
+}
+
+/*****************************************************************************************/
+/* This is the low level flash erase sector function with callback function.             */
+/*****************************************************************************************/
+int nx_nor_block_erase(void *addr, int block_size, void (*callback)(void))
+{
+    int result=0;
+
+#if 0 // DOWNLOAD_SERIAL_SUPPORT==YES
+    if (!PermissionToWriteBootSector && ((u_int32)addr < (u_int32)FirstCodeAddr))
+    {
+       if (!GetPermissionToWriteBootSector())
+          return FAILURE;
+    }
+#endif
+    /*
+     Set the current bank according to the addr
+    */
+    FindCurrentBank(addr);
+   
+    /*
+     If the area is already erased, don't erase it again
+    */
+    if(block_check_nosem(addr, block_size)==FALSE)
+    {
+        /*
+         Erase the sector containing addr
+        */
+        result = erase_flash(addr, callback); 
+    }
+
+   return result;
+}
+
+/*****************************************************************************************/
+/* This is the API for the  low level flash erase function with callback function.               */
+/*****************************************************************************************/
+int nx_nor_erase(void *addr, void (*callback)(void))
+{
+    int result=0;
+    
+#if 0 // DOWNLOAD_SERIAL_SUPPORT==YES
+    if (!PermissionToWriteBootSector && ((u_int32)addr < (u_int32)FirstCodeAddr))
+    {
+       if (!GetPermissionToWriteBootSector())
+          return FAILURE;
+    }
+#endif
+
+    /*
+     Set the current bank according to the addr
+    */
+    FindCurrentBank(addr);
+     
+    /*
+     If the area is already erased, don't erase it again
+    */
+    if(block_check_nosem(addr, (int)Bank[CurrentBank].BankSize)==FALSE)
+    {
+        /*
+         Erase the sector containing addr
+        */
+        result = erase_flash_bank[CurrentBank]((void *)Bank[CurrentBank].BankBase, callback);
+    }
+    
+   return result;
+}
+
+
+/*****************************************************************************************/
+/* This is the low level flash read function.                                            */
+/* Return value:     number of bytes copied in case of success (should be equal to count */
+/*                   other value in case of failure                                      */
+/*****************************************************************************************/
+int nx_nor_read(void *addr, int count, void *buffer)
+{
+    int result_count;
+   
+    /* Set the current bank according to the addr. */
+    FindCurrentBank(addr);
+
+    result_count = read_flash(addr, count, buffer);
+
+    return result_count;
+}
+
+/*****************************************************************************************/
+/* This is the low level flash write function.  If the flash is 16-bit wide,             */
+/* the destination address has to be half-word-aligned.  If the flash is 32-bit wide,    */
+/* the destination address will have to word-aligned. So the function parameter addr has */
+/* to be checked for hword or word alignment if necessary, before flash write happens.   */
+/* Return value:      number of bytes written to flash ( should be equal to count )      */
+/*                    if return value not equal to count, it indicates failure           */  
+/*****************************************************************************************/
+int nx_nor_write(void *addr, int count, void *buffer)
+{                     
+    int result, num_end_bytes, bytes_to_write, bytes_written;
+    u_int32 i;
+    u_int8 start_data[4], end_data[4], *ptr;
+    u_int32 offset_mask;
+
+   /* Initialize some variables. */
+   bytes_written = 0;
+   for (i = 0; i<4; i++)
+   {
+      start_data[i] = end_data[i] = 0xFF;
+   }
+   ptr = (u_int8 *) buffer;
+
+    /* Set the current bank according to the addr. */
+    FindCurrentBank(addr);
+    
+
+    /*
+     TODO - Must ensure the ROM Data Cache is disabled!!!
+    */
+    
+
+    /* Set up a mask we will use to determine the misalignment. */
+    offset_mask = 0xfUL >> (4 - (Bank[CurrentBank].BankWidth >> 4));
+    
+    /* Fill the start_data buffer with the current flash data from the */
+    /* last alignment to the next alignment.                           */
+    read_flash((void *)((u_int32)addr & ~offset_mask), 
+               Bank[CurrentBank].BankWidth >> 3, 
+               (void *)start_data);
+
+    /* Fill the start_data buffer beginning at the misalignment to the */
+    /* next alignment with the data to be written to flash.            */
+    for (i = (u_int32)addr & offset_mask; 
+         i < (Bank[CurrentBank].BankWidth >> 3UL) && i != 0 && bytes_written < count;
+         i++, bytes_written++) 
+    {
+        start_data[i] = *ptr++;
+    }
+    bytes_to_write = (u_int32)addr & offset_mask ? 
+                     (Bank[CurrentBank].BankWidth >> 3) :
+                     0;
+
+    /* Write the start_data buffer to flash and advance the flash */
+    /* address ptr to the next alignment. 
+    */
+    if(bytes_to_write > 0)
+    {
+       result = write_flash((void *)((u_int32)addr & ~offset_mask),
+                             (void *)start_data,
+                             bytes_to_write);
+       if(result != bytes_to_write)
+       {
+         goto data_write_bail;
+       }
+    }
+    addr = (void *)(((u_int32)addr & ~offset_mask) + (u_int32)bytes_to_write);
+    bytes_to_write = count - bytes_written;
+    
+    /* Now write the contents of buffer to the subsequent aligned   */
+    /* addresses in the flash until we no longer have enough data   */
+    /* in buffer to complete an aligned write to flash.             */
+    num_end_bytes = bytes_to_write & (int)offset_mask;
+    result = write_flash(addr, ptr, (bytes_to_write - num_end_bytes));
+    if(result != (bytes_to_write - num_end_bytes))
+    {
+	      goto data_write_bail;
+    }
+    bytes_written += result;
+    ptr += (bytes_to_write-num_end_bytes);
+    
+    if(bytes_written < count)
+    {
+        /* Fill the end_data buffer with the current flash data from the */
+        /* current alignment to the next alignment.                      */
+        read_flash((void *)((int)addr + bytes_to_write - num_end_bytes), 
+                   Bank[CurrentBank].BankWidth >> 3, 
+                   (void *)end_data);
+        
+        /* Fill the end_data buffer beginning at the alignment to the */
+        /* end of the data to be written to flash.                    */
+        addr = (void *)((int)addr + (bytes_to_write - num_end_bytes));
+        for (i = 0; i < num_end_bytes; i++) 
+        {
+            end_data[i] = *ptr++;
+        }
+        /* Write the last bytes of unaligned data to flash. */
+        if (num_end_bytes != 0)
+        {
+            result = write_flash(addr, end_data, (Bank[CurrentBank].BankWidth >> 3));
+            if(result != (Bank[CurrentBank].BankWidth >> 3))
+	    {
+	        goto data_write_bail;
+	    }
+            bytes_written += result;
+        }
+    }
+    
+data_write_bail:
+
+    /*
+     Re-enable the ROM Data Cache if it was enabled upon entry
+    */
+    
+    return (bytes_written >= count) ? count : bytes_written;
+    
+}
+
+/****************************************************************************
+ * Modifications:
+ * $Log$
+ ****************************************************************************/
+
+
diff -Naur u-boot-2009.08/drivers/mtd/nor/nor_flashamd.c u-boot-2009.08_alpha2/drivers/mtd/nor/nor_flashamd.c
--- u-boot-2009.08/drivers/mtd/nor/nor_flashamd.c	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor/nor_flashamd.c	2009-12-20 10:59:05.000000000 -0600
@@ -0,0 +1,840 @@
+/******************************************************************************/
+/*                   CONEXANT PROPRIETARY AND CONFIDENTIAL                    */
+/*                        SOFTWARE FILE/MODULE HEADER                         */
+/*                    Copyright Conexant Systems Inc. 2004                    */
+/*                                 Austin, TX                                 */
+/*                            All Rights Reserved                             */
+/******************************************************************************/
+/*
+ * Filename:        FLASHAMD.C
+ *
+ *
+ * Description:     Low level AMD flash memory access functions.
+ *
+ *
+ * Author:          Tim White
+ *
+ ******************************************************************************/
+/* $Id: nor_flashamd.c 135944 2009-12-16 01:25:19Z murthyk $
+ ******************************************************************************/
+/*! 
+ *  @A9 DDR Controller Driver
+ *  @flashamd.c *
+ *  <pre>
+ *  $Author: murthyk $
+ *  $Revision: 135944 $
+ *  $Date: 2009-12-15 19:25:19 -0600 (Tue, 15 Dec 2009) $
+ *
+ *  Revision history
+ *  $Log: $
+ *  
+ *
+ *  $KeysEnd$
+ *  </pre>
+ *
+ */
+
+
+/*****************/
+/* Include Files */
+/*****************/
+//#include "stbcfg.h"
+#include "basetype.h"
+#ifndef DLOAD
+   //#include "kal.h"
+#endif
+#ifdef DLOAD
+   #include "defs.h"
+#endif
+#include "ldr_types.h"
+#include "nor_flashdescr.h"
+#if 0
+#include "flashrw.h" /* TODO provide Macros for Read Mode and Program mode */
+#endif
+/**************************/
+/* Flash Command Indicies */
+/**************************/
+#define FLASH_CMD_ID             0
+#define FLASH_CMD_READ           1
+#define FLASH_CMD_UNLOCK1        1
+#define FLASH_CMD_WRITE          2
+#define FLASH_CMD_ERASE_SETUP    3
+#define FLASH_CMD_ERASE_CONFIRM  4
+#define FLASH_CMD_ERASE_RESUME   4
+#define FLASH_CMD_ERASE_SUSPEND  5
+#define FLASH_CMD_STATUS         6
+#define FLASH_CMD_UNLOCK2        6
+#define FLASH_CMD_ERASE_CHIP     7
+#define FLASH_CMD_CFI_QUERY      8
+#define FLASH_CMD_UNLOCK_BYPASS     9
+#define FLASH_CMD_TEMP_UNPROTECT_SETUP 10
+#define FLASH_CMD_BLOCK_ERASE_CONFIRM  11
+#define FLASH_CMD_RESET           12
+
+/******************************************/
+/* Local Definitions and Global Variables */
+/******************************************/
+extern BANK_INFO Bank[];
+extern int CurrentBank;
+extern u_int32 internal_flash_get_ncrom_base(void);
+#define printf myprint
+
+/**************************/
+/* Function Prototypes    */   
+/**************************/
+int write_amd(void *addr, void *buffer, int size);
+int erase_amd(void *addr, void (*callback)(void));
+int erase_amd_bank(void *addr, void (*callback)(void));
+
+/***************************/
+/* AMD Command Code Table  */   
+/***************************/
+u_int32 AMDCode[2][13] = 
+{
+    /* 8-bit chips */
+    {   /* 0 - ID */     
+        0x90909090,
+        /* 1 - Read & Unlock Code 1 */ 
+        0xaaaaaaaa,
+        /* 2 - Write */        
+        0xa0a0a0a0,
+        /* 3 - Erase Setup */ 
+        0x80808080,
+        /* 4 - Erase Confirm/Resume */ 
+        0x30303030,
+        /* 5 - Erase Suspend */
+        0xb0b0b0b0,
+        /* 6 - Status & Unlock Code 2 */  
+        0x55555555,
+        /* 7 - Erase Chip */
+        0x10101010,
+        /* 8 - CFI Query */
+        0x98989898,
+        /* 9 - Unlock Bypass */
+        0x20202020,
+        /* 10 - Temporary Unprotect Setup */
+        0xE0E0E0E0,
+        /* 11 - Erase Block (SST) */
+        0x50505050,
+        /* 12 - Reset Chip */
+        0xF0F0F0F0
+    },
+    
+    /* 16-bit chips */
+    {   /* 0 - ID */     
+        0x00900090,
+        /* 1 - Read & Unlock Code 1 */ 
+        0x00aa00aa,
+        /* 2 - Write */        
+        0x00a000a0,
+        /* 3 - Erase Setup */ 
+        0x00800080,
+        /* 4 - Erase Confirm/Resume */ 
+        0x00300030,
+        /* 5 - Erase Suspend */
+        0x00b000b0,
+        /* 6 - Status & Unlock Code 2 */  
+        0x00550055,
+        /* 7 - Erase Chip */
+        0x00100010,
+        /* 8 - CFI Query */
+        0x00980098,
+        /* 9 - Unlock Bypass */
+        0x00200020,
+        /* 10 - Temporary Unprotect Setup */
+        0x00E000E0,
+        /* 11 - Erase Block (SST) */
+        0x00500050,
+        /* 12 - Reset Chip */
+        0xF0F0F0F0
+    }
+};               
+
+/********************************/
+/* AMD Status Byte Definitions  */   
+/********************************/
+#define EA_READY    0x80
+#define EA_TOGGLE1  0x40
+#define EA_TOGGLE2  0x02
+#define EA_TIMEOUT  0x20
+#define EA_ERASING  0x08
+
+void delay30ms(u_int32 nTimes)
+{
+   u_int32 pollDelay, toDo;
+ 
+   for(toDo=0; toDo<nTimes; toDo++)
+   {
+     for(pollDelay=0; pollDelay<0x7FFF; pollDelay++)
+     {
+       /* takes 30 ms at 166/133MHz */
+     }
+   }
+}
+
+void delay10us(u_int32 nTimes)
+{
+   u_int32 pollDelay, toDo;
+
+   for(toDo=0; toDo<nTimes; toDo++)
+   {
+     for(pollDelay=0; pollDelay<0xF; pollDelay++)
+     {
+       /* takes 30 ms at 166/133MHz */
+     }
+   }
+}
+
+int write_amd(void *addr, void *buffer, int size)
+{
+   int i,  isST;
+   volatile u_int16 *dest;
+   volatile u_int16 *src;
+   volatile u_int16 *cmd1, *cmd2;
+   u_int16 rdy_mask, rdy_mask1, rdy_mask2, rdy_mask3;
+   int result;
+   u_int32 buf;
+   u_int32 uNCRomBase;
+   
+   uNCRomBase = internal_flash_get_ncrom_base(); 
+
+   dest = (u_int16 *)((uint32)addr | uNCRomBase);
+   src = (u_int16 *)buffer;
+   result = size;
+
+   isST = (Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_ST) ? 1 : 0;
+   isST = 0;
+  /* Set up status checking masks. */
+   rdy_mask = 0;
+   for (i = 0; i < Bank[CurrentBank].BankWidth; i += Bank[CurrentBank].ChipWidth)
+   {                       
+      rdy_mask |= (EA_READY << i);
+   }                                        
+   
+   /* Set up command addresses. */
+   if((Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_AMD) ||
+      (Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_ST) ||
+      (Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_TOSHIBA))
+   {
+     cmd1 = (u_int16 *)(((0xaaa >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+     cmd2 = (u_int16 *)(((0x555 >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+   }
+   else
+   {
+     cmd1 = (u_int16 *)(((0xaaaa >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+     cmd2 = (u_int16 *)(((0x5555 >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+   }
+
+   
+   /* Program flash. */
+   for (i = size; i > 0; i -= (Bank[CurrentBank].BankWidth >> 3))
+   {
+      /* Send unlock sequence. */
+      *cmd1 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_UNLOCK1];   
+      *cmd2 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_UNLOCK2];   
+      
+      /* Send write command. */
+      *cmd1 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_WRITE];   
+      
+      /* Write data. */ 
+      switch (Bank[CurrentBank].BankWidth)
+      {                
+         case 8:
+            buf = *src;
+            *(u_int8*)dest = (u_int8)buf;
+            break;
+         case 16:
+            /* We always read the source buffer one byte at a time */
+            /* to avoid misalignment read errors. buf will always  */
+            /* be aligned.
+            */
+            #ifdef NOR_8b_MODE
+            *(u_int8 *)&buf = *((u_int8 *)src);
+            *((u_int8 *)&buf + 1) = *((u_int8 *)src + 1);
+            *dest = (u_int16)buf;
+            #endif
+           *(dest) = *((u_int16 *)src);
+            break;
+         default:
+            /* We shouldn't be reaching here */
+            buf = 0;
+            break;
+      }
+
+      /* wait for ST Microelectronic protos */
+      if(isST)
+      {
+        delay10us(1);
+      }
+      /* Write Check - Status Sequence */
+      /* 1. Check DQ7 - Should be 0 if the write is happening */
+      /* 2. Check if DQ6 is Toggling by reading 3 times */
+      /* 3. If the DQ5 bit is set.Check if the DQ6 is still Toggling- Timeout bail */
+      /* 4. If DQ6 has stopped Toggling - Write is complete, check DQ7 */
+      if((*dest & rdy_mask) != (*src & rdy_mask))
+      {
+          while( 1 ){
+            rdy_mask1 = *dest & EA_TOGGLE1;
+            rdy_mask2 = *dest & EA_TOGGLE1;
+            rdy_mask3 = *dest & EA_TOGGLE1;
+            if((rdy_mask1 == rdy_mask2) && (rdy_mask2== rdy_mask3))
+            {
+                break;
+            }
+            else if (*dest & EA_TIMEOUT)
+            {
+               rdy_mask1 = *dest & EA_TOGGLE1;
+               rdy_mask2 = *dest & EA_TOGGLE1;
+               rdy_mask3 = *dest & EA_TOGGLE1;
+               if((rdy_mask1 == rdy_mask2) && (rdy_mask2== rdy_mask3))
+                  break;
+               else
+                  printf(" program timeout error.\r\n");
+               break;          
+            }
+         }
+      }
+
+      /* Write complete. Check DQ7 for valid data bits before issuing the next unlock sequence*/
+      /* Read back the data and make sure the data written is valid */
+      /* DQ7 may report valid data bits and not status bits if the Flash */
+      /* is already in read mode. This is also a check to see if the Flash */
+      /* is back in the read mode, before we send the next unlock sequence */
+      while (*(dest) != *((u_int16 *)src));
+        
+      /* Increment ptrs to next data element. */
+      dest = (u_int16 *)((u_int8 *)dest + (Bank[CurrentBank].BankWidth>>3));
+      src = (u_int16 *)((u_int8*)src + (Bank[CurrentBank].BankWidth>>3));
+       
+   }
+
+   /* for ST Microelectrics */
+   /* Send soft reset command to put flash in read mode. */
+  /* if(isST) - Need for AMD and ST */
+   
+     *cmd1 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_RESET];   
+   
+
+   /* Return ROM controller to normal read mode. */
+   /* Need to do any Flash controller specific things - Not required for IP2016*/   
+
+   return result;
+}
+
+int write_buffer_amd_ST(void *addr, void *buffer, int size)
+{
+   int i,  isST, wc, j;
+   volatile u_int16 *dest, *sect, *pgdest, *pgsrc;
+   volatile u_int16 *src;
+   volatile u_int16 *cmd1, *cmd2;
+   u_int16 rdy_mask, rdy_mask1, rdy_mask2, rdy_mask3;
+   int result;
+   u_int32 buf;
+   u_int32 uNCRomBase;
+
+   
+   uNCRomBase = internal_flash_get_ncrom_base(); 
+
+   dest = (u_int16 *)((uint32)addr | uNCRomBase);
+   src = (u_int16 *)buffer;
+   result = size;
+   sect = dest;
+   isST = (Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_ST) ? 1 : 0;
+   isST = 0;
+  /* Set up status checking masks. */
+   rdy_mask = 0;
+   for (i = 0; i < Bank[CurrentBank].BankWidth; i += Bank[CurrentBank].ChipWidth)
+   {                       
+      rdy_mask |= (EA_READY << i);
+   }                                        
+   
+   /* Set up command addresses. */
+   if((Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_AMD) ||
+      (Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_ST) ||
+      (Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_TOSHIBA))
+   {
+     cmd1 = (u_int16 *)(((0xaaa >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+     cmd2 = (u_int16 *)(((0x555 >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+   }
+   else
+   {
+     cmd1 = (u_int16 *)(((0xaaaa >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+     cmd2 = (u_int16 *)(((0x5555 >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+   }
+
+   pgdest = dest;  
+   pgsrc = src;
+   /* Program flash. */
+   for (i = size; i > 0; i -= 512)
+   {
+      /* Send unlock sequence. */
+      *cmd1 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_UNLOCK1];   
+      *cmd2 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_UNLOCK2];   
+      
+      /* Send write command. */
+      sect = dest;
+      wc = (i < 512) ? i-1 :511 ;
+      *sect = (u_int16)0x0025; 
+      *sect = wc; 
+      for (j = 0; j <= wc; j++)
+      {
+         /* Write data. */ 
+         switch (Bank[CurrentBank].BankWidth)
+         {                
+            case 8:
+               buf = *src;
+               *(u_int8*)dest = (u_int8)buf;
+               break;
+            case 16:
+               /* We always read the source buffer one byte at a time */
+               /* to avoid misalignment read errors. buf will always  */
+               /* be aligned.
+               */
+               #ifdef NOR_8b_MODE
+               *(u_int8 *)&buf = *((u_int8 *)src);
+               *((u_int8 *)&buf + 1) = *((u_int8 *)src + 1);
+               *dest = (u_int16)buf;
+               #endif
+              *(dest) = *((u_int16 *)src);
+               break;
+            default:
+               /* We shouldn't be reaching here */
+               buf = 0;
+               break;
+         }
+         if (j < wc)
+         {
+          /* Increment ptrs to next data element. */
+         dest = (u_int16 *)((u_int8 *)dest + (Bank[CurrentBank].BankWidth>>3));
+         src = (u_int16 *)((u_int8*)src + (Bank[CurrentBank].BankWidth>>3));
+         }
+      }
+      *sect = (u_int16)0x0029; 
+      /* wait for ST Microelectronic protos */
+      if(isST)
+      {
+        delay10us(1);
+      }
+      /* Write Check - Status Sequence */
+      /* 1. Check DQ7 - Should be 0 if the write is happening */
+      /* 2. Check if DQ6 is Toggling by reading 3 times */
+      /* 3. If the DQ5 bit is set.Check if the DQ6 is still Toggling- Timeout bail */
+      /* 4. If DQ6 has stopped Toggling - Write is complete, check DQ7 */
+ 
+      if((*dest & rdy_mask) != (*src & rdy_mask))
+      {
+          while( 1 ){
+            rdy_mask1 = *dest & EA_TOGGLE1;
+            rdy_mask2 = *dest & EA_TOGGLE1;
+            rdy_mask3 = *dest & EA_TOGGLE1;
+            if((rdy_mask1 == rdy_mask2) && (rdy_mask2== rdy_mask3))
+            {
+                break;
+            }
+            else if (*dest & EA_TIMEOUT)
+            {
+               rdy_mask1 = *dest & EA_TOGGLE1;
+               rdy_mask2 = *dest & EA_TOGGLE1;
+               rdy_mask3 = *dest & EA_TOGGLE1;
+               if((rdy_mask1 == rdy_mask2) && (rdy_mask2== rdy_mask3))
+                  break;
+               else
+                  printf(" program timeout error.\r\n");
+               break;          
+            }
+         }
+      }
+
+      /* Write complete. Check DQ7 for valid data bits before issuing the next unlock sequence*/
+      /* Read back the data and make sure the data written is valid */
+      /* DQ7 may report valid data bits and not status bits if the Flash */
+      /* is already in read mode. This is also a check to see if the Flash */
+      /* is back in the read mode, before we send the next unlock sequence */
+    
+      while (*(dest) != *((u_int16 *)src));
+             
+      /* Increment ptrs to next data element. */
+      dest = (u_int16 *)((u_int8 *)dest + (Bank[CurrentBank].BankWidth>>3));
+      src = (u_int16 *)((u_int8*)src + (Bank[CurrentBank].BankWidth>>3));
+       
+   }
+
+   /* for ST Microelectrics */
+   /* Send soft reset command to put flash in read mode. */
+  /* if(isST) - Need for AMD and ST */
+   
+     *cmd1 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_RESET];   
+   
+
+   /* Return ROM controller to normal read mode. */
+   /* Need to do any Flash controller specific things - Not required for IP2016*/   
+
+   return result;
+}
+
+int write_buffer_amd(void *addr, void *buffer, int size)
+{
+   int i,  isST, wc, j;
+   volatile u_int16 *dest, *sect, *pgdest, *pgsrc;
+   volatile u_int16 *src;
+   volatile u_int16 *cmd1, *cmd2;
+   u_int16 rdy_mask, rdy_mask1, rdy_mask2, rdy_mask3;
+   int result;
+   u_int32 buf;
+   u_int32 uNCRomBase;
+
+   
+   uNCRomBase = internal_flash_get_ncrom_base(); 
+
+   dest = (u_int16 *)((uint32)addr | uNCRomBase);
+   src = (u_int16 *)buffer;
+   result = size;
+   sect = dest;
+   isST = (Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_ST) ? 1 : 0;
+   isST = 0;
+  /* Set up status checking masks. */
+   rdy_mask = 0;
+   for (i = 0; i < Bank[CurrentBank].BankWidth; i += Bank[CurrentBank].ChipWidth)
+   {                       
+      rdy_mask |= (EA_READY << i);
+   }                                        
+   
+   /* Set up command addresses. */
+   if((Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_AMD) ||
+      (Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_ST) ||
+      (Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_TOSHIBA))
+   {
+     cmd1 = (u_int16 *)(((0xaaa >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+     cmd2 = (u_int16 *)(((0x555 >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+   }
+   else
+   {
+     cmd1 = (u_int16 *)(((0xaaaa >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+     cmd2 = (u_int16 *)(((0x5555 >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+   }
+
+   pgdest = dest;  
+   pgsrc = src;
+   /* Program flash. */
+   for (i = size; i > 0; i -= 32)
+   {
+      /* Send unlock sequence. */
+      *cmd1 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_UNLOCK1];   
+      *cmd2 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_UNLOCK2];   
+      
+      /* Send write command. */
+      sect = dest;
+      wc = (i < 32) ? i-1 :31 ;
+      *sect = (u_int16)0x0025; 
+      *sect = wc; 
+      for (j = 0; j <= wc; j++)
+      {
+         /* Write data. */ 
+         switch (Bank[CurrentBank].BankWidth)
+         {                
+            case 8:
+               buf = *src;
+               *(u_int8*)dest = (u_int8)buf;
+               break;
+            case 16:
+               /* We always read the source buffer one byte at a time */
+               /* to avoid misalignment read errors. buf will always  */
+               /* be aligned.
+               */
+               #ifdef NOR_8b_MODE
+               *(u_int8 *)&buf = *((u_int8 *)src);
+               *((u_int8 *)&buf + 1) = *((u_int8 *)src + 1);
+               *dest = (u_int16)buf;
+               #endif
+              *(dest) = *((u_int16 *)src);
+               break;
+            default:
+               /* We shouldn't be reaching here */
+               buf = 0;
+               break;
+         }
+         if (j < wc)
+         {
+          /* Increment ptrs to next data element. */
+         dest = (u_int16 *)((u_int8 *)dest + (Bank[CurrentBank].BankWidth>>3));
+         src = (u_int16 *)((u_int8*)src + (Bank[CurrentBank].BankWidth>>3));
+         }
+      }
+      *sect = (u_int16)0x0029; 
+      /* wait for ST Microelectronic protos */
+      if(isST)
+      {
+        delay10us(1);
+      }
+      /* Write Check - Status Sequence */
+      /* 1. Check DQ7 - Should be 0 if the write is happening */
+      /* 2. Check if DQ6 is Toggling by reading 3 times */
+      /* 3. If the DQ5 bit is set.Check if the DQ6 is still Toggling- Timeout bail */
+      /* 4. If DQ6 has stopped Toggling - Write is complete, check DQ7 */
+
+      if((*dest & rdy_mask) != (*src & rdy_mask))
+      {
+          while( 1 ){
+            rdy_mask1 = *dest & EA_TOGGLE1;
+            rdy_mask2 = *dest & EA_TOGGLE1;
+            rdy_mask3 = *dest & EA_TOGGLE1;
+            if((rdy_mask1 == rdy_mask2) && (rdy_mask2== rdy_mask3))
+            {
+                break;
+            }
+            else if (*dest & EA_TIMEOUT)
+            {
+               rdy_mask1 = *dest & EA_TOGGLE1;
+               rdy_mask2 = *dest & EA_TOGGLE1;
+               rdy_mask3 = *dest & EA_TOGGLE1;
+               if((rdy_mask1 == rdy_mask2) && (rdy_mask2== rdy_mask3))
+                  break;
+               else
+                  printf(" program timeout error.\r\n");
+               break;          
+            }
+         }
+      }
+
+      /* Write complete. Check DQ7 for valid data bits before issuing the next unlock sequence*/
+      /* Read back the data and make sure the data written is valid */
+      /* DQ7 may report valid data bits and not status bits if the Flash */
+      /* is already in read mode. This is also a check to see if the Flash */
+      /* is back in the read mode, before we send the next unlock sequence */
+    
+      while (*(dest) != *((u_int16 *)src));
+            
+      dest = (u_int16 *)((u_int8 *)dest + (Bank[CurrentBank].BankWidth>>3));
+      src = (u_int16 *)((u_int8*)src + (Bank[CurrentBank].BankWidth>>3));
+       
+   }
+
+   /* for ST Microelectrics */
+   /* Send soft reset command to put flash in read mode. */
+  /* if(isST) - Need for AMD and ST */
+   
+     *cmd1 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_RESET];   
+   
+
+   /* Return ROM controller to normal read mode. */
+   /* Need to do any Flash controller specific things - Not required for IP2016*/   
+
+   return result;
+}
+
+int erase_amd(void *addr, void (*callback)(void))
+{
+   int i, isST;
+   volatile u_int16 *dest;
+   volatile u_int16 *cmd1, *cmd2;
+   u_int16 rdy_mask;
+   u_int32 uNCRomBase;
+   int result = 0;
+   rdy_mask = 0;
+   
+   uNCRomBase = internal_flash_get_ncrom_base(); 
+
+   dest = (u_int16 *)((uint32)addr | uNCRomBase);
+
+   isST = (Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_ST) ? 1 : 0;
+   isST = 0;
+
+   /* Set up status checking masks. */
+   
+   for (i = 0;i < Bank[CurrentBank].BankWidth ;i += Bank[CurrentBank].ChipWidth )
+   {                       
+      rdy_mask |= (EA_READY << i);
+   }                                        
+   
+   /* Put ROM controller into flash program mode. */
+   /* Nothing do for IP2016 */                          
+   
+   /* Set up command addresses. */
+   if((Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_AMD) ||
+      (Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_ST) ||
+      (Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_TOSHIBA))
+   {
+     cmd1 = (u_int16 *)(((0xaaa >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+     cmd2 = (u_int16 *)(((0x555 >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+   }
+   else
+   {
+     cmd1 = (u_int16 *)(((0xaaaa >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+     cmd2 = (u_int16 *)(((0x5555 >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+   }
+
+   /* Send unlock sequence. */
+   *cmd1 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_UNLOCK1];   
+   *cmd2 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_UNLOCK2];   
+   
+   /* Send erase setup command. */
+   *cmd1 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_ERASE_SETUP];   
+   
+   /* Send unlock sequence again. */
+   *cmd1 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_UNLOCK1];   
+   *cmd2 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_UNLOCK2];   
+   
+   /* Send erase confirm command. */
+   if(Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_SST)
+   {
+     *dest = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_BLOCK_ERASE_CONFIRM];
+   }
+   else
+   {
+     *dest = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_ERASE_CONFIRM];   
+   }
+
+   /* For ST protos wait before polling */
+   if(isST)
+   {
+     delay30ms(7); /* 7 * 30ms = 210 ms */
+   }
+  
+   /* Wait till we can read status */
+   delay10us(20);
+   /* Wait for erase to complete. */
+   while((*dest & rdy_mask) != rdy_mask)
+   {
+
+     /* For ST protos wait before polling */
+     if(isST)
+     {
+       delay30ms(7); /* 7 * 30ms = 210 ms */
+     }
+   
+     if(callback)
+        callback();
+   }
+   
+
+   /* for ST Microelectrics */
+   /* Send soft reset command to put flash in read mode. */
+   if(Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_ST)
+   {
+     *cmd1 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_RESET];
+   }
+
+   /* Return ROM controller to normal read mode. */
+   /* Nothing to do for IP2016 */
+
+   return result;
+}
+
+/*
+ * Nothing after this point is copied to RAM.  The address of the
+ * erase_xxxx_bank() function is used in CopyAndCallRoutine()
+ * (flash/flashrw.c) for the end of the copy area.
+ */
+
+int erase_amd_bank(void *addr, void (*callback)(void))
+{
+   int i, isST;
+   volatile u_int16 *dest;
+   volatile u_int16 *cmd1, *cmd2;
+   u_int16 rdy_mask;
+   int result = 0;
+   u_int32 uNCRomBase;
+   
+   uNCRomBase = internal_flash_get_ncrom_base(); 
+
+   dest = (u_int16 *)((uint32)addr | uNCRomBase   );
+   
+   isST = (Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_ST) ? 1 : 0;
+   
+   /* Set up status checking masks. */
+   rdy_mask = 0;
+   for (i = 0;i < Bank[CurrentBank].BankWidth ;i += Bank[CurrentBank].ChipWidth )
+   {                       
+      rdy_mask |= (EA_READY << i);
+   }                                        
+   
+   /* Put ROM controller into flash program mode. */
+   /* Nothing to do for IP2016 */                            
+   
+   /* Set up command addresses. */
+   if((Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_AMD) ||
+      (Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_ST) ||
+      (Bank[CurrentBank].pFlashDesc->MfrID == FLASH_CHIP_VENDOR_TOSHIBA))
+   {
+     cmd1 = (u_int16 *)(((0xaaa >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+     cmd2 = (u_int16 *)(((0x555 >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+   }
+   else
+   {
+     cmd1 = (u_int16 *)(((0xaaaa >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+     cmd2 = (u_int16 *)(((0x5555 >> (Bank[CurrentBank].ChipWidth >> 4)) 
+          << (Bank[CurrentBank].BankWidth >> 4)) + Bank[CurrentBank].BankBase);
+   }
+
+   /* Send unlock sequence. */
+   *cmd1 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_UNLOCK1];   
+   *cmd2 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_UNLOCK2];   
+   
+   /* Send erase setup command. */
+   *cmd1 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_ERASE_SETUP];   
+   
+   /* Send unlock sequence again. */
+   *cmd1 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_UNLOCK1];   
+   *cmd2 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_UNLOCK2];   
+   
+   /* Send erase confirm command. */
+   *cmd1 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_ERASE_CHIP];   
+
+   /* For ST protos wait before polling */
+   if(isST)
+   {
+     delay30ms(7); /* 7 * 30ms = 210 ms */
+   }
+   
+   /* Wait for erase to complete. */
+   while((*dest & rdy_mask) != rdy_mask)
+   {
+   
+     /* For ST protos wait before polling */
+     if(isST)
+     {
+       delay30ms(7); /* 7 * 30ms = 210 ms */
+     }
+    
+     if(callback)
+        callback();
+   }
+   
+   /* for ST Microelectrics */
+   /* Send soft reset command to put flash in read mode. */
+   if(isST)
+   {
+     *cmd1 = (u_int16)AMDCode[Bank[CurrentBank].ChipWidth >> 4][FLASH_CMD_RESET];   
+   }
+
+   /* Return ROM controller to normal read mode. */
+   /* Nothing to be done for IP 2016 */
+   return result;
+}
+
+/*******************************************************************************
+ * Modifications:
+ * $Log$
+ *
+ ******************************************************************************/
+
+
diff -Naur u-boot-2009.08/drivers/mtd/nor/nor_flashcfg.h u-boot-2009.08_alpha2/drivers/mtd/nor/nor_flashcfg.h
--- u-boot-2009.08/drivers/mtd/nor/nor_flashcfg.h	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor/nor_flashcfg.h	2009-12-18 19:14:23.000000000 -0600
@@ -0,0 +1,127 @@
+/****************************************************************************/
+/*                   CONEXANT PROPRIETARY AND CONFIDENTIAL                  */
+/*                       SOFTWARE FILE/MODULE HEADER                        */
+/*                    Conexant Systems Inc. (c) 1998-2004                   */
+/*                              Austin, TX                                  */
+/*                         All Rights Reserved                              */
+/****************************************************************************/
+/*
+ * Filename:        flashcfg.h
+ *
+ *
+ * Description:     Public header file for the flash memory operations
+ *
+ *
+ * Author:          Craig Dry
+ *
+ ****************************************************************************/
+/* $Id: nor_flashcfg.h 131363 2009-11-21 22:02:24Z murthyk $
+ ****************************************************************************/
+#ifndef _FLASHCFG_H
+#define _FLASHCFG_H
+
+#ifndef __OPTVX_H__
+#include <basetype.h>
+#endif
+
+#ifndef DLOAD
+/* following are the action types that used in flash_task */
+#define FLASH_ALLOC 1
+#define FLASH_CLEANUP 2
+#define FLASH_READ 3
+#define FLASH_WRITE 4
+#define FLASH_QUERY 5
+#define FLASH_SHUTDOWN 6
+#define FLASH_FS_READ 7
+#define FLASH_FS_WRITE 8
+#define FLASH_FS_ERASE 9
+#define FLASH_ERASE 10
+#endif
+
+/* Used for ROM Config Area*/
+#define ROM_CONFIG_SECTOR_SIZE    0x200
+
+/* Used for ROM Fs Area*/
+#define ROM_FS_SECTOR_SIZE	128 
+
+#define SIZE_SEC_HEADER 4           /* size of sector header */
+
+#define MANUFACTURER_ID_INTEL 0x89
+#define MANUFACTURER_ID_AMD 0x01
+#define INTEL_28F800B_ID 0x9D
+#define AMD_29F800BB_ID 0x58
+#define MAGIC_NUMBER 0xDEADBEEF
+
+#ifndef DLOAD
+/*u_int32 flash_read(u_int8 source_id, void* buffer, u_int32 buffer_size, u_int32 offset);*/
+u_int32 flash_read(u_int8 source_id, void* buffer, u_int32 buffer_size, u_int32 offset, u_int32* num_bytes_actually_read);
+
+/* This function do the write first and then do read to verify data, and then update the directory structure */
+/* If there is an write error, keep trying until finish trying the whole flash */
+u_int32 flash_write(u_int8 source_id, void* source_buffer, u_int32 buffer_size, u_int32 offset, u_int32* num_bytes_actually_written);
+
+/*u_int8 * flash_alloc(u_int8 source_id, u_int32 size);*/
+u_int32 flash_alloc(u_int8 source_id, u_int32 size);
+
+/* This function is called while the power off button is pushed.  It erases the inactive block and */
+/* and do block switch if not enough space left in the active block. */
+bool flash_cleanup(void);
+
+/* This function returns the refered information size which is stored at the begining of each sector */
+u_int32 flash_query_size(u_int8 source_id, u_int32* source_data_size);
+
+u_int32 flash_erase(void);
+
+/* This is the flash init function which tells if KAL is running to decide to use tasks etc. or not */
+bool flash_init(void);       
+
+/* This function terminates tasks\queues if KAL is running. */
+bool flash_terminate(void);
+
+typedef struct _flash_params
+{
+	u_int8  action_type;
+	u_int8 source_id;
+	u_int8 * addr;
+	u_int32 * buffer;
+	u_int32 data_size;
+	u_int32 offset;
+	u_int32 return_value;
+	u_int8 * return_address;
+	task_id_t proc_id;
+} flash_params;
+#endif
+
+typedef struct{
+	u_int32 MagicNumber;
+	u_int8 Num_Client;
+	u_int8 HeaderLen;
+	u_int16 Num_Sector;
+	u_int8 Num_Sector_Byte; /*number of bytes needed to store sector start and end for client */
+	u_int16 Size_Sector;
+	u_int32 CheckSum;
+} DIRHEADER;
+
+/* Debug messaging functions*/
+#define TRACE_FLS TRACE_NV /* Alias. NV device used will be Flash. */
+#define FLS_ERROR_MSG                           (TRACE_FLS|TRACE_LEVEL_ALWAYS)
+#define FLS_FUNC_TRACE                          (TRACE_FLS|TRACE_LEVEL_2)
+#define FLS_MSG                                 (TRACE_FLS|TRACE_LEVEL_2)
+#define FLS_ISR_MSG                             (TRACE_FLS|TRACE_LEVEL_1)
+
+/* Return codes*/
+#ifndef SUCCESS
+#define SUCCESS 0
+#endif
+
+#ifndef FAILURE
+#define FAILURE -1
+#endif
+
+#endif
+
+/*******************************************************************************
+ * Modifications:
+ * $Log$
+ ******************************************************************************/
+
diff -Naur u-boot-2009.08/drivers/mtd/nor/nor_flashdescr.c u-boot-2009.08_alpha2/drivers/mtd/nor/nor_flashdescr.c
--- u-boot-2009.08/drivers/mtd/nor/nor_flashdescr.c	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor/nor_flashdescr.c	2009-12-18 19:31:31.000000000 -0600
@@ -0,0 +1,950 @@
+/****************************************************************************/ 
+ /*                   CONEXANT PROPRIETARY AND CONFIDENTIAL                  */
+ /*                       SOFTWARE FILE/MODULE HEADER                        */
+ /*                    Conexant Systems Inc. (c) 2006-2007                   */
+ /*                         All Rights Reserved                              */
+ /****************************************************************************/
+ /*
+  * Filename:     romdata.c
+  *
+  * Description:  Board hardware description tables.
+  *
+  * Author:       Ray Mack
+  *
+  ****************************************************************************/
+ /* $Id: nor_flashdescr.c 131363 2009-11-21 22:02:24Z murthyk $
+  ****************************************************************************/ 
+
+/******************/
+/* Include Files  */
+/******************/
+//#include "stbcfg.h"
+#include "ldr_common.h"
+#include "nor_flashdescr.h"
+
+/*********************/
+/* AMD Block Formats */
+/*********************/
+const u_int16 AMD8MegBootBlockSectors[] =
+{
+    0x0004, 0x0002, 0x0002, 0x0008, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010
+};
+
+const u_int16 AMD16MegBootBlockSectors[] =
+{
+    0x0004, 0x0002, 0x0002, 0x0038, 0x0040, 0x0040, 0x0040, 0x0040,
+    0x0040, 0x0040, 0x0040
+};
+
+const u_int16 AMD16MegBootBlockSectors2[] =
+{
+    0x0004, 0x0002, 0x0002, 0x0008, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010
+};
+
+
+const u_int16 AMD16MegBootBlockSectors3[] =
+{
+    0x0004, 0x0002, 0x0002, 0x0008, 0x0010, 0x0010, 0x0010
+};
+
+
+/***********************/
+/* Intel Block Formats */
+/***********************/
+const u_int16 Intel8MegBootBlockSectors[] =
+{
+    0x0004, 0x0002, 0x0002, 0x0018, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020
+};
+
+const u_int16 Intel8MegBootBlockFlexSectors[] =
+{
+    0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010
+};
+
+const u_int16 Intel16MegBootBlockFlexSectors[] =
+{
+    0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010
+};
+
+const u_int16 Intel32MegBootBlockFlexSectors[] =
+{
+    0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010
+};
+
+const u_int16 Intel16MegSixmileSectors[] = 
+{
+    0x0008, 0x0008, 0x0008, 0x0008, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020
+   
+};
+const u_int16 M58LTGSTSectors[] = 
+{
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
+    0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0008,
+    0x0008, 0x0008, 0x0008
+};
+
+/***********************/
+/* Atmel Block Formats */
+/***********************/
+const u_int16 Atmel16MegBootBlockSectors[] =
+{
+    0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
+    0x0008, 0x0008, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010
+};
+
+
+const u_int16 Atmel32MegBootBlockSectors[] =
+{
+    0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,    
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010
+};
+
+const u_int16 Atmel64MegBootBlockSectors[] =
+{
+    0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,    
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,    
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010    
+};
+
+/***********************/
+/* Macronix Block Formats */
+/***********************/
+
+const u_int16 MXIC16MegBootBlockSectors[] =
+{
+    0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,    
+    0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010
+};
+
+/**************************/
+/* Flash Descriptor Array */
+/**************************/
+FLASH_DESC FlashDescriptors[] =
+{
+/*****************/
+    /* Spansion 128 MB*/
+    /*****************/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_AMD,
+     0x227E,    /*S29GL128x/S29GL256x/S29GL512x/S29GL01Gx :- x=N/P*/
+     0x40000000, /*1Gbit (64Mbit x 16)*/
+     120, 0, 0, 0, 0,
+     120, 0, 0, 0, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_UNIFORM_SECTOR_SIZE,
+     0,         /*Uniform Block Size of 128K*/
+     (u_int16 *) 0x20},   /*Uniform Block Size of 128K*/
+    /*********/
+    /* Intel */
+    /*********/
+
+    /*NOTE: Intel parts that can be used in both x8 and x16 configurations*/
+    /*do NOT need to be listed as separate parts in this table. This is */
+    /*because they can use the same Enter/ExitIDMode routines.*/
+/* INTEL 0 */
+    {FLASH_ID_ENTER_INTEL,
+     FLASH_ID_EXIT_INTEL,
+     FLASH_CHIP_VENDOR_MICRON,
+     0x0017,    /* MT28F640J3 */
+     0x4000000, /*64Mbit (4Mbit x 16)*/
+     150, 10, 10, 10, 10,
+     150, 10, 10, 10, 10,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_UNIFORM_SECTOR_SIZE,
+     0,         /*Uniform Block Size of 128K*/
+     (u_int16 *) 0x20},   /*Uniform Block Size of 128K*/
+     
+/* INTEL 1 */
+    /* Support for flash part PC28F128P33B85.*/
+    {FLASH_ID_ENTER_INTEL,
+     FLASH_ID_EXIT_INTEL,
+     FLASH_CHIP_VENDOR_INTEL,
+     0x8821,
+     0x8000000,
+     110, 0, 0, 0, 0,
+     110, 0, 0, 0, 0,
+     25,         
+     16,         
+     FLASH_FLAGS_UNLOCK_LOCK_SEQ_REQD, 
+     sizeof(Intel16MegSixmileSectors)/sizeof(u_int16), 
+     Intel16MegSixmileSectors},    
+      
+/* INTEL 2 */
+    {FLASH_ID_ENTER_INTEL,
+     FLASH_ID_EXIT_INTEL,
+     FLASH_CHIP_VENDOR_INTEL,
+     0x0018,    /*28F128J3*/
+     0x8000000, /*128bit (8Mbit x 16)*/
+     150, 10, 10, 10, 10,
+     150, 10, 10, 10, 10,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_UNIFORM_SECTOR_SIZE,
+     0,         /*Uniform Block Size of 128K*/
+     (u_int16 *) 0x20},   /*Uniform Block Size of 128K*/
+
+/* INTEL 3 */     
+    {FLASH_ID_ENTER_INTEL,
+     FLASH_ID_EXIT_INTEL,
+     FLASH_CHIP_VENDOR_INTEL,
+     0x0017,    /*28F640J3*/
+     0x4000000, /*64Mbit (4Mbit x 16)*/
+     150, 10, 10, 10, 10,
+     150, 10, 10, 10, 10,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_UNIFORM_SECTOR_SIZE,
+     0,         /*Uniform Block Size of 128K*/
+     (u_int16 *) 0x20},   /*Uniform Block Size of 128K*/
+
+/* INTEL 4 */
+    {FLASH_ID_ENTER_INTEL,
+     FLASH_ID_EXIT_INTEL,
+     FLASH_CHIP_VENDOR_ST,
+     0x0016,    /*M58LW032D-90*/
+     0x2000000, /*32Mbit (2Mbit x 16)*/
+     90, 0, 0, 0, 0,
+     65, 0, 0, 45, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_UNLOCK_LOCK_SEQ_REQD         |
+             FLASH_FLAGS_CONSTANT_WRITE_SPEED | 
+             FLASH_FLAGS_UNIFORM_SECTOR_SIZE,
+     0,         /*Uniform Block Size of 128K*/
+     (u_int16 *) 0x20},   /*Uniform Block Size of 128K*/
+
+/* INTEL 5 */
+    {FLASH_ID_ENTER_INTEL,
+     FLASH_ID_EXIT_INTEL,
+     FLASH_CHIP_VENDOR_ST,
+     0x88C6,    /*M58LT128GST*/
+     0x8000000, /*128Mbit (8Mbit x 16)*/
+     90, 0, 0, 0, 0,
+     65, 0, 0, 45, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_UNLOCK_LOCK_SEQ_REQD         |
+             FLASH_FLAGS_CONSTANT_WRITE_SPEED | 
+             FLASH_FLAGS_UNIFORM_SECTOR_SIZE,
+     0,         /*Uniform Block Size of 128K*/
+     (u_int16 *) 0x10},   /*Uniform Block Size of 64K*/
+     
+/* INTEL 6 */
+    /* Not tested with Rev_C*/
+    {FLASH_ID_ENTER_INTEL,
+     FLASH_ID_EXIT_INTEL,
+     FLASH_CHIP_VENDOR_INTEL,
+     0x889D,    /*28F800B-70*/
+     0x800000,  /*8Mbit (512Kbit x 16 or 1Mbit x 8)*/
+     70, 10, 10, 10, 10,
+     600, 10, 10, 10, 10,
+     0,         /*Burst Wait            ???*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_CONSTANT_WRITE_SPEED,  /*Flags*/
+     sizeof(Intel8MegBootBlockSectors)/sizeof(u_int16), /*# Sectors*/
+     Intel8MegBootBlockSectors},    /*Sector Layout*/
+
+/* INTEL 7 */
+    /* Not tested with Rev_C*/
+    {FLASH_ID_ENTER_INTEL,
+     FLASH_ID_EXIT_INTEL,
+     FLASH_CHIP_VENDOR_INTEL,
+     0x99,      /*28F008B??????*/
+     0x800000,  /*8Mbit (1Mbit x 8)*/
+     70, 10, 10, 10, 10,
+     600, 10, 10, 10, 10,
+     0,         /*Burst Wait            ???*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_CONSTANT_WRITE_SPEED,  /*Flags*/
+     sizeof(Intel8MegBootBlockSectors)/sizeof(u_int16), /*# Sectors*/
+     Intel8MegBootBlockSectors},    /*Sector Layout*/
+
+/* INTEL 8 */
+    /* Not tested with Rev_C*/
+    {FLASH_ID_ENTER_INTEL,
+     FLASH_ID_EXIT_INTEL,
+     FLASH_CHIP_VENDOR_INTEL,
+     0x88F2,    /*28F800F3-120*/
+     0x800000,  /*8Mbit (512Kbit x 16)*/
+     120, 0, 0, 0, 0,
+     200, 0, 0, 0, 0,
+     40,        /*Burst Wait*/
+     16,        /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_BURST_SUPPORTED | FLASH_FLAGS_CONSTANT_WRITE_SPEED, /*Flags*/
+     sizeof(Intel8MegBootBlockFlexSectors)/sizeof(u_int16), /*# Sectors*/
+     Intel8MegBootBlockFlexSectors},    /*Sector Layout*/
+
+/* INTEL 9 */
+    /* Not tested with Rev_C*/
+    {FLASH_ID_ENTER_INTEL,
+     FLASH_ID_EXIT_INTEL,
+     FLASH_CHIP_VENDOR_INTEL,
+     0x88F4,    /*28F160F3-120*/
+     0x1000000, /*16Mbit (1Mbit x 16)*/
+     120, 0, 0, 0, 0,
+     200, 0, 0, 0, 0,
+     70,        /*Burst Wait*/
+     16,        /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_BURST_SUPPORTED | FLASH_FLAGS_CONSTANT_WRITE_SPEED, /*Flags*/
+     sizeof(Intel16MegBootBlockFlexSectors)/sizeof(u_int16), /*# Sectors*/
+     Intel16MegBootBlockFlexSectors},    /*Sector Layout*/
+
+/* INTEL 10 */
+    /* Tested with Rev_C*/
+    {FLASH_ID_ENTER_INTEL,
+     FLASH_ID_EXIT_INTEL,
+     FLASH_CHIP_VENDOR_INTEL,
+     0x88C3,    /*28F160C3-90*/
+     0x1000000, /*16Mbit (1Mbit x 16)*/
+     75, 0, 0, 0, 0,
+     65, 0, 0, 45, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_UNLOCK_LOCK_SEQ_REQD | FLASH_FLAGS_CONSTANT_WRITE_SPEED, /*Flags*/
+     sizeof(Intel16MegBootBlockFlexSectors)/sizeof(u_int16), /*# Sectors*/
+     Intel16MegBootBlockFlexSectors},    /*Sector Layout*/
+
+/* INTEL 11 */
+    /* Tested with Rev_C*/
+    {FLASH_ID_ENTER_INTEL,
+     FLASH_ID_EXIT_INTEL,
+     FLASH_CHIP_VENDOR_INTEL,
+     0x88C5,    /*28F320C3-100*/
+     0x2000000, /*32Mbit (2Mbit x 16)*/
+     90, 0, 0, 0, 0,
+     65, 0, 0, 45, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_UNLOCK_LOCK_SEQ_REQD | FLASH_FLAGS_CONSTANT_WRITE_SPEED, /*Flags*/
+     sizeof(Intel32MegBootBlockFlexSectors)/sizeof(u_int16), /*# Sectors*/
+     Intel32MegBootBlockFlexSectors},    /*Sector Layout*/
+
+/* INTEL 12 */
+    /* WARNING: Not verified as correct (timings from datasheet but not verified using a scope)*/
+    {FLASH_ID_ENTER_INTEL,
+     FLASH_ID_EXIT_INTEL,
+     FLASH_CHIP_VENDOR_INTEL,
+     0x0016,    /*28F320J3C-110*/
+     0x2000000, /*32Mbit (2Mbit x 16)*/
+     110, 0, 0, 0, 0,
+     70, 0, 0, 55, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_UNLOCK_LOCK_SEQ_REQD | FLASH_FLAGS_CONSTANT_WRITE_SPEED, /*Flags*/
+     sizeof(Intel32MegBootBlockFlexSectors)/sizeof(u_int16), /*# Sectors*/
+     Intel32MegBootBlockFlexSectors},    /*Sector Layout*/
+
+/* INTEL 13 */
+    {FLASH_ID_ENTER_INTEL,
+     FLASH_ID_EXIT_INTEL,
+     FLASH_CHIP_VENDOR_ST,
+     0x8817,    /* M30LW128 -> stacked flash.. total 128Mbit but 64Mbit chip is stacked */
+     0x8000000, /*64Mbit (1Mbit x 64) ? */
+     110, 0, 0, 0, 0,
+     70, 0, 0, 0, 0,
+     0,         /* Burst Wait */
+     0,         /* BytesPerPage (Burst Mode) */
+     FLASH_FLAGS_CONSTANT_WRITE_SPEED | 
+     FLASH_FLAGS_UNIFORM_SECTOR_SIZE,
+     0,                   /* # Sectors */
+     (u_int16 *)0x20},    /* Sector Layout */
+
+/* INTEL 14 */    
+    {FLASH_ID_ENTER_INTEL,
+     FLASH_ID_EXIT_INTEL,
+     FLASH_CHIP_VENDOR_ST,
+     0x88C7,    /*M58LT128 -> stacked flash.. total 128Mbit but 64Mbit chip is stacked */
+     0x8000000, /*128Mbit (1Mbit x 128) */
+     100, 10, 10, 10, 10,
+     100, 10, 10, 10, 10,
+     30,         /*Burst Wait */
+     16,         /*BytesPerPage (Burst Mode) */
+     FLASH_FLAGS_BURST_SUPPORTED,
+     sizeof(Intel16MegSixmileSectors)/sizeof(u_int16), /* # Sectors */
+     Intel16MegSixmileSectors},    /* Sector Layout */
+ 
+/* INTEL 15 */    
+    {FLASH_ID_ENTER_INTEL,
+     FLASH_ID_EXIT_INTEL,
+     FLASH_CHIP_VENDOR_INTEL,
+     0x881B,    /* 28F128J3 */
+     0x8000000, /* 128Mbit (1Mbit x 128) */
+     100, 0, 0, 0, 0,
+     50, 0, 0, 0, 0,
+     25,         /*Burst Wait */
+     16,         /*BytesPerPage (Burst Mode) */
+     FLASH_FLAGS_BURST_SUPPORTED |
+     FLASH_FLAGS_UNLOCK_LOCK_SEQ_REQD, 
+     sizeof(Intel16MegSixmileSectors)/sizeof(u_int16), /* # Sectors */
+     Intel16MegSixmileSectors},    /* Sector Layout */
+     
+
+    /*******/
+    /* AMD */
+    /*******/
+
+    /*NOTE: AMD parts that can be used in both x8 and x16 configurations*/
+    /*must be listed as separate parts in this table. This is because they*/
+    /*require different EnterIDMode routines.*/
+
+    /* Not tested with Rev_C*/
+    {FLASH_ID_ENTER_AMDX8,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_AMD,
+     0x58,      /*29F800BB-70*/
+     0x800000,  /*8Mbit (1Mbit x 8)*/
+     70, 10, 10, 10, 10,
+     70, 10, 10, 10, 10,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     0,         /*Flags*/
+     sizeof(AMD8MegBootBlockSectors)/sizeof(u_int16),   /*# Sectors*/
+     AMD8MegBootBlockSectors},  /*Sector Layout*/
+
+    /* Not tested with Rev_C*/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_AMD,
+     0x2258,    /*29F800BB-70*/
+     0x800000,  /*8Mbit (512Kbit x 16)*/
+     70, 10, 10, 10, 10,
+     70, 10, 10, 10, 10,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     0,         /*Flags*/
+     sizeof(AMD8MegBootBlockSectors)/sizeof(u_int16),   /*# Sectors*/
+     AMD8MegBootBlockSectors},  /*Sector Layout*/
+
+    /* Tested with Rev_C*/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_AMD,
+     0x2245,    /*29PL160CB-70R*/
+     0x1000000, /*16Mbit (1Mbit x 16)*/
+     70, 0, 0, 0, 0,
+     50, 15, 15, 45, 15,
+     30,        /*Burst Wait*/
+     16,        /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_BURST_SUPPORTED,       /*Flags*/
+     sizeof(AMD16MegBootBlockSectors)/sizeof(u_int16),  /*# Sectors*/
+     AMD16MegBootBlockSectors}, /*Sector Layout*/
+
+    /* Tested with Rev_C*/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_AMD,
+     0x2249,    /*29LV160DB-70*/
+     0x1000000, /*16Mbit (1Mbit x 16)*/
+     70, 0, 0, 0, 0,
+     50, 0, 0, 45, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     0,         /*Flags*/
+     sizeof(AMD16MegBootBlockSectors2)/sizeof(u_int16),  /*# Sectors*/
+     AMD16MegBootBlockSectors2}, /*Sector Layout*/
+
+    /* Tested with Rev_C*/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_AMD,
+     0x22C4,    /*29LV160DT-70*/
+     0x1000000, /*16Mbit (1Mbit x 16)*/
+     70, 0, 0, 0, 0,
+     50, 0, 0, 45, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_TOP_BOOT_BLOCK_LAYOUT,       /*Flags*/
+     sizeof(AMD16MegBootBlockSectors2)/sizeof(u_int16),  /*# Sectors*/
+     AMD16MegBootBlockSectors2}, /*Sector Layout*/
+
+     {FLASH_ID_ENTER_INTEL,
+       FLASH_ID_EXIT_INTEL,
+       FLASH_CHIP_VENDOR_ATMEL,
+       0x89c5,    /*AT49BV320S*/
+       0x2000000, /*32Mbit (2Mbit x 16)*/
+       70, 0, 0, 0, 0,
+       50, 0, 0, 45, 0,
+       0,         /*Burst Wait*/
+       0,         /*BytesPerPage (Burst Mode)*/
+       FLASH_FLAGS_UNLOCK_LOCK_SEQ_REQD, /*Flags*/
+       sizeof(Atmel32MegBootBlockSectors)/sizeof(u_int16),  /*# Sectors*/
+       Atmel32MegBootBlockSectors}, /*Sector Layout*/
+       
+     {FLASH_ID_ENTER_INTEL,
+       FLASH_ID_EXIT_INTEL,
+       FLASH_CHIP_VENDOR_ATMEL,
+       0x16DE,    /*AT49BV6404S*/
+       0x4000000, /*64Mbit (4Mbit x 16)*/
+       70, 0, 0, 0, 0,
+       50, 0, 0, 45, 0,
+       0,         /*Burst Wait*/
+       0,         /*BytesPerPage (Burst Mode)*/
+       FLASH_FLAGS_UNLOCK_LOCK_SEQ_REQD,       /*Flags*/
+       sizeof(Atmel64MegBootBlockSectors)/sizeof(u_int16),  /*# Sectors*/
+       Atmel64MegBootBlockSectors}, /*Sector Layout*/ 
+ 
+  /* Mike: Atmel 64Mbit non secure flash */
+      {FLASH_ID_ENTER_INTEL,
+       FLASH_ID_EXIT_INTEL,
+       FLASH_CHIP_VENDOR_ATMEL,
+       0x00c5,    /*AT49BV6416C*/
+       0x4000000, /*64Mbit (4Mbit x 16)*/
+       70, 0, 0, 0, 0,
+       50, 0, 0, 45, 0,
+       0,         /*Burst Wait*/
+       0,         /*BytesPerPage (Burst Mode)*/
+       FLASH_FLAGS_UNLOCK_LOCK_SEQ_REQD,       /*Flags*/
+       sizeof(Atmel64MegBootBlockSectors)/sizeof(u_int16),  /*# Sectors*/
+       Atmel64MegBootBlockSectors}, /*Sector Layout*/
+
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_MACRONIX,
+     0x227e,    /*MX29LA32xMT-B*/
+     0x2000000, /*32Mbit (2Mbit x 16)*/
+     70, 0, 0, 0, 0,
+     50, 0, 0, 45, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     0,       /*Flags*/
+     sizeof(MXIC16MegBootBlockSectors)/sizeof(u_int16),  /*# Sectors*/
+     MXIC16MegBootBlockSectors}, /*Sector Layout*/
+
+    /* Not tested with Rev_C*/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_AMD,
+     0x22BF,    /*29LV200BB-70*/
+     0x200000,  /*2Mbit (128Kbit x 16)*/
+     70, 0, 0, 0, 0,
+     50, 0, 0, 45, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     0,         /*Flags*/
+     sizeof(AMD16MegBootBlockSectors3)/sizeof(u_int16),  /*# Sectors*/
+     AMD16MegBootBlockSectors3}, /*Sector Layout*/
+
+    /* Not tested with Rev_C*/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_AMD,
+     0x223B,    /*29LV200BT-70*/
+     0x200000,  /*2Mbit (128Kbit x 16)*/
+     70, 0, 0, 0, 0,
+     50, 0, 0, 45, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_TOP_BOOT_BLOCK_LAYOUT,         /*Flags*/
+     sizeof(AMD16MegBootBlockSectors3)/sizeof(u_int16),  /*# Sectors*/
+     AMD16MegBootBlockSectors3}, /*Sector Layout*/
+
+    /* Not Yet Tested, but copied from 29LV160D, which is mostly the same*/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_AMD,
+     0x22d7,    /*29LV641D-90*/
+     0x4000000, /*64Mbit (4Mbit x 16)*/
+     90, 0, 0, 0, 0,
+     50, 0, 0, 45, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_UNIFORM_SECTOR_SIZE,   /*Flags*/
+     0,         /*Uniform Block Size of 64K*/
+     (u_int16 *) 0x10},   /*Uniform Block Size of 64K*/
+
+
+    /***********/
+    /* Fujitsu */
+    /***********/
+
+    /* Not tested with Rev_C*/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_FUJITSU,
+     0x2245,    /*29PL160BD-75*/
+     0x1000000, /*16Mbit (1Mbit x 16)*/
+     80, 0, 0, 0, 0,
+     80, 0, 0, 0, 0,
+     30,        /*Burst Wait*/
+     16,        /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_BURST_SUPPORTED,       /*Flags*/
+     sizeof(AMD16MegBootBlockSectors)/sizeof(u_int16),  /*# Sectors*/
+     AMD16MegBootBlockSectors}, /*Sector Layout*/
+
+    /* Not tested with Rev_C*/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_FUJITSU,
+     0x2227,    /*29PL160TD-75*/
+     0x1000000, /*16Mbit (1Mbit x 16)*/
+     80, 0, 0, 0, 0,
+     80, 0, 0, 0, 0,
+     30,        /*Burst Wait*/
+     16,        /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_BURST_SUPPORTED | FLASH_FLAGS_TOP_BOOT_BLOCK_LAYOUT,       /*Flags*/
+     sizeof(AMD16MegBootBlockSectors)/sizeof(u_int16),  /*# Sectors*/
+     AMD16MegBootBlockSectors}, /*Sector Layout*/
+
+    /* Not tested with Rev_C*/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_FUJITSU,
+     0x2245,    /*29LV160B-80*/
+     0x1000000, /*16Mbit (1Mbit x 16)*/
+     80, 0, 0, 0, 0,
+     80, 0, 0, 0, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     0,         /*Flags*/
+     sizeof(AMD16MegBootBlockSectors2)/sizeof(u_int16),  /*# Sectors*/
+     AMD16MegBootBlockSectors2}, /*Sector Layout*/
+
+    /* Not tested with Rev_C*/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_FUJITSU,
+     0x2227,    /*29LV160T-80*/
+     0x1000000, /*16Mbit (1Mbit x 16)*/
+     80, 0, 0, 0, 0,
+     80, 0, 0, 0, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_TOP_BOOT_BLOCK_LAYOUT,       /*Flags*/
+     sizeof(AMD16MegBootBlockSectors2)/sizeof(u_int16),  /*# Sectors*/
+     AMD16MegBootBlockSectors2}, /*Sector Layout*/
+
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_FUJITSU,
+     0x225F,    /*29DL324BD-90*/
+     0x2000000, /*32Mbit (2Mbit x 16)*/
+     90, 0, 0, 0, 0,
+     50, 0, 0, 45, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     0,         /*Flags*/
+     sizeof(Intel32MegBootBlockFlexSectors)/sizeof(u_int16),  /*# Sectors*/
+     Intel32MegBootBlockFlexSectors}, /*Sector Layout*/
+
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_FUJITSU,
+     0x225C,    /*29DL324TD-90*/
+     0x2000000, /*32Mbit (2Mbit x 16)*/
+     90, 0, 0, 0, 0,
+     50, 0, 0, 45, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_TOP_BOOT_BLOCK_LAYOUT,       /*Flags*/
+     sizeof(Intel32MegBootBlockFlexSectors)/sizeof(u_int16),  /*# Sectors*/
+     Intel32MegBootBlockFlexSectors}, /*Sector Layout*/
+
+    /*******/
+    /* SST */
+    /*******/
+
+    /* Tested with Rev_C*/
+    {FLASH_ID_ENTER_ATMELX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_SST,
+     0x2782,    /*39VF160-70*/
+     0x1000000, /*16Mbit (1Mbit x 16)*/
+     90, 0, 0, 0, 0,
+     50, 0, 0, 60, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_UNIFORM_SECTOR_SIZE,   /*Flags*/
+     0,         /*Uniform Block Size of 64K*/
+     (u_int16 *) 0x10},   /*Uniform Block Size of 64K*/
+
+    /*********/
+    /* Atmel */
+    /*********/
+
+    /* Not tested with Rev_C*/
+    {FLASH_ID_ENTER_ATMELX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_ATMEL,
+     0x00C8,    /*AT49BV32X-90*/
+     0x2000000, /*32Mbit (2Mbit x 16)*/
+     90, 0, 0, 0, 0,
+     200, 0, 0, 0, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_CONSTANT_WRITE_SPEED,  /*Flags*/
+     sizeof(Intel32MegBootBlockFlexSectors)/sizeof(u_int16),  /*# Sectors*/
+     Intel32MegBootBlockFlexSectors}, /*Sector Layout*/
+
+    /* Not tested with Rev_C*/
+    {FLASH_ID_ENTER_ATMELX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_ATMEL,
+     0x00C9,    /*AT49BV32XT-90*/
+     0x2000000, /*32Mbit (2Mbit x 16)*/
+     90, 0, 0, 0, 0,
+     200, 0, 0, 0, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_TOP_BOOT_BLOCK_LAYOUT | FLASH_FLAGS_CONSTANT_WRITE_SPEED, /*Flags*/
+     sizeof(Intel32MegBootBlockFlexSectors)/sizeof(u_int16),  /*# Sectors*/
+     Intel32MegBootBlockFlexSectors}, /*Sector Layout*/
+
+    /* Tested with Rev_C*/
+    {FLASH_ID_ENTER_ATMELX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_ATMEL,
+     0x00C0,    /*AT49LV1614-90*/
+     0x1000000, /*16Mbit (1Mbit x 16)*/
+     90, 0, 0, 0, 0,
+     100, 0, 0, 60, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_CONSTANT_WRITE_SPEED, /*Flags*/
+     sizeof(Atmel16MegBootBlockSectors)/sizeof(u_int16),  /*# Sectors*/
+     Atmel16MegBootBlockSectors}, /*Sector Layout*/
+
+    /**********************/
+    /* STMicroelectronics */
+    /**********************/
+
+    /* Not tested with Rev_C only*/
+    {FLASH_ID_ENTER_ATMELX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_ST,
+     0x2249, 		/*M29W160DB*/
+     0x1000000, /*16Mbit (1Mbit x 16)*/
+     90, 0, 0, 0, 0,
+     60, 10, 35, 35, 10,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     0,         /*Flags*/
+     sizeof(AMD16MegBootBlockSectors2)/sizeof(u_int16),  /*# Sectors*/
+     AMD16MegBootBlockSectors2}, /*Sector Layout*/
+
+    {FLASH_ID_ENTER_INTEL,
+     FLASH_ID_EXIT_INTEL,
+     FLASH_CHIP_VENDOR_ST,
+     0x8857,    /* M28W640FSU */
+     0x4000000, /*64Mbit (4Mbit x 16)*/
+     150, 10, 10, 10, 10,
+     150, 10, 10, 10, 10,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_UNIFORM_SECTOR_SIZE,
+     0,         /*Uniform Block Size of 128K*/
+     (u_int16 *) 0x20},   /*Uniform Block Size of 128K*/
+
+
+    /***********/
+    /* Toshiba */
+    /***********/
+
+    /* Tested with Rev_C*/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_TOSHIBA,
+     0x0043,    /*TC58FVB160FT-85*/
+     0x1000000, /*16Mbit (1Mbit x 16)*/
+     85, 0, 0, 0, 0,
+     65, 0, 0, 30, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_CONSTANT_WRITE_SPEED, /*Flags*/
+     sizeof(AMD16MegBootBlockSectors2)/sizeof(u_int16),  /*# Sectors*/
+     AMD16MegBootBlockSectors2}, /*Sector Layout*/
+
+    /***********/
+    /* Spansion */
+    /***********/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_AMD,
+     0x227e,    /*S29GL128N*/
+     0x8000000, /*128Mbit (8Mbit x 16)*/
+     120, 0, 0, 0, 0,
+     120, 0, 0, 0, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_UNIFORM_SECTOR_SIZE,
+     0,         /*Uniform Block Size of 128K*/
+     (u_int16 *) 0x20},   /*Uniform Block Size of 128K*/
+
+    /*****************/
+    /* Spansion 32 MB*/
+    /*****************/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_AMD,
+     0x227E,    /*S29GL256P*/
+     0x10000000, /*256Mbit (16Mbit x 16)*/
+     120, 0, 0, 0, 0,
+     120, 0, 0, 0, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_UNIFORM_SECTOR_SIZE,
+     0,         /*Uniform Block Size of 128K*/
+     (u_int16 *) 0x20},   /*Uniform Block Size of 128K*/
+
+    /*****************/
+    /* Spansion 64 MB*/
+    /*****************/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_AMD,
+     0x227E,    /*S29GL256P*/
+     0x20000000, /*512Mbit (32Mbit x 16)*/
+     120, 0, 0, 0, 0,
+     120, 0, 0, 0, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_UNIFORM_SECTOR_SIZE,
+     0,         /*Uniform Block Size of 128K*/
+     (u_int16 *) 0x20},   /*Uniform Block Size of 128K*/
+
+    /*****************/
+    /* Spansion 128 MB*/
+    /*****************/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_AMD,
+     0x227E,    /*S29GL128x/S29GL256x/S29GL512x/S29GL01Gx :- x=N/P*/
+     0x40000000, /*1Gbit (64Mbit x 16)*/
+     120, 0, 0, 0, 0,
+     120, 0, 0, 0, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_UNIFORM_SECTOR_SIZE,
+     0,         /*Uniform Block Size of 128K*/
+     (u_int16 *) 0x20},   /*Uniform Block Size of 128K*/
+
+    /*****************/
+    /* Numonyx 128 MB*/
+    /*****************/
+    {FLASH_ID_ENTER_AMDX16,
+     FLASH_ID_EXIT_AMD,
+     FLASH_CHIP_VENDOR_ST,
+     0x227E,    /*M29EW-28F640J3 STRATA FLASH*/
+     0x40000000, /*1Gbit (64Mbit x 16)*/
+     120, 0, 0, 0, 0,
+     120, 0, 0, 0, 0,
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     FLASH_FLAGS_UNIFORM_SECTOR_SIZE,
+     0,         /*Uniform Block Size of 128K*/
+     (u_int16 *) 0x20},   /*Uniform Block Size of 128K*/
+
+    /*************************/
+    /*     Bank Empty        */
+    /* This must be the last */
+    /* entry in this table.  */
+    /*************************/
+    {0,
+     0,
+     0xff,      /*Empty*/
+     0xff,      /*Empty*/
+     0,         /*Empty*/
+     0, 0, 0, 0, 0,  /*Read Timings*/
+     0, 0, 0, 0, 0,  /*Write Timings*/
+     0,         /*Burst Wait*/
+     0,         /*BytesPerPage (Burst Mode)*/
+     0,         /*Flags*/
+     0,         /*# Sectors*/
+     0}         /*Sector Layout*/
+
+};
+
+int NumFlashTypes = sizeof(FlashDescriptors) / sizeof(FLASH_DESC) - 1;
+
+
+/****************************************************************************
+ * Modifications:
+ * $Log$
+ *
+ ****************************************************************************/ 
+
+
diff -Naur u-boot-2009.08/drivers/mtd/nor/nor_flashdescr.h u-boot-2009.08_alpha2/drivers/mtd/nor/nor_flashdescr.h
--- u-boot-2009.08/drivers/mtd/nor/nor_flashdescr.h	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor/nor_flashdescr.h	2009-12-20 23:05:06.000000000 -0600
@@ -0,0 +1,237 @@
+/****************************************************************************/
+/*                   CONEXANT PROPRIETARY AND CONFIDENTIAL                  */
+/*                       SOFTWARE FILE/MODULE HEADER                        */
+/*                   Conexant Systems Inc. (c) 1998-2006                    */
+/*                              Austin, TX                                  */
+/*                         All Rights Reserved                              */
+/****************************************************************************/
+/*
+ * Filename:        rom.h     
+ *
+ *
+ * Description:     Header file for describing flash/rom subsystem
+ *
+ *
+ * Author:          Miles Bintz
+ *
+ ****************************************************************************/
+/* $Id: nor_flashdescr.h 131363 2009-11-21 22:02:24Z murthyk $
+ ****************************************************************************/
+
+/**********************/
+/* Local Definitions  */
+/**********************/
+#define ROM_TYPE_FLASH                 1
+#define ROM_TYPE_OTP                   2
+#define ROM_TYPE_EMPTY                 3
+
+#define MAX_NUM_FLASH_ROM_BANKS        1
+#define MAX_NUM_SECTORS_PER_BANK                1024
+#define UNIFORM_SECTOR_SIZE                      0x20000; //128kb
+
+#define FLASH_CHIP_VENDOR_MICRON                0x2C
+#define FLASH_CHIP_VENDOR_INTEL                 0x89
+#define FLASH_CHIP_VENDOR_AMD                   0x01
+#define FLASH_CHIP_VENDOR_FUJITSU               0x04
+#define FLASH_CHIP_VENDOR_ATMEL                 0x1F
+#define FLASH_CHIP_VENDOR_ST                    0x20
+#define FLASH_CHIP_VENDOR_SST                   0xBF
+#define FLASH_CHIP_VENDOR_TOSHIBA               0x98
+#define FLASH_CHIP_VENDOR_MICRON                0x2C
+#define FLASH_CHIP_VENDOR_UNKNOWN               0xFF
+#define FLASH_CHIP_VENDOR_MACRONIX              0xC2
+
+/*
+** Flags definitions used for both the FLASH_DESC and BANK_INFO structures
+*/
+
+#define FLASH_FLAGS_BURST_SUPPORTED             (1L << 0)
+#define FLASH_FLAGS_UNLOCK_LOCK_SEQ_REQD        (1L << 1)
+#define FLASH_FLAGS_UNIFORM_SECTOR_SIZE         (1L << 2)
+#define FLASH_FLAGS_TOP_BOOT_BLOCK_LAYOUT       (1L << 3)
+#define FLASH_FLAGS_CONSTANT_WRITE_SPEED        (1L << 4)
+
+/*
+** FLASH Enter/Exit ID Mode Defines
+*/
+#define FLASH_ID_ENTER_INTEL            0
+#define FLASH_ID_ENTER_AMDX8            1
+#define FLASH_ID_ENTER_AMDX16           2
+#define FLASH_ID_ENTER_ATMELX16         3
+
+#define FLASH_ID_EXIT_INTEL             0
+#define FLASH_ID_EXIT_AMD               1
+
+/*********/
+/* Flash */
+/*********/
+
+/* NOTE:  The SetupROMs() function in STARTUP/ROM.C and CODELDR/ROM.C need to be
+** modified if this structure is modified.  ROM.C depends on the fact that there are
+** only two function vectors in this structure and that they are the first two entries
+** in the structure.  Do not change this or any image built will not be able to run from
+** ROM directly.
+*/
+
+/********************/
+/* Flash Descriptor */
+/********************/
+typedef struct _FLASH_DESC  {                                   /* See above note! */
+    u_int32     EnterIDMode;                                    /* See above note! */
+    u_int32     ExitIDMode;                                     /* See above note! */
+    u_int8      MfrID;
+    u_int32     DeviceID;
+    u_int32     ChipSize;
+    u_int16     ReadAccess;
+    u_int8      ReadCSSetup;
+    u_int8      ReadCSHold;
+    u_int8      ReadCtrlSetup;
+    u_int8      ReadAddrHold;
+    u_int16     WriteAccess;
+    u_int8      WriteCSSetup;
+    u_int8      WriteCSHold;
+    u_int8      WriteCtrlSetup;
+    u_int8      WriteAddrHold;
+    u_int8      BurstTime;
+    u_int8      PageSize;
+    u_int32     Flags;
+    u_int8      ChipNumSectors;
+    const u_int16 *ChipSectorSize;
+} FLASH_DESC, *LPFLASH_DESC;
+
+extern FLASH_DESC FlashDescriptors[];
+extern int NumFlashTypes;
+
+/********************/
+/* Bank Informction */
+/********************/
+typedef struct _BANK_INFO
+{
+    u_int32             BankBase;
+    u_int32             BankSize;
+    u_int8              ROMType;
+    u_int8              BankWidth;
+    u_int8              ChipWidth;
+    u_int32             Flags;
+    u_int32             ReadTimings;
+    u_int32             WriteTimings;
+    u_int32             WriteModeTimings;
+    LPFLASH_DESC        pFlashDesc;
+} BANK_INFO, *LPBANK_INFO;
+
+extern BANK_INFO Bank[];
+extern u_int8 NumROMBanks;
+extern u_int32 UniformBlockSize;
+
+/******************************************************************************************/
+/*                                                                                        */
+/* Bottom Boot Block Format:                                                              */
+/* ========================                                                               */
+/*                                                                                        */
+/*                     +----------------------------------------+ <- TOP of Bank 0        */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/* FsBlockStart     -> +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     +----------------------------------------+                         */
+/*                     +----------------------------------------+                         */
+/* CodeBlockStart   -> +----------------------------------------+                         */
+/*                     +----------------------------------------+                         */
+/* ConfigBlockStart -> +----------------------------------------+                         */
+/* BootBlockStart   -> +----------------------------------------+ <- BOTTOM of Bank 0     */
+/*                                                                   (0x20000000)         */
+/*                                                                                        */
+/* Top Boot Block Format:                                                                 */
+/* =====================                                                                  */
+/*                                                                                        */
+/*                     +----------------------------------------+ <- TOP of Bank 0        */
+/*                     +----------------------------------------+                         */
+/* ConfigBlockStart -> +----------------------------------------+                         */
+/*                     +----------------------------------------+                         */
+/*                     +----------------------------------------+                         */
+/*                     +----------------------------------------+                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/* FsBlockStart     -> +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/* CodeBlockStart   -> +----------------------------------------+                         */
+/*                     |                                        |                         */
+/* BootBlockStart   -> +----------------------------------------+ <- BOTTOM of Bank 0     */
+/*                                                                   (0x20000000)         */
+/*                                                                                        */
+/******************************************************************************************/
+
+/*************************************/
+/* ROM information array definitions */
+/*************************************/
+
+typedef struct _ROM_SECTOR
+{
+  u_int8        *Start;
+  u_int32       Length;
+} ROM_SECTOR;
+
+typedef struct _ROM_INFO
+{
+  u_int8        *BankBase;
+  u_int32       BankSize;
+  u_int32       NumSectors;
+  u_int32       Flags;
+  ROM_SECTOR    Sector[MAX_NUM_SECTORS_PER_BANK];
+} ROM_INFO;
+
+typedef struct
+{
+   u_int32	RunningFromBank;
+   u_int32      BootBlockSize;
+   u_int8       *BootBlockStart;
+   u_int32      ConfigBlockSize;
+   u_int8       *ConfigBlockStart;
+   u_int32      CodeBlockSize;
+   u_int8       *CodeBlockStart;
+   u_int32      FsBlockSize;
+   u_int8       *FsBlockStart;
+   u_int32      NumBanks;
+   u_int8       *RomBase;
+   u_int32      RomSize;
+   ROM_INFO     RomInfo[MAX_NUM_FLASH_ROM_BANKS];
+} FLASH_INFO, *LPFLASH_INFO;
+
+extern FLASH_INFO FlashInfo;
+
+/***********************/
+/* Flash ROM           */
+/***********************/
+
+void SetupNorFlashBanks(void);
+bool GetFlashInfo(LPFLASH_INFO pFlashInfo);
+bool InitFlashInfo(void);
+void setupFlashDescriptors(devicetype_t type, bool bootFromNor);
+bool FindCurrentBank(void *addr);
+
+/****************************************************************************
+* $Log$ 
+****************************************************************************/
+
diff -Naur u-boot-2009.08/drivers/mtd/nor/nor.h u-boot-2009.08_alpha2/drivers/mtd/nor/nor.h
--- u-boot-2009.08/drivers/mtd/nor/nor.h	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor/nor.h	2010-01-14 18:23:12.000000000 -0600
@@ -0,0 +1,62 @@
+/*
+#===========================================================
+#  COPYRIGHT (c) NXP B.V. 2009
+#  All rights are reserved. Reproduction in whole or in part is
+#  prohibited without the written consent of the copyright owner.
+#
+#  Author   : Makarand Pawagi
+#
+#  Filename : ip2016nor.h
+#
+#  Purpose  : GCS NOR Drivar Related definitions
+#===========================================================
+*/
+#ifndef __NOR_H
+#define __NOR_H
+
+/****************
+* Include Files *
+*****************/
+
+/*************************
+* NOR Register specific  *
+* local defines          *
+**************************/
+/*************************
+* NOR Register specific  *
+* local defines          *
+**************************/
+#include "board.h"
+
+#ifdef TEST_VPE
+#define NX_NOR_REG_BASE      				(0xE0600000 + 0x30000)
+#else
+#define NX_GCS_DMAC_BASE            IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_REG
+#endif
+
+#define NX_NOR_BUF_BASE   					(0x00000000)
+#define NOR_FLASH_BULK_XFER_SIZE 		(0x800)  // 2K bytes
+
+#define NX_NOR_REG_BASE          (0xE0600000 + 0x30000)
+#define  NX_NOR_DEV_MAIN_CFG(x)  (NX_NOR_REG_BASE + 0x0 + (x*0x20))
+#define  NX_NOR_DEV_READ_CFG(x)  (NX_NOR_REG_BASE + 0x4 + (x*0x20))
+#define  NX_NOR_DEV_WRITE_CFG(x) (NX_NOR_REG_BASE + 0x8 + (x*0x20))
+#define  NX_NOR_DEV_BURST_CFG(x) (NX_NOR_REG_BASE + 0xC + (x*0x20))
+
+/**********************
+* Function Prototypes *
+***********************/
+void nx_nor_init( devicetype_t   eDeviceType, 
+                  flashtype_t    eFlashType);
+
+int nx_nor_read(void *addr, int count, void *buffer);
+
+int nx_nor_write( void*          uFlashAddr, 
+                  int            uLength,
+                  void*          uDdrAddr);
+                  
+int nx_nor_block_erase(void *addr, int block_size, void (*callback)(void));
+
+
+#endif /* __NOR_H */
+
diff -Naur u-boot-2009.08/drivers/mtd/nor/nor_setupflashdescr.c u-boot-2009.08_alpha2/drivers/mtd/nor/nor_setupflashdescr.c
--- u-boot-2009.08/drivers/mtd/nor/nor_setupflashdescr.c	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor/nor_setupflashdescr.c	2010-01-13 19:45:22.000000000 -0600
@@ -0,0 +1,1077 @@
+/*
+#===========================================================
+#        COPYRIGHT (c) NXP B.V. 2009
+#        All rights are reserved. Reproduction in whole or in part is
+#        prohibited without the written consent of the copyright owner.
+#
+#        Author   : 
+#
+#        Filename : setupflashdescr.c
+#
+#        Purpose  : Mini NOR Flash driver
+#===========================================================
+*/
+
+/****************************************************************************/
+/* $Id: nor_setupflashdescr.c 135944 2009-12-16 01:25:19Z murthyk $
+ ****************************************************************************/
+
+
+/*
+                                                             
+ * Care must be taken with the SetupROMs(), RealSetupROMs(), and the Enter/Exit
+ * ROM ID vector functions.                                                                
+ * The SetupROMs() function also depends on the format of the FLASH_DESC
+ * structure defined in INCLUDE/BOARD.H.  If the location of the Enter/Exit
+ * ROM ID vector functions change in this structure, SetupROMs() has to be
+ * modified!         
+                                                          
+
+ */
+
+/******************/
+/* Include Files  */
+/******************/
+#include "ldr_common.h"
+#include "board.h"
+#include "nor.h"
+#include "nor_flashdescr.h" /* Dependant on types.h */
+//#include "hwIpheaders/phmodIpgcsflshntwk.h"
+#define printf myprint
+
+/**********************/
+/* Local Definitions  */
+/**********************/
+#ifndef TRUE
+#define TRUE 1
+#define FALSE 0
+#endif
+
+/***************/
+/* Global Data */
+/***************/
+bool flash_low_lev_init_done = FALSE;
+FLASH_INFO FlashInfo; /* TODO - Ideal place for this would be with the Back End NOR funcs */
+int CurrentBank;
+
+int (*write_flash_array[MAX_NUM_FLASH_ROM_BANKS])(void *addr, void *buffer, int size);
+int (*erase_flash_array[MAX_NUM_FLASH_ROM_BANKS])(void *addr, void (*callback)(void));
+int (*erase_flash_bank[MAX_NUM_FLASH_ROM_BANKS])(void *addr, void (*callback)(void));
+u_int32 ffs(u_int32 x);
+
+/*****************/
+/* External Data */
+/*****************/
+extern FLASH_DESC FlashDescriptors[];
+extern int write_amd(void *addr, void *buffer, int size);
+extern int write_buffer_amd(void *addr, void *buffer, int size);
+extern int write_buffer_amd_ST(void *addr, void *buffer, int size);
+extern int erase_amd(void *addr, void (*callback)(void));
+extern int erase_amd_bank(void *addr, void (*callback)(void));
+#if 0 /* TODO - Provide support for Intel Flash */
+extern int write_intel(void *addr, void *buffer, int size);
+extern int erase_intel(void *addr, void (*callback)(void));
+extern int erase_intel_bank(void *addr, void (*callback)(void));
+#endif 
+/***************/
+/* Global Data */
+/***************/
+u_int32 MemClkPeriod32 = 20;
+u_int8 NumROMBanks;
+u_int32 UniformBlockSize;
+BANK_INFO Bank[MAX_NUM_FLASH_ROM_BANKS];
+
+/****************************************************************************/
+/* ffs - find first bit set                                                  */      
+/* @x: the word to search                                                    */     
+/*                                                                           */
+/* This is defined the same way as                                           */
+/* the libc and compiler builtin ffs routines, therefore                     */
+/* differs in spirit from the above ffz (man ffs).                           */
+/*****************************************************************************/
+u_int32 ffs(u_int32 x)
+{
+   u_int32 r = 1;
+
+   if (!x)
+      return 0;
+   if (!(x & 0xffff)) {
+      x >>= 16;
+      r += 16;
+   }
+   if (!(x & 0xff)) {
+      x >>= 8;
+      r += 8;
+   }
+   if (!(x & 0xf)) {
+      x >>= 4;
+      r += 4;
+   }
+   if (!(x & 3)) {
+      x >>= 2;
+      r += 2;
+   }
+   if (!(x & 1)) {
+      x >>= 1;
+      r += 1;
+   }
+   return r;
+}
+
+
+/********************************************************************/
+/*  setupFlashDescriptors                                           */
+/*                                                                  */
+/*  PARAMETERS:                                                     */
+/*      Ptr to FlashDescriptors.                                    */
+/*                                                                  */
+/*  DESCRIPTION:                                                    */
+/*      Determines the ROM configuration and programs the ROM       */
+/*      descriptors, and mapping registers.                         */
+/*                                                                  */
+/*  RETURNS:                                                        */
+/*      Number of populated ROM banks.                              */
+/*                                                                  */
+/*  Note:  When used with the DOWNLOAD/DOWNLOAD.C (flash.li)        */
+/*         utility, this function takes no parameters and uses      */
+/*         the global FlashDescriptors array.                       */
+/*                                                                  */
+/*                                                                  */
+/*  Note 2:  It is assumed this function will be called early on    */
+/*           in startup before the mmu and caches are enabled       */
+/*                                                                  */
+/********************************************************************/
+void setupFlashDescriptors(devicetype_t type, bool bootFromNor)
+{
+   FLASH_DESC  *pFlashDesc;
+   bool        FlashFound;
+   u_int32     uMaxReadAccess, dev_cfg;
+   u_int32     uMaxDiv;
+   u_int8      BankWidth=0, ChipWidth=0, ROMBank, NumChips=0;
+   u_int32     BankSize, RealBankStartAddr, BankStartAddr;
+   u_int32     MfrCode=FLASH_CHIP_VENDOR_UNKNOWN;
+   u_int8      DeviceCode8;
+   u_int16     DeviceCode16;
+   u_int32     DeviceCode16Word2;
+   u_int32     FlashType, data, val, div;
+   u_int8      temp;
+
+   BankStartAddr = RealBankStartAddr = ROM_BASE;
+   
+   /****************************************/
+   /* Use the global Flash Descriptor Array*/
+   /****************************************/
+   pFlashDesc = (FLASH_DESC *) &FlashDescriptors;
+
+   /****************************************************/
+   /* Determine the maximum read access time required. */
+   /****************************************************/
+   uMaxReadAccess = 0;
+   for (FlashType = (u_int32)0; FlashType < (u_int32)NumFlashTypes; FlashType++)
+   {
+      if ( pFlashDesc[FlashType].ReadAccess > uMaxReadAccess )
+      {
+         uMaxReadAccess = pFlashDesc[FlashType].ReadAccess;
+      }
+   }
+
+   data = uMaxReadAccess * 100;
+   val = uMaxDiv = 0;
+   while(val < data)
+   {
+      ++uMaxDiv;
+      val += MemClkPeriod32;
+   }
+
+   /*********************************/
+   /* Initialize ROM variables.     */
+   /*********************************/
+   NumROMBanks = 0;
+
+   /**********************************************/
+   /* Calculate ROM bank size for each ROM bank. */
+   /**********************************************/
+   for (ROMBank = 0; ROMBank < MAX_NUM_FLASH_ROM_BANKS; ROMBank++)
+   {
+      /* Program the IP2016 STATIC MEMORY CONTROLLER */
+
+      /**********************************/
+      /* Initialize flag indicating we  */
+      /* found a recognized flash type. */
+      /**********************************/
+      FlashFound = FALSE;
+
+      /**********************************/
+      /* Initialize ROM descriptor and  */
+      /* ROM Map registers to values    */
+      /* that will allow us to access   */
+      /* flash devices and calculate    */
+      /* proper values.                 */
+      /**********************************/
+
+      /*
+       * Enable flash program mode
+       */
+
+      /******************************************************/
+      /* Determine chip width, bank width,  and flash type. */
+      /******************************************************/
+      
+      for (FlashType = (u_int32)0; FlashType < (u_int32)NumFlashTypes; FlashType++)
+      {
+         /**************************************/
+         /* Try setting XOE mask both ways for */
+         /* each flash type we try.            */
+         /**************************************/
+         /* Try Different Chip Selects */
+         // for (*pXOEMask |= (1 << cs), i = 0; i < 2; *pXOEMask &= ~(1 << cs), i++)
+         {
+            /*******************************/
+            /* Put flash into ID mode and  */
+            /* capture mfr and device IDs. */
+            /*******************************/
+
+            if ( pFlashDesc[FlashType].EnterIDMode == FLASH_ID_ENTER_INTEL )
+            {
+               *((volatile u_int32 *)(BankStartAddr)) = 0x90909090;
+            }
+            else if ( pFlashDesc[FlashType].EnterIDMode == FLASH_ID_ENTER_AMDX8 )
+            {
+               *((volatile u_int16 *)(BankStartAddr + (0xaaa<<1))) = 0xaaaaaaaa;
+               *((volatile u_int16 *)(BankStartAddr + (0x555<<1))) = 0x55555555;
+               *((volatile u_int16 *)(BankStartAddr + (0xaaa<<1))) = 0x90909090;
+            }
+            else if ( pFlashDesc[FlashType].EnterIDMode == FLASH_ID_ENTER_AMDX16 )
+            {
+               *((volatile u_int16 *)(BankStartAddr + (0x555<<1))) = 0x00aa;
+               *((volatile u_int16 *)(BankStartAddr + (0x2AA<<1))) = 0x0055;
+               *((volatile u_int16 *)(BankStartAddr + (0x555<<1))) = 0x0090;
+            }
+            else if ( pFlashDesc[FlashType].EnterIDMode == FLASH_ID_ENTER_ATMELX16 )
+            {
+               *((volatile u_int16 *)(BankStartAddr + (0x5555<<1))) = 0xaaaaaaaa;
+               *((volatile u_int16 *)(BankStartAddr + (0x2aaa<<1))) = 0x55555555;
+               *((volatile u_int16 *)(BankStartAddr + (0x5555<<1))) = 0x90909090;
+            }
+            
+            MfrCode = *((volatile u_int16 *)BankStartAddr);
+            DeviceCode16 = *((volatile u_int16 *)(BankStartAddr + 2));
+            DeviceCode8 = *((volatile u_int8 *)(BankStartAddr + 2));
+            DeviceCode16Word2 = *((volatile u_int16 *)(BankStartAddr + (0xE<<1)));
+            /* DeviceCode32 = *((volatile u_int32 *)(BankStartAddr + ??? )); */
+
+            if ( pFlashDesc[FlashType].ExitIDMode == FLASH_ID_EXIT_INTEL )
+            {
+               *(volatile u_int32 *)(BankStartAddr) = 0xffffffff;
+            }
+            else if ( pFlashDesc[FlashType].ExitIDMode == FLASH_ID_EXIT_AMD )
+            {
+               *(volatile u_int8 *)(BankStartAddr) = 0xf0;
+            }
+            
+            /****************************/
+            /* Did we find a flash type */
+            /* we recognize?            */
+            /****************************/
+            if (MfrCode == pFlashDesc[FlashType].MfrID)
+            {
+               /*
+                * NOTE: Order is important! Must try largest chip sizes first.
+                */
+
+               /***************************/
+               /* How wide is the device? */
+               /***************************/
+               if ((u_int16)DeviceCode16 == (u_int16)pFlashDesc[FlashType].DeviceID)
+               {
+                  FlashFound = TRUE;
+
+                  /*********************************/
+                  /* How many devices in the bank? */
+                  /*********************************/
+                  if ((u_int16)(DeviceCode16 >> 16) ==
+                     (u_int16)pFlashDesc[FlashType].DeviceID)
+                  {
+                     BankWidth = 32;
+                  }
+                  else
+                  {
+                     BankWidth = 16;
+                  }
+                  ChipWidth = 16;
+                  NumChips = BankWidth >> 4;
+                  break;
+               }
+               else if ((u_int8)DeviceCode8 == (u_int8)pFlashDesc[FlashType].DeviceID)
+               {
+                  FlashFound = TRUE;
+                  /*********************************/
+                  /* How many devices in the bank? */
+                  /*********************************/
+                  if ((u_int8)(DeviceCode8 >> 16) ==
+                     (u_int8)pFlashDesc[FlashType].DeviceID)
+                  {
+                     BankWidth = 32;
+                  }
+                  else if ((u_int8)(DeviceCode8 >> 8) ==
+                           (u_int8)pFlashDesc[FlashType].DeviceID)
+                  {
+                     BankWidth = 16;
+                  }
+                  else
+                  {
+                     BankWidth = 8;    
+                  }
+                  BankWidth = 8; 
+                  ChipWidth = 8;
+                  NumChips = BankWidth >> 3;
+                  /*break;*/ /* We need to put it back when we try different chip selects */
+               }
+            }
+         }
+         if (FlashFound)
+         {
+            if ( (u_int8)DeviceCode8 == 0x7E)
+            {
+               if ( DeviceCode16Word2 == 0x2240 && pFlashDesc[FlashType].ChipSize == 0x40000000 )
+                  FlashFound = TRUE;
+               else if ( DeviceCode16Word2 == 0x2228 && pFlashDesc[FlashType].ChipSize == 0x40000000 )
+                  FlashFound = TRUE;
+               else if ( DeviceCode16Word2 == 0x2223 && pFlashDesc[FlashType].ChipSize == 0x20000000 )
+                  FlashFound = TRUE;
+               else if ( DeviceCode16Word2 == 0x2222 && pFlashDesc[FlashType].ChipSize == 0x10000000 )
+                  FlashFound = TRUE;
+               else if ( DeviceCode16Word2 == 0x2221 && pFlashDesc[FlashType].ChipSize == 0x08000000 )
+                  FlashFound = TRUE;
+               else
+                  FlashFound = FALSE;
+            }
+         }          
+         if (FlashFound)
+         {
+            break;
+         }
+      }
+            
+      /******************************/
+      /* Keep track of how many ROM */
+      /* banks are populated.       */
+      /******************************/
+      if (FlashFound)
+      {
+         NumROMBanks++;
+
+         /***********************************/
+         /* Calculate bank size and program */
+         /* ROM size register.              */
+         /***********************************/
+         BankSize = (NumChips) * (pFlashDesc[FlashType].ChipSize >> 3);
+         /* TODO- revisit this Calculation for IP2016 */
+
+         /***********************************/
+         /* Calculate the Read & Write      */
+         /* timings for the secondary       */
+         /* descriptor                      */
+         /***********************************/
+         Bank[ROMBank].ReadTimings  = 0x0;
+         #if 0
+         if(pFlashDesc[FlashType].ReadCSSetup)
+         {
+            data = pFlashDesc[FlashType].ReadCSSetup * 100;
+            val = div = 0;
+            while(val < data)
+            {
+               ++div;
+               val += MemClkPeriod32;
+            }
+            Bank[ROMBank].ReadTimings |= ((div&0x7)<<10); /* Revisit */
+         }
+
+         if(pFlashDesc[FlashType].ReadCSHold)
+         {
+            data = pFlashDesc[FlashType].ReadCSHold * 100;
+            val = div = 0;
+            while(val < data)
+            {
+               ++div;
+               val += MemClkPeriod32;
+            }
+            Bank[ROMBank].ReadTimings |= ((div&0x7)<<7); /* Revisit */
+         }
+         #endif
+         if(pFlashDesc[FlashType].ReadCtrlSetup)
+         {
+            data = pFlashDesc[FlashType].ReadCtrlSetup * 100UL;
+            val = div = 0;
+            while(val < data)
+            {
+               ++div;
+               val += MemClkPeriod32;
+            }
+            Bank[ROMBank].ReadTimings |= ((div&0x7)<<10);  /* RD_SETUP - [12:10] */
+         }
+
+         if(pFlashDesc[FlashType].ReadAddrHold)
+         {
+            data = pFlashDesc[FlashType].ReadAddrHold * 100UL;
+            val = div = 0;
+            while(val < data)
+            {
+               ++div;
+               val += MemClkPeriod32;
+            }
+            Bank[ROMBank].ReadTimings |= ((div&0xf)<<13); /* RD_HOLD - [9:7] */
+         }
+
+         Bank[ROMBank].WriteTimings = 0x0;
+         #if 0
+         if(pFlashDesc[FlashType].WriteCSSetup) 
+         {
+            data = pFlashDesc[FlashType].WriteCSSetup * 100;
+            val = div = 0;
+            while(val < data)
+            {
+               ++div;
+               val += MemClkPeriod32;
+            }
+            Bank[ROMBank].WriteTimings |= ((div&0x7)<<7); /* Revisit*/
+         }
+         if(pFlashDesc[FlashType].WriteCSHold)
+         {
+            data = pFlashDesc[FlashType].WriteCSHold * 100;
+            val = div = 0;
+            while(val < data)
+            {
+               ++div;
+               val += MemClkPeriod32;
+            }
+            Bank[ROMBank].WriteTimings |= ((div&0x7)<<7);
+         }
+         #endif
+
+         if(pFlashDesc[FlashType].WriteCtrlSetup)
+         {
+            data = pFlashDesc[FlashType].WriteCtrlSetup * 100UL;
+            val = div = 0;
+            while(val < data)
+            {
+               ++div;
+               val += MemClkPeriod32;
+            }
+            Bank[ROMBank].WriteTimings |= ((div&0x7)<<10); /*WR_SETUP - b[12:10] */
+         }
+
+         if(pFlashDesc[FlashType].WriteAddrHold)
+         {
+            data = pFlashDesc[FlashType].WriteAddrHold * 100UL;
+            val = div = 0;
+            while(val < data)
+            {
+               ++div;
+               val += MemClkPeriod32;
+            }
+            Bank[ROMBank].WriteTimings |= ((div&0xf)<<7); /* WR_HOLD -[9:7] */
+         }
+
+         /***********************************/
+         /* Program ROM descriptor register */
+         /* with proper settings for this   */
+         /* flash type.                     */
+         /***********************************/
+
+         /*  TODO - Program the Bank Width in the IP 2016 */
+
+         /*
+          * Set ReadAccess time from table
+          */
+         if(pFlashDesc[FlashType].ReadAccess)
+         {
+            data = pFlashDesc[FlashType].ReadAccess * 100UL + 500;
+            val = div = 0;
+            while(val < data)
+            {
+               ++div;
+               val += MemClkPeriod32;
+            }
+            Bank[ROMBank].ReadTimings |= ((div&0x7f)<<0); 
+         }
+
+         /*
+          * Set WriteAccess time from table
+          */
+         if(pFlashDesc[FlashType].WriteAccess)
+         {
+            data = pFlashDesc[FlashType].WriteAccess * 100UL;
+            val = div = 0;
+            while(val < data)
+            { 
+               ++div;
+               val += MemClkPeriod32;
+            }
+            Bank[ROMBank].WriteTimings |= ((div&0x7f)<<0); 
+         }
+
+         if(MfrCode == FLASH_CHIP_VENDOR_INTEL)
+         {
+            /*
+             * Fix for Intel flash leaving READ_ARRAY
+             * mode with data pattern match on writes
+             */
+         }
+
+         /*
+          * Set bursting if supported by the flash ROM
+          */
+         if(FlashDescriptors[FlashType].Flags & FLASH_FLAGS_BURST_SUPPORTED)
+         {
+            /*
+             * Set BurstAccess time
+             */
+            data = FlashDescriptors[FlashType].BurstTime * 100UL;
+            val = div = 0;
+            while(val < data)
+            {
+               ++div;
+               val += MemClkPeriod32;
+            }
+         }
+         else
+         {
+            /*
+             * Irrelevant
+             */
+         }
+        
+         /**************************************************/
+         /* Store flash info for this bank so that our API */
+         /* clients can get it later.                      */
+         /* Ensure the actual global FlashDescriptor array */
+         /* is used here, not the copy!                    */
+         /**************************************************/
+         Bank[ROMBank].pFlashDesc = (LPFLASH_DESC) &FlashDescriptors[FlashType];
+         Bank[ROMBank].BankWidth = BankWidth;
+         Bank[ROMBank].ChipWidth = ChipWidth; 
+
+         /* Program the timings in the Flash Controller */
+     //    writel(Bank[ROMBank].ReadTimings,IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_REG);
+     //    writel(Bank[ROMBank].WriteTimings,IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_REG);
+        
+         /*
+          * Disable flash program mode
+          */
+#ifdef NOR_FLASH_DEBUG         
+         *((volatile u_int16 *)(BankStartAddr + (0x555<<1))) = 0x00aa;
+         *((volatile u_int16 *)(BankStartAddr + (0x2AA<<1))) = 0x0055;
+         *((volatile u_int16 *)(BankStartAddr + (0x555<<1))) = 0x00a0;
+      
+         *((volatile u_int16*)(BankStartAddr+(0x208))) = 0x1111;
+         *((volatile u_int8 *)(BankStartAddr)) = 0xf0;
+
+         *((volatile u_int16 *)(BankStartAddr + (0x555<<1))) = 0x00aa;
+         *((volatile u_int16 *)(BankStartAddr + (0x2AA<<1))) = 0x0055;
+         *((volatile u_int16 *)(BankStartAddr + (0x555<<1))) = 0x00a0;
+              
+         *((volatile u_int16*)(BankStartAddr+(0x20A))) = 0x2222;
+         *((volatile u_int8 *)(BankStartAddr)) = 0xf0;
+         temp = *((volatile u_int16*)(BankStartAddr+(0x208)));
+#endif         
+         
+      }
+      else
+      {
+         /*
+          * Disable flash program mode
+          * Nothing to be done for IP2016 
+          */
+
+         break;
+      }
+   }
+   /* Consolidate the BANK Information */
+   SetupNorFlashBanks();
+   InitFlashInfo();
+}
+
+/********************************************************************/
+/*  SetupNorFlashBanks                                              */
+/*                                                                  */
+/*  PARAMETERS:                                                     */
+/*      None.                                                       */
+/*                                                                  */
+/*  DESCRIPTION:                                                    */
+/*                                                                  */
+/*  RETURNS:                                                        */
+/*      Nothing                                                     */
+/*                                                                  */
+/********************************************************************/
+void SetupNorFlashBanks(void)
+{
+   int BankNum, NumChips, BytesPerChip;
+
+   /*
+    * Fill in the array of BANK_INFO elements which
+    * describes the ROM banks.
+    */
+   for (BankNum = 0; BankNum < MAX_NUM_FLASH_ROM_BANKS; BankNum++)
+   {
+      /* 
+       * If the bank is empty, we need to fill in the info as such.   
+       */
+      if (BankNum < NumROMBanks)
+      {
+         Bank[BankNum].ROMType = ROM_TYPE_FLASH;
+         BytesPerChip = (int)(Bank[BankNum].pFlashDesc->ChipSize / 8);
+         //NumChips = Bank[BankNum].BankWidth / Bank[BankNum].ChipWidth;
+         NumChips = Bank[BankNum].BankWidth >> ffs( Bank[BankNum].ChipWidth);
+         Bank[BankNum].BankSize = (u_int32)(BytesPerChip * NumChips);
+         if (BankNum == 0)
+         {
+            Bank[BankNum].BankBase = ROM_BASE;
+         }
+         else
+         {
+            Bank[BankNum].BankBase = Bank[BankNum-1].BankBase +
+                    Bank[BankNum-1].BankSize;
+         }
+         Bank[BankNum].Flags = Bank[BankNum].pFlashDesc->Flags;
+         #if 0 
+         /* Lets deal with Uniform Size when we have to Support Intel Flash */
+         /*
+          * Calculate the interface information which uses a uniform block size
+          * and eliminates the boot block area.
+          */
+         if(Bank[0].Flags & FLASH_FLAGS_UNIFORM_SECTOR_SIZE)
+         {
+            UniformBlockSize = ((u_int32)Bank[0].pFlashDesc->ChipSectorSize<<12)*NumChips;
+         }
+         else if(Bank[0].Flags & FLASH_FLAGS_TOP_BOOT_BLOCK_LAYOUT)
+         {
+            UniformBlockSize = ((u_int32)Bank[0].pFlashDesc->ChipSectorSize[0]<<12)*NumChips;
+         }
+         else
+         {
+            UniformBlockSize = ((u_int32)Bank[0].pFlashDesc->ChipSectorSize[Bank[0].pFlashDesc->ChipNumSectors-1]<<12)*NumChips;
+         }
+         #endif
+      }
+      else
+      {
+         /*
+          * The bank is empty.
+          */
+         Bank[BankNum].ROMType = ROM_TYPE_EMPTY;
+         Bank[BankNum].BankSize = 0;
+         Bank[BankNum].BankBase = Bank[BankNum-1].BankBase;
+         Bank[BankNum].Flags = 0;
+         Bank[BankNum].ReadTimings = 0;
+         Bank[BankNum].WriteTimings = 0;
+         Bank[BankNum].WriteModeTimings = 0;
+      }
+   }
+} /* SetupROMs */
+
+/********************************************************************/
+/*  FindCurrentBank                                                 */
+/*                                                                  */
+/*  PARAMETERS:                                                     */
+/*      addr - void ptr to a ROM address                            */
+/*                                                                  */
+/*  DESCRIPTION:                                                    */
+/*      Determines the bank containing addr.                        */
+/*                                                                  */
+/*  RETURNS:                                                        */
+/*      TRUE - addr was within one of the flash banks.              */
+/*      FALSE - addr was outside the range of the flash banks.      */
+/********************************************************************/
+bool FindCurrentBank(void *addr)
+{
+    u_int32 BankBase;
+
+    BankBase = ROM_BASE;
+
+    /* If addr is less than ROM start, return FALSE. */
+    if (BankBase > ((u_int32)addr | ROM_BASE))
+    {
+        return(FALSE);
+    }
+        
+    for (CurrentBank = 0; CurrentBank < MAX_NUM_FLASH_ROM_BANKS; CurrentBank++)
+    {
+        BankBase += Bank[CurrentBank].BankSize;
+        if (BankBase > (u_int32)addr)
+         {
+            break;
+         }
+    }
+    
+    /* If addr is higher than the top of ROM, return FALSE. */
+    if (BankBase < (u_int32)addr)
+    {
+        return(FALSE);
+    }
+
+    return(TRUE);
+}    
+
+/******************************************************************************************/
+/* This function is called by users of the flash ROM to obtain information about where    */
+/* the different users of the flash ROM live.  This is the central point of flash ROM     */
+/* global allocation.  See include/startup.h for accompanying header file.                */
+/*                                                                                        */
+/* Bottom Boot Block Format:                                                              */
+/* ========================                                                               */
+/*                                                                                        */
+/*                     +----------------------------------------+ <- TOP of Bank 0        */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/* FsBlockStart     -> +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     +----------------------------------------+                         */
+/*                     +----------------------------------------+                         */
+/* CodeBlockStart   -> +----------------------------------------+                         */
+/*                     +----------------------------------------+                         */
+/* ConfigBlockStart -> +----------------------------------------+                         */
+/* BootBlockStart   -> +----------------------------------------+ <- BOTTOM of Bank 0     */
+/*                                                                   (0x20000000)         */
+/*                                                                                        */
+/* Top Boot Block Format:                                                                 */
+/* =====================                                                                  */
+/*                                                                                        */
+/*                     +----------------------------------------+ <- TOP of Bank 0        */
+/*                     +----------------------------------------+                         */
+/* ConfigBlockStart -> +----------------------------------------+                         */
+/*                     +----------------------------------------+                         */
+/*                     +----------------------------------------+                         */
+/*                     +----------------------------------------+                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/* FsBlockStart     -> +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/*                     +----------------------------------------+                         */
+/*                     |                                        |                         */
+/* CodeBlockStart   -> +----------------------------------------+                         */
+/*                     |                                        |                         */
+/* BootBlockStart   -> +----------------------------------------+ <- BOTTOM of Bank 0     */
+/*                                                                   (0x20000000)         */
+/*                                                                                        */
+/******************************************************************************************/
+
+bool GetFlashInfo(LPFLASH_INFO pFlashInfo)
+{
+   int	NumChips, i;
+   int	size;
+   unsigned int  j;
+   bool rc = TRUE;
+
+  // NumChips =  Bank[0].BankWidth / Bank[0].ChipWidth;
+   NumChips =  Bank[0].BankWidth >> ffs( Bank[0].ChipWidth);
+  
+  
+   if(Bank[0].Flags & FLASH_FLAGS_UNIFORM_SECTOR_SIZE)
+   {
+      pFlashInfo->BootBlockSize		= ((u_int32) 
+         Bank[0].pFlashDesc->ChipSectorSize<<12UL) * (u_int32)NumChips;
+   }
+   else
+   {
+      pFlashInfo->BootBlockSize		= ((u_int32) 
+         Bank[0].pFlashDesc->ChipSectorSize[0]<<12) * (u_int32)NumChips;
+   }
+   pFlashInfo->BootBlockStart		= (u_int8 *) Bank[0].BankBase;
+
+   pFlashInfo->NumBanks			= (u_int32)  NumROMBanks;
+   pFlashInfo->RomBase			= (u_int8 *) ROM_BASE;
+   pFlashInfo->RomSize			= (u_int32)  0x0;
+
+   pFlashInfo->RunningFromBank		= 0;
+
+   for(i=0; i<NumROMBanks; i++)
+   {
+     pFlashInfo->RomSize		+= (u_int32) Bank[i].BankSize;
+   }
+   
+   if(Bank[0].Flags & FLASH_FLAGS_UNIFORM_SECTOR_SIZE)
+   {
+       pFlashInfo->ConfigBlockSize	= 
+         (((u_int32) Bank[0].pFlashDesc->ChipSectorSize<<12) * (u_int32)NumChips) << 1;
+       pFlashInfo->ConfigBlockStart	= (u_int8 *) pFlashInfo->BootBlockStart +
+							pFlashInfo->BootBlockSize;
+       pFlashInfo->FsBlockSize		= 
+         (((u_int32) Bank[0].pFlashDesc->ChipSectorSize<<12) * (u_int32)NumChips) << 2;
+       pFlashInfo->FsBlockStart		= 
+         (u_int8 *) ((u_int32) Bank[0].BankBase + Bank[0].BankSize -
+         ((((u_int32)Bank[0].pFlashDesc->ChipSectorSize<<12) * (u_int32)NumChips)<<2));
+       pFlashInfo->CodeBlockStart       = (u_int8 *) pFlashInfo->ConfigBlockStart +
+                                                        pFlashInfo->ConfigBlockSize;
+   }
+   else
+   {
+
+   if(Bank[0].pFlashDesc->ChipSectorSize[0] <
+	Bank[0].pFlashDesc->ChipSectorSize[Bank[0].pFlashDesc->ChipNumSectors-1])
+   {
+     /* Bottom Boot Block Flash ROM Parts */
+     if(Bank[0].pFlashDesc->ChipSectorSize[1] == Bank[0].pFlashDesc->ChipSectorSize[2])
+     {
+       pFlashInfo->ConfigBlockSize	= (((u_int32) Bank[0].pFlashDesc->ChipSectorSize[1]<<12)
+						* (u_int32)NumChips) << 1;
+       pFlashInfo->ConfigBlockStart	= (u_int8 *) pFlashInfo->BootBlockStart +
+							pFlashInfo->BootBlockSize;
+     }
+     else
+     {
+       pFlashInfo->ConfigBlockSize	= (u_int32)  0x0;
+       pFlashInfo->ConfigBlockStart	= (u_int8 *) 0x0;
+       rc = FALSE;
+     }
+     if(Bank[0].pFlashDesc->ChipSectorSize[Bank[0].pFlashDesc->ChipNumSectors-1] ==
+		Bank[0].pFlashDesc->ChipSectorSize[Bank[0].pFlashDesc->ChipNumSectors-2])
+     {
+       pFlashInfo->FsBlockSize		=
+	(((u_int32) Bank[0].pFlashDesc->ChipSectorSize[Bank[0].pFlashDesc->ChipNumSectors-1]<<12)
+						* (u_int32)NumChips) << 1;
+       pFlashInfo->FsBlockStart		= (u_int8 *) ((u_int32) Bank[0].BankBase +
+		Bank[0].BankSize -
+		((((u_int32)Bank[0].pFlashDesc->ChipSectorSize[Bank[0].pFlashDesc->ChipNumSectors-1]<<12) * 
+		(u_int32)NumChips)<<1));
+     }
+     else
+     {
+       pFlashInfo->FsBlockSize		= (u_int32)  0x0;
+       pFlashInfo->FsBlockStart		= (u_int8 *) 0x0;
+       rc = FALSE;
+     }
+     pFlashInfo->CodeBlockStart		= (u_int8 *) pFlashInfo->ConfigBlockStart +
+							pFlashInfo->ConfigBlockSize;
+   }
+   else
+   {
+     /* Top Boot Block Flash ROM Parts */
+     if(Bank[0].pFlashDesc->ChipSectorSize[Bank[0].pFlashDesc->ChipNumSectors-1] ==
+		Bank[0].pFlashDesc->ChipSectorSize[Bank[0].pFlashDesc->ChipNumSectors-2])
+     {
+       pFlashInfo->ConfigBlockSize	= 
+       (((u_int32) Bank[0].pFlashDesc->ChipSectorSize[Bank[0].pFlashDesc->ChipNumSectors-1]<<12) * (u_int32)NumChips) << 1;
+       pFlashInfo->ConfigBlockStart	= (u_int8 *) ((u_int32) Bank[0].BankBase +
+		Bank[0].BankSize -
+		((((u_int32)Bank[0].pFlashDesc->ChipSectorSize[Bank[0].pFlashDesc->ChipNumSectors-1]<<12) * (u_int32)NumChips)<<1));
+     }
+     else
+     {
+       pFlashInfo->ConfigBlockSize	= (u_int32)  0x0;
+       pFlashInfo->ConfigBlockStart	= (u_int8 *) 0x0;
+       rc = FALSE;
+     }
+     for(i=Bank[0].pFlashDesc->ChipNumSectors-1, size=0; i; i--)
+     {
+       size += (int)((u_int32)Bank[0].pFlashDesc->ChipSectorSize[i]<<12);
+       if(Bank[0].pFlashDesc->ChipSectorSize[i] == Bank[0].pFlashDesc->ChipSectorSize[0])
+         break;
+     }
+
+     if((i>3)&&(Bank[0].pFlashDesc->ChipSectorSize[i] == Bank[0].pFlashDesc->ChipSectorSize[i-1]))
+     {
+       pFlashInfo->FsBlockSize		= (((u_int32)Bank[0].pFlashDesc->ChipSectorSize[0]<<12)
+						* (u_int32)NumChips) << 1;
+       pFlashInfo->FsBlockStart		= (u_int8 *) ((u_int32) Bank[0].BankBase +
+		Bank[0].BankSize -
+		((u_int32)size +((((u_int32)Bank[0].pFlashDesc->ChipSectorSize[i]<<12) * (u_int32)NumChips) << 1)));
+     }
+     else
+     {
+       pFlashInfo->FsBlockSize		= (u_int32)  0x0;
+       pFlashInfo->FsBlockStart		= (u_int8 *) 0x0;
+       rc = FALSE;
+     }
+     pFlashInfo->CodeBlockStart		= (u_int8 *) pFlashInfo->BootBlockStart +
+							pFlashInfo->BootBlockSize;
+   }
+
+   }
+
+   /* Ensure CodeBlockStart is on a 64K boundary or codeldr will not load the image! */
+   pFlashInfo->CodeBlockStart		= (u_int8 *)
+   	(((u_int32)pFlashInfo->CodeBlockStart+0x10000UL-1)&(~(0x10000UL-1)));
+   pFlashInfo->CodeBlockSize		= (u_int32) pFlashInfo->FsBlockStart -
+							(u_int32) pFlashInfo->CodeBlockStart;
+
+   if(!rc)
+   {
+     return (rc);
+   }
+
+   /* Setup FlashInfo.RomInfo array */
+   for(i=0; i<NumROMBanks; i++)
+   {
+     pFlashInfo->RomInfo[i].Flags      = Bank[i].Flags;
+     pFlashInfo->RomInfo[i].BankBase   = (u_int8 *)Bank[i].BankBase;
+     pFlashInfo->RomInfo[i].BankSize   = Bank[i].BankSize;
+     pFlashInfo->RomInfo[i].NumSectors = Bank[i].pFlashDesc->ChipNumSectors;
+     if(pFlashInfo->RomInfo[i].NumSectors>MAX_NUM_SECTORS_PER_BANK)
+     {
+       return (FALSE);
+     }
+     if(Bank[0].Flags & FLASH_FLAGS_UNIFORM_SECTOR_SIZE)
+     {
+         pFlashInfo->RomInfo[i].Sector[0].Start = pFlashInfo->RomInfo[i].BankBase;
+         pFlashInfo->RomInfo[i].Sector[0].Length = (u_int32) Bank[0].pFlashDesc->ChipSectorSize << 12;
+         pFlashInfo->RomInfo[i].Sector[1].Start = 0;
+         pFlashInfo->RomInfo[i].Sector[1].Length = 0;
+/*         pFlashInfo->RomInfo[i].NumSectors = Bank[i].BankSize /
+			((u_int32) Bank[i].pFlashDesc->ChipSectorSize << 12);*/
+         pFlashInfo->RomInfo[i].NumSectors = 
+            Bank[i].BankSize >> ffs(((u_int32) Bank[i].pFlashDesc->ChipSectorSize << 12));
+     }
+     else
+     {
+
+     for(j=0; j<pFlashInfo->RomInfo[i].NumSectors; j++)
+     {
+       if(j)
+       {
+         pFlashInfo->RomInfo[i].Sector[j].Start = pFlashInfo->RomInfo[i].Sector[j-1].Start +
+                                      pFlashInfo->RomInfo[i].Sector[j-1].Length;
+       }
+       else
+       {
+         pFlashInfo->RomInfo[i].Sector[j].Start = pFlashInfo->RomInfo[i].BankBase;
+       }
+       pFlashInfo->RomInfo[i].Sector[j].Length =
+         ((u_int32)Bank[i].pFlashDesc->ChipSectorSize[j]<<12UL) *
+         ((u_int32)Bank[i].BankWidth >> ffs( Bank[i].ChipWidth));
+     }
+     }
+     #if 0 /* Not required - since XIP is not supported on Apollo */
+     if((!pFlashInfo->RunningFromBank) &&
+        (((u_int32)&write_flash >= Bank[i].BankBase) &&
+         ((u_int32)&write_flash < (Bank[i].BankBase + Bank[i].BankSize))))
+     {
+       pFlashInfo->RunningFromBank = (i+1);
+     }
+     #endif
+   }
+   return (rc);
+}
+
+/***************************************************************************************/
+/* This function finds out the width of the ROM and the type of the flash that's used. */
+/* Returns: TRUE if successful, FALSE if failed                                        */
+/***************************************************************************************/
+bool InitFlashInfo(void)
+{                
+   int BankNum;
+
+   if(!flash_low_lev_init_done)
+   {
+      for (BankNum = 0; BankNum < MAX_NUM_FLASH_ROM_BANKS; BankNum++)
+      {  
+         if (Bank[BankNum].BankWidth != 0)                                     
+         {
+            switch (Bank[BankNum].pFlashDesc->MfrID)
+            {                                   
+               /*
+               ST uses both types... :-(
+               */
+               case FLASH_CHIP_VENDOR_ST:
+               switch (Bank[BankNum].pFlashDesc->DeviceID)
+               {
+                  case 0x0016:
+                  case 0x8857:
+                  case 0x88C6:
+                     write_flash_array[BankNum] = NULL;//write_intel;
+                     erase_flash_array[BankNum] = NULL;//erase_intel;
+                     erase_flash_bank[BankNum]  = NULL;//erase_intel_bank;
+                  break;
+
+                  case 0x2249:
+                  default:
+                     write_flash_array[BankNum] = write_buffer_amd_ST;
+                     erase_flash_array[BankNum] = erase_amd;
+                     erase_flash_bank[BankNum]  = erase_amd_bank;
+                  break;
+               }
+               break;
+
+               /*
+               Intel has a different write/erase sequence
+               than everyone else in the industry...
+               */
+               case FLASH_CHIP_VENDOR_MICRON:
+               case FLASH_CHIP_VENDOR_INTEL:
+                  write_flash_array[BankNum] = NULL;//write_intel;
+                  erase_flash_array[BankNum] = NULL;//erase_intel;
+                  erase_flash_bank[BankNum]  = NULL;//erase_intel_bank;
+               break;
+
+               case FLASH_CHIP_VENDOR_ATMEL:
+                  switch (Bank[BankNum].pFlashDesc->DeviceID)
+                  {
+                     case 0x00c5:
+                     case 0x89c5:
+                        write_flash_array[BankNum] = NULL;//write_intel;
+                        erase_flash_array[BankNum] = NULL;//erase_intel;
+                        erase_flash_bank[BankNum]  = NULL;//erase_intel_bank;
+                     break;
+
+                     default:
+                        write_flash_array[BankNum] = write_amd;
+                        erase_flash_array[BankNum] = erase_amd;
+                        erase_flash_bank[BankNum]  = erase_amd_bank;
+                     break;
+                  }
+               break;
+
+               /*
+               Everyone else uses the "AMD" write/erase
+               sequence...
+               */
+               case FLASH_CHIP_VENDOR_AMD:
+               case FLASH_CHIP_VENDOR_FUJITSU:
+               case FLASH_CHIP_VENDOR_SST:
+               default:
+                  write_flash_array[BankNum] = write_buffer_amd;
+                  erase_flash_array[BankNum] = erase_amd;
+                  erase_flash_bank[BankNum]  = erase_amd_bank;
+               break;
+
+            }
+         }
+      }
+
+      /* Setup global FlashInfo structure */
+      GetFlashInfo(&FlashInfo);
+
+      /* Set flag indicating low level init has been done. */
+      flash_low_lev_init_done = TRUE;
+   }
+
+   return(TRUE);
+}
+
+
+
+/****************************************************************************
+ * Modifications:
+ * $Log$
+ ****************************************************************************/
+
diff -Naur u-boot-2009.08/drivers/mtd/nor_old/ip1902dmac.c u-boot-2009.08_alpha2/drivers/mtd/nor_old/ip1902dmac.c
--- u-boot-2009.08/drivers/mtd/nor_old/ip1902dmac.c	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor_old/ip1902dmac.c	2009-12-18 11:58:05.000000000 -0600
@@ -0,0 +1,237 @@
+/*
+#===========================================================
+#        COPYRIGHT (c) NXP B.V. 2009
+#        All rights are reserved. Reproduction in whole or in part is
+#        prohibited without the written consent of the copyright owner.
+#
+#        Author   : Har Yash Bahadur 
+#
+#        Filename : ip1902dmac.c
+#
+#        Purpose  : mini DMA driver
+#===========================================================
+*/
+
+#include "ip1902dmac.h"
+
+
+
+#define DMA_CHAN_0 (0)
+
+#define DMAC_ENB_VAL  (0x0000001)
+#define DMAC_DIS_VAL     (0x0)
+#define DMAC_CHAN_DIS_VAL  (0x0)
+
+
+
+/********************************************************************/
+/*  nx_dmac_trans_comp                                                       */
+/*                                                                  */
+/*  PARAMETERS:                                                     */
+/*                      None         */
+/*                                                                  */
+/*  DESCRIPTION:                                                    */
+/*        Waits of DMA TC interrupt fo channel 0. Also checks the Error INT  */
+/*                                                                  */
+/*  RETURNS:                                                        */
+/*                RETCODE_FAILED                                                  */
+/*                RETCODE_OK                                                  */
+/********************************************************************/
+retcode_t nx_dmac_trans_comp(void)
+{
+   retcode_t ret=RETCODE_OK;
+   u_int32 chanid = DMA_CHAN_0;  /* Use DMA channel 0 */
+   u_int32  int_stat, tc_stat, err_stat;
+
+   /* Wait for completion */
+   while(1)
+   { 
+      /* Read the interrupt status & chan ID */
+      int_stat = readl(IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_REG);
+
+      if(int_stat & (1<<chanid)) 
+      {
+         /* Check TC interrupt */
+         tc_stat = readl(IPBGCSFLSHNTWK_DMAC_DMACINTTCSTATUS_REG);
+         if(tc_stat & (1<<chanid)) 
+         {
+            writel((1<<chanid), IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_REG);
+            break;
+         }
+         /* Check Error interrupt */
+         err_stat = readl(IPBGCSFLSHNTWK_DMAC_DMACINTERRORSTATUS_REG);
+         if(err_stat & (1<<chanid)) 
+         {
+            writel((1<<chanid), IPBGCSFLSHNTWK_DMAC_DMACINTERRCLR_REG);
+
+            /* Tell the world that an ERROR occured during DMA xfer */
+
+            ret = RETCODE_FAILED;
+            break;
+         }
+      }
+   }
+
+   /* Disable channel */
+   writel(DMAC_CHAN_DIS_VAL, IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_REG);
+
+   /* Disable DMAC */
+   writel(DMAC_DIS_VAL, IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_REG);
+
+   return ret;
+}
+
+
+
+/********************************************************************/
+/*  nx_dmac_trans_start                                                       */
+/*                                                                                     */
+/*  PARAMETERS:                                                                 */
+/*                      dest        -- Dest address                            */
+/*                      src          -- Src address                             */
+/*                      chan_control   -- value to be programmed into channel control reg  */
+/*                      chan_control   -- value to be programmed into channel config  reg  */
+/*                                                                               */
+/*  DESCRIPTION:                                                           */
+/*        Setup the DMA for data xfer. Use channel ZERO (0)    */
+/*                                                                  */
+/*  RETURNS:                                                        */
+/*                None                                                  */
+/********************************************************************/
+void nx_dmac_trans_start(u_int32 dest, u_int32 src, u_int32 chan_control,  u_int32 chan_config)
+{
+	//Prg DMA Src Address
+	writel(src, IPBGCSFLSHNTWK_DMAC_DMACC0SRCADDR_REG); /* 0xe0634100 */
+
+	//Prg DMA Dest Address
+	writel(dest, IPBGCSFLSHNTWK_DMAC_DMACC0DESTADDR_REG); /*0xe0634104*/
+
+	//Prg DMA Channel Control Register
+	writel(chan_control, IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_REG); /*0xe063410C*/
+
+	//Prg DMA Configuration Register to enable the DMAC
+	writel(DMAC_ENB_VAL , IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_REG );  /* 0xe0634030 */
+
+	//Prg DMA Channel Configuration Register and also enable the DMA channel 
+	writel(chan_config, IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_REG);  /* 0xe0634110 */
+
+	return;
+
+}
+
+#if 0  //TEST_SIM_DMA
+   if ( ip2017 == eFlashtype )
+   {
+	//###########################################
+	//DMAC Programming for NAND  /* 512 bytes dma xfer*/
+	//###########################################
+
+	//Prg DMA Src Address
+	writel((NX_GCS_NAND_AHB_BUF + src1), 0xe0634100); 
+
+	//Prg DMA Dest Address
+	writel(dest, 0xe0634104);
+
+	//Prg DMA Channel Control Register
+	writel(0x8d4b6080, 0xe063410C); 
+
+	//Prg DMA Configuration Register to enable the DMA
+	writel(0x0000001, 0xe0634030);
+
+	//Prg DMA Channel Configuration Register 
+	writel(0x000C001, 0xe0634110);
+      }
+   else if (ip2016 == eFlashtype)
+   {
+	//###########################################
+	//DMAC Programming for NOR      /* 2K dma xfer*/
+	//###########################################
+     
+	//Prg DMA Src Address
+	writel((NX_GCS_NOR_AHB_BUF + src1), 0xe0634100); 
+
+	//Prg DMA Dest Address
+	writel(dest, 0xe0634104);
+
+/*  TBD -  change DMA settign accroding to fuse bits  TBD TBD */
+     
+	//Prg DMA Channel Control Register 
+	writel(0x8d4b6200, 0xe063410C);  
+
+	//Prg DMA Configuration Register to enable the DMA
+	writel(0x0000001, 0xe0634030);
+
+	//Prg DMA Channel Configuration Register
+	writel(0x000C001, 0xe0634110);
+    }
+  else // (sfc == eFlashtype)
+   {
+     /* 4K dma xfer*/
+  	//Prg DMA Src Address
+	writel((NX_GCS_SFC_AHB_BUF + src1/* 0x80000000 */), 0xe0634100); 
+
+	//Prg DMA Dest Address
+	writel(dest, 0xe0634104);
+
+      // Program the DMA channel control reg
+       writel(0x8d4b6400  , 0xe063410C);
+/*
+       writel(IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_I_RW |
+                  IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DI_RW|
+                  IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SI_RW|
+                  (IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_D_VAL0<<IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_D_SHIFT)|
+                  (IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_S_VAL1<<IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_S_SHIFT)|
+                  (IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_VAL2<<IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_SHIFT)|
+                  (IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_VAL2<<IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_SHIFT)|
+                  (IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_RW)|
+                   (IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_RW)|
+                   (0x400<<IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_TRANSFERSIZE_SHIFT),
+                   IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_REG); // TBD -- test if this is ok during testing 
+*/
+
+
+	//Prg DMA Configuration Register to enable the DMA
+	writel(0x0000001, IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_REG);
+
+	//Prg DMA Channel Configuration Register
+	writel(0x000C001, IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_REG);
+   }
+#endif /* TEST_SIM_DMA */
+
+
+#if 0
+void nx_dmac_dma_channal_config_control(u_int32 value_control, u_int32 value_config, u_int32 chan_start)
+{
+      writel(value_control, chan_start+0xC); //DMAC ch0 control
+      writel(0x1, IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_REG); // Global DMAC control
+      writel(value_config, chan_start + 0x10); //DMAC ch0 config
+      return ;
+}
+
+#endif
+#if 0
+
+/**
+* nx_dmac_trans_comp - DMAC transfer complete function 
+* @chanid: Channel id
+*
+* Complete the DMAC transfers. 
+* 
+*/
+
+
+int32 nx_dmac_trans_comp(void)
+{
+      // Add proper code for detecting INT ... erro rinterrupt etc  
+	//wait_on_node(1, DMAC_INTR) // Wait for DMA TC to complete 
+	while (((readl(IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_REG))&0x1) != 0x1);
+
+	//Prg DMAC TC Clear Register 
+	writel(0x0000001, IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_REG);
+
+  return 0;
+
+}
+
+#endif
+
diff -Naur u-boot-2009.08/drivers/mtd/nor_old/ip1902dmac.h u-boot-2009.08_alpha2/drivers/mtd/nor_old/ip1902dmac.h
--- u-boot-2009.08/drivers/mtd/nor_old/ip1902dmac.h	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor_old/ip1902dmac.h	2009-12-18 11:58:05.000000000 -0600
@@ -0,0 +1,1267 @@
+/*
+#===========================================================
+#        COPYRIGHT (c) NXP B.V. 2009
+#        All rights are reserved. Reproduction in whole or in part is
+#        prohibited without the written consent of the copyright owner.
+#
+#        Author   : Makarand Pawagi
+#
+#        Filename : ip1902dmac.h
+#
+#        Purpose  : GCS DMAC Drivar Related definitions
+#===========================================================
+*/
+#ifndef __IP1902DMAC_H
+#define __IP1902DMAC_H
+
+/****************
+* Include Files *
+*****************/
+#include "ip2016nor.h"
+
+#include <common.h>
+#include <linux/mtd/mtd.h>
+#include <command.h>
+#include <watchdog.h>
+#include <malloc.h>
+#include <asm/byteorder.h>
+#include <jffs2/jffs2.h>
+#include <nand.h>
+
+
+/**********************
+* Function Prototypes *
+***********************/
+void nx_nand_dmac_init_sg(u_int32 pagesize, u_int32 oobsize, u_int8 * dmabuf) ;
+void nx_dmac_trf_start_sg(u_int32 dest) ;
+//int nx_dmac_trans_comp(void) ;
+retcode_t nx_dmac_trans_comp(void) ;
+
+//void nx_dmac_trans_start(u_int32 dest, u_int32 src1, bool read_page, flashtype_t eFlashtype) ;
+void nx_dmac_trans_start(u_int32 dest, u_int32 src, u_int32 chan_control,  u_int32 chan_config) ;
+
+
+/*************************
+* DMAC Register specific *
+* local defines          *
+**************************/
+#ifdef TEST_VPE
+#define NX_GCS_DMAC_BASE            (0xE0600000 + 0x30000 +0x4000)
+#else
+//#define NX_GCS_DMAC_BASE            IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_REG
+#endif
+
+#define  NX_DMAC_INT_STATUS         (0x000)
+#define  NX_DMAC_INT_TC_STATUS      (0x004)
+#define  NX_DMAC_INT_TC_CLR         (0x008)
+#define  NX_DMAC_INT_ERR_STATUS     (0x00C)
+#define  NX_DMAC_INT_ERR_CLR        (0x010)
+#define  NX_DMAC_INT_RAW_TC_STATUS  (0x014)
+#define  NX_DMAC_INT_RAW_ERR_STATUS (0x018)
+#define  NX_DMAC_ENLD_CHANS         (0x01C)
+#define  NX_DMAC_SOFT_BREQ          (0x020)
+#define  NX_DMAC_SOFT_SREQ          (0x024)
+#define  NX_DMAC_SOFT_LBREQ         (0x028)
+#define  NX_DMAC_SOFT_LSREQ         (0x02C)
+#define  NX_DMAC_CONFIG             (0x030)
+#define  NX_DMAC_SYNC               (0x034)
+#define  NX_DMAC_CHAN0_SRC          (0x100)
+#define  NX_DMAC_CHAN0_DST          (0x104)
+#define  NX_DMAC_CHAN0_LLI          (0x108)
+#define  NX_DMAC_CHAN0_CTRL         (0x10C)
+#define  NX_DMAC_CHAN0_CONFIG       (0x110)
+#define  NX_DMAC_PERI_ID0           (0xFE0)
+#define  NX_DMAC_PERI_ID1           (0xFE4)
+#define  NX_DMAC_PERI_ID2           (0xFE8)
+#define  NX_DMAC_PERI_ID3           (0xFEC)
+#define  NX_DMAC_CELL_ID0           (0xFF0)
+#define  NX_DMAC_CELL_ID1           (0xFF4)
+#define  NX_DMAC_CELL_ID2           (0xFF8)
+#define  NX_DMAC_CELL_ID3           (0xFFC)
+
+/* Channel 0 to use for NAND DMA transfers -- removed from GCS.h to here */
+#define NX_NAND_DMAC_CHANNEL        (0)
+#define  NX_DMAC_CHAN_OFF           (0x020)
+
+
+
+
+
+
+
+
+
+
+#define IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_REG  (IPBGCSFLSHNTWK_BASE + 0x4000)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_INTSTATUS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_INTSTATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCSTATUS_REG  (IPBGCSFLSHNTWK_BASE + 0x4004)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCSTATUS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCSTATUS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCSTATUS_INTTCSTATUS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCSTATUS_INTTCSTATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_REG	(IPBGCSFLSHNTWK_BASE + 0x4008)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_INTTCCLEAR_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_INTTCCLEAR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRORSTATUS_REG	(IPBGCSFLSHNTWK_BASE + 0x400c)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRORSTATUS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRORSTATUS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRORSTATUS_INTERRORSTATUS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRORSTATUS_INTERRORSTATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRCLR_REG  (IPBGCSFLSHNTWK_BASE + 0x4010)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRCLR_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRCLR_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRCLR_INTERRCLR_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRCLR_INTERRCLR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTTCSTATUS_REG	(IPBGCSFLSHNTWK_BASE + 0x4014)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTTCSTATUS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTTCSTATUS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTTCSTATUS_RAWINTTCSTATUS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTTCSTATUS_RAWINTTCSTATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTERRORSTATUS_REG  (IPBGCSFLSHNTWK_BASE + 0x4018)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTERRORSTATUS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTERRORSTATUS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTERRORSTATUS_RAWINTERRORSTATUS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTERRORSTATUS_RAWINTERRORSTATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACENBLDCHNS_REG  (IPBGCSFLSHNTWK_BASE + 0x401c)
+#define IPBGCSFLSHNTWK_DMAC_DMACENBLDCHNS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACENBLDCHNS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACENBLDCHNS_ENABLEDCHANNELS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACENBLDCHNS_ENABLEDCHANNELS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTBREQ_REG  (IPBGCSFLSHNTWK_BASE + 0x4020)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTBREQ_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTBREQ_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTBREQ_SOFTBREQ_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTBREQ_SOFTBREQ_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTSREQ_REG  (IPBGCSFLSHNTWK_BASE + 0x4024)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTSREQ_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTSREQ_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTSREQ_SOFTSREQ_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTSREQ_SOFTSREQ_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLBREQ_REG  (IPBGCSFLSHNTWK_BASE + 0x4028)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLBREQ_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLBREQ_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLBREQ_SOFTLBREQ_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLBREQ_SOFTLBREQ_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLSREQ_REG  (IPBGCSFLSHNTWK_BASE + 0x402c)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLSREQ_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLSREQ_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLSREQ_SOFTLSREQ_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLSREQ_SOFTLSREQ_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4030)
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_UNDEFINED_RW (0x0fffffff << 3)
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_UNDEFINED_SHIFT 3
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M2_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M2_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M2_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M2_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M1_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M1_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M1_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M1_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACSYNC_REG  (IPBGCSFLSHNTWK_BASE + 0x4034)
+#define IPBGCSFLSHNTWK_DMAC_DMACSYNC_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACSYNC_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACSYNC_DMACSYNC_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACSYNC_DMACSYNC_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x4100)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x4104)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x4108)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x410c)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4110)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x4120)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC1DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x4124)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x4128)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x412c)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4130)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x4140)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC2DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x4144)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x4148)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x414c)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4150)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x4160)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC3DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x4164)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x4168)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x416c)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4170)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x4180)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC4DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x4184)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x4188)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x418c)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4190)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x41a0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC5DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x41a4)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x41a8)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x41ac)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x41b0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x41c0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC6DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x41c4)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x41c8)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x41cc)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x41d0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x41e0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC7DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x41e4)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x41e8)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x41ec)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x41f0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_REG  (IPBGCSFLSHNTWK_BASE + 0x4500)
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_UNDEFINED_RW (0x03fffffff << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_T_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_T_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_T_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_T_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP1_REG  (IPBGCSFLSHNTWK_BASE + 0x4504)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP1_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP1_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP1_DMACCLR_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP1_DMACCLR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP2_REG  (IPBGCSFLSHNTWK_BASE + 0x4508)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP2_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP2_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP2_DMACCTC_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP2_DMACCTC_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_REG  (IPBGCSFLSHNTWK_BASE + 0x450c)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_UNDEFINED_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_UNDEFINED_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_TC_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_TC_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_TC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_TC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID0_REG  (IPBGCSFLSHNTWK_BASE + 0x4fe0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID0_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID0_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID0_PARTNUMBER0_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID0_PARTNUMBER0_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_REG  (IPBGCSFLSHNTWK_BASE + 0x4fe4)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_R (0x07 << 4)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_SHIFT 4
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_R (0x0f << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL8 0x08
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL9 0x09
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL10 0x0a
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL11 0x0b
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL12 0x0c
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL13 0x0d
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL14 0x0e
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL15 0x0f
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REG  (IPBGCSFLSHNTWK_BASE + 0x4fe8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_R (0x07 << 4)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_SHIFT 4
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_R (0x0f << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL8 0x08
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL9 0x09
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL10 0x0a
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL11 0x0b
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL12 0x0c
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL13 0x0d
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL14 0x0e
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL15 0x0f
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_REG  (IPBGCSFLSHNTWK_BASE + 0x4fec)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_CONFIGURATION_R (0x01 << 7)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_CONFIGURATION_SHIFT 7
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_CONFIGURATION_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_CONFIGURATION_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID0_REG  (IPBGCSFLSHNTWK_BASE + 0x4ff0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID0_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID0_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID0_DMACPCELLID0_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID0_DMACPCELLID0_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID1_REG  (IPBGCSFLSHNTWK_BASE + 0x4ff4)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID1_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID1_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID1_DMACPCELLID1_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID1_DMACPCELLID1_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID2_REG  (IPBGCSFLSHNTWK_BASE + 0x4ff8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID2_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID2_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID2_DMACPCELLID2_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID2_DMACPCELLID2_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID3_REG  (IPBGCSFLSHNTWK_BASE + 0x4ffc)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID3_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID3_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID3_DMACPCELLID3_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID3_DMACPCELLID3_SHIFT 0
+
+#endif /* __IP1902DMAC_H */
+
diff -Naur u-boot-2009.08/drivers/mtd/nor_old/ip2016nor.c u-boot-2009.08_alpha2/drivers/mtd/nor_old/ip2016nor.c
--- u-boot-2009.08/drivers/mtd/nor_old/ip2016nor.c	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor_old/ip2016nor.c	2009-12-18 11:58:05.000000000 -0600
@@ -0,0 +1,217 @@
+/*
+#===========================================================
+#        COPYRIGHT (c) NXP B.V. 2009
+#        All rights are reserved. Reproduction in whole or in part is
+#        prohibited without the written consent of the copyright owner.
+#
+#        Author   : Makarand Pawagi
+#
+#        Filename : ip2016nor.c
+#
+#        Purpose  : Mini NOR Flash driver
+#===========================================================
+*/
+
+
+#include "ip1902dmac.h"
+#include <common.h>
+
+
+
+//#define NOR_MAX_BOOT_IMAGE_LEN_ALLOWED    2048
+#define NOR_DMA_CHAN_CONFIG_VAL                 0xC001
+#define NOR_DMA_CHAN_CTL_VAL_SWIDTH_32B  0x8D4B6200
+#define NOR_DMA_CHAN_CTL_VAL_SWIDTH_8B    0x8D436800
+#define NOR_DMA_CHAN_CTL_VAL_SWIDTH_16B  0x8D476400
+#if 0
+nor_info_t nor_info;
+
+
+
+int mtd_nor_read(struct mtd_info *mtd, loff_t from, size_t len, size_t *retlen, u_char *buf)
+{
+	nx_nor_init (0) ;
+
+	nx_download_data_from_nor_flash((u_int32)from, buf, (u_int32)len, 2, 0) ;
+}
+
+void nor_init(void)
+{
+
+	nor_info.read = mtd_nor_read ;
+	return ;
+}
+#endif
+
+/********************************************************************/
+/*  nx_nor_init                                                       */
+/*                                                                  */
+/*  PARAMETERS:                                                     */
+/*      type        IN; type of Flash device-- NOR part num                   */
+/*                                                                  */
+/*  DESCRIPTION:                                                    */
+/*      Inits the NOR flash device wrt timing   */
+/*                                                                  */
+/*  RETURNS:                                                        */
+/*                NOne                                                  */
+/********************************************************************/
+void nx_nor_init (devicetype_t type)
+{
+   u_int32 value = 0;
+#if 0
+   value = 1;
+   puts("\rNOR: 16b DEVICE detected\r\n") ;
+#else
+switch(type)
+{
+
+   case NOR_x8_21bit:
+   case NOR_x8_22bit:
+   case NOR_x8_23bit:
+   case NOR_x8_24bit:
+   case NOR_x8_25bit:
+   case NOR_x8_26bit:
+   case NOR_x8_27bit:
+			value = 0;
+			puts("NOR: 8b DEVICE detected\r\n") ;
+			break;
+
+   case NOR_x16_21bit:
+   case NOR_x16_22bit:
+   case NOR_x16_23bit:
+   case NOR_x16_24bit:
+   case NOR_x16_25bit:
+   case NOR_x16_26bit:
+   case NOR_x16_27bit:
+			 value = 1;
+			 puts("\rNOR: 16b DEVICE detected\r\n") ;
+			 break;
+   case NOR_x16_ADM:
+			 // Need to program sync for ADM devices
+			 // 2.	Program the device_width field in DEV0_MAIN_CFG register to 2'b10 instead of 2'b01. 	 
+			  value = 2;
+			  puts("\rNOR: 16b ADM DEVICE detected\r\n") ;
+			break; 
+   default:
+	  puts("\rERROR:NO NOR device detected\r\n") ;
+	  break;
+}
+
+#endif
+   writel((value), IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_REG);
+
+   puts("NOR: Initialization complete\r\n") ;
+   return;
+}
+/*
+extern int nx_dmac_trans_comp(void) ;
+extern void nx_dmac_trans_start(u_int32 dest, u_int32 src1, bool read_page, flashtype_t eFlashtype) ;
+*/
+
+/********************************************************************/
+/*  nx_download_data_from_nor_flash                                                       */
+/*                                                                  */
+/*  PARAMETERS:                                                     */
+/*      type                IN; flash device as shown by config straps                      */
+/*      eFlashtype        IN; type of Flash device-- NAND, NOR or SFC                   */
+/*      buffer               IN; ptr to start of MRAM                                                */
+/*      offset               IN; byte address into flash where image is located              */
+/*      length               IN; length of boot image                                                */
+/*                                                                  */
+/*  DESCRIPTION:                                                    */
+/*      Sets up the DMA and copies data from Flash to MRAM (pointed by buffer)   */
+/*                                                                  */
+/*  RETURNS:                                                        */
+/*                  RETCODE_OK                                                      */
+/*                  RETCODE_BAD_PARAM                                     */
+/*                  RETCODE_FAILED                                             */
+/********************************************************************/
+retcode_t nx_download_data_from_nor_flash(
+            u_int32        offset, 
+            u_int8         *buffer,
+            u_int32        length, 
+            devicetype_t   type,
+            flashtype_t eFlashtype)
+{
+   u_int32 dma_swidth = 32;
+   u_int32 i, src, dest ;
+   u_int32 dma_chan_control=0;
+   u_int32 dma_chan_config=0;
+   retcode_t   ret = RETCODE_OK;
+
+   /* length must be a multiple of 2K */
+   if ((length & (NOR_FLASH_BULK_XFER_SIZE -1)) != 0)    
+   {
+      /* throw error trace */
+      return RETCODE_BAD_PARAMETER;
+   }
+
+    /* Tell the world that NOR input params are not crazy - throw trace */
+   puts("\rINFO: Entered NOR DOWNLOAD API, Params OK .....\r\n") ;
+
+
+   switch(type)
+   {
+
+      case NOR_x8_21bit:
+      case NOR_x8_22bit:
+      case NOR_x8_23bit:
+      case NOR_x8_24bit:
+      case NOR_x8_25bit:
+      case NOR_x8_26bit:
+      case NOR_x8_27bit:
+                dma_swidth = 8;
+              break;
+
+      case NOR_x16_21bit:
+      case NOR_x16_22bit:
+      case NOR_x16_23bit:
+      case NOR_x16_24bit:
+      case NOR_x16_25bit:
+      case NOR_x16_26bit:
+      case NOR_x16_27bit:
+      case NOR_x16_ADM:
+                dma_swidth = 16;
+      break;  
+      default:
+                dma_swidth = 16;	  	
+         puts("\rERROR:NO NOR device detected\r\n") ;
+         break;
+   }
+  // dma_swidth = 16;
+
+   src = offset  ;  /* Src is the address in the flash device */
+   dest = (u_int32)buffer ;  
+   dma_chan_config = NOR_DMA_CHAN_CONFIG_VAL ; //0xC001;
+   dma_chan_control = NOR_DMA_CHAN_CTL_VAL_SWIDTH_32B ; //0x8D4B6200;
+
+              
+   for ( i = 0 ; i < length ;  i += NOR_FLASH_BULK_XFER_SIZE) 
+   {
+       /* start the DMAC */
+#if 1	   
+        nx_dmac_trans_start( dest,\
+                             (NX_GCS_NOR_AHB_BUF+src),\
+                              dma_chan_control,\
+                              dma_chan_config);
+       /*  myprint("NOR: DMA started\n\r") ;*/
+       /* complete the DMA transfer */
+       ret = nx_dmac_trans_comp();
+#endif	   
+       //  myprint("NOR: DMA completed\n") ;
+       if (ret == RETCODE_FAILED)
+       {
+           break;
+           puts("NOR: ERROR! DMA error \n\r") ;
+       }
+
+       dest += NOR_FLASH_BULK_XFER_SIZE ;
+       src += NOR_FLASH_BULK_XFER_SIZE ;
+    }
+
+    /* Tell the world that NOR xfers are complete  --- throw infor trace */
+    puts("INFO: Exiting NOR DOWNLOAD API, DMA complete .....\r\n") ;
+
+
+   return (ret);
+}
diff -Naur u-boot-2009.08/drivers/mtd/nor_old/ip2016nor.h u-boot-2009.08_alpha2/drivers/mtd/nor_old/ip2016nor.h
--- u-boot-2009.08/drivers/mtd/nor_old/ip2016nor.h	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor_old/ip2016nor.h	2009-12-18 11:58:05.000000000 -0600
@@ -0,0 +1,1037 @@
+/*
+#===========================================================
+#        COPYRIGHT (c) NXP B.V. 2009
+#        All rights are reserved. Reproduction in whole or in part is
+#        prohibited without the written consent of the copyright owner.
+#
+#        Author   : Makarand Pawagi
+#
+#        Filename : ip2016nor.h
+#
+#        Purpose  : GCS NOR Drivar Related definitions
+#===========================================================
+*/
+#ifndef __IP2016NOR_H
+#define __IP2016NOR_H
+
+/****************
+* Include Files *
+*****************/
+#include <nor.h>
+
+
+typedef unsigned long HW_DWORD;
+typedef volatile HW_DWORD *LPREG;
+typedef unsigned int bool; 
+
+#define writel(v,p)  ((*(LPREG)(p)) = (v))
+#define readl(p)     (*(LPREG)(p))
+
+
+#define INP32(pReg)             (*(volatile u_int32 *)(pReg))
+#define OUT32(pReg, value)      (*(volatile u_int32 *)(pReg) = (u_int32)(value))
+
+
+#define IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_REG  (IPBGCSFLSHNTWK_BASE + 0x4000)
+
+
+#define MMIO_BASE                (0xE0600000)
+#define GCS_OFFSET               (0x30000)
+#define GCS_BASE_X				(MMIO_BASE + GCS_OFFSET) 
+#define IPBGCSFLSHNTWK_OFFSET    (GCS_OFFSET + 0x0000)
+#define IPBGCSFLSHNTWK_BASE      (MMIO_BASE + IPBGCSFLSHNTWK_OFFSET)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_REG  (IPBGCSFLSHNTWK_BASE + 0x4000)
+
+
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_UNUSED_R (0x01fffff << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_UNUSED_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_ADV_CFG_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_ADV_CFG_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_ADV_CFG_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_ADV_CFG_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_EN_POL_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_EN_POL_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_EN_POL_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_EN_POL_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_BYTE_EN_OP_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_BYTE_EN_OP_SHIFT 6
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_BYTE_EN_OP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_BYTE_EN_OP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_OP_MODE_RW (0x03 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_OP_MODE_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_OP_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_OP_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_OP_MODE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_OP_MODE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x4)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_UNUSED_R (0x01ff << 22)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_UNUSED_SHIFT 22
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_BYTE_EN_RW (0x01 << 21)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_BYTE_EN_SHIFT 21
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_BYTE_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_BYTE_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_RW (0x07 << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_RW (0x07 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_SETUP_RW (0x03 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_SETUP_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_HOLD_RW (0x03 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_HOLD_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_ACCESS_RW (0x07f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_ACCESS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_UNUSED_R (0x03ff << 21)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_UNUSED_SHIFT 21
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_RW (0x07 << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_RW (0x07 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_SETUP_RW (0x03 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_SETUP_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_HOLD_RW (0x03 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_HOLD_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_ACCESS_RW (0x07f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_ACCESS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0xc)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_UNUSED_R (0x03fff << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_UNUSED_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_BEB_HOLD_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_BEB_HOLD_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_BEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_BEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_WEB_HOLD_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_WEB_HOLD_SHIFT 15
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_WEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_WEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_OEB_HOLD_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_OEB_HOLD_SHIFT 14
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_OEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_OEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_CSB_HOLD_RW (0x01 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_CSB_HOLD_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_CSB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_CSB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_ADVB_HOLD_RW (0x01 << 12)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_ADVB_HOLD_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_ADVB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_ADVB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_READ_CAPTURE_RW (0x01 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_READ_CAPTURE_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_READ_CAPTURE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_READ_CAPTURE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_WAIT_EN_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_WAIT_EN_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_WAIT_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_WAIT_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_ACCESS_RW (0x03 << 5)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_ACCESS_SHIFT 5
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_ACCESS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_ACCESS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_ACCESS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_ACCESS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_CLK_DIV_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_CLK_DIV_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_CLK_DIV_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_CLK_DIV_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x20)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_UNUSED_R (0x01fffff << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_UNUSED_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_ADV_CFG_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_ADV_CFG_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_ADV_CFG_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_ADV_CFG_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_EN_POL_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_EN_POL_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_EN_POL_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_EN_POL_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_BYTE_EN_OP_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_BYTE_EN_OP_SHIFT 6
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_BYTE_EN_OP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_BYTE_EN_OP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_OP_MODE_RW (0x03 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_OP_MODE_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_OP_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_OP_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_OP_MODE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_OP_MODE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x24)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_UNUSED_R (0x01ff << 22)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_UNUSED_SHIFT 22
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_BYTE_EN_RW (0x01 << 21)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_BYTE_EN_SHIFT 21
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_BYTE_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_BYTE_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_RW (0x07 << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_RW (0x07 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_SETUP_RW (0x03 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_SETUP_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_HOLD_RW (0x03 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_HOLD_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_ACCESS_RW (0x07f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_ACCESS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x28)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_UNUSED_R (0x03ff << 21)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_UNUSED_SHIFT 21
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_RW (0x07 << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_RW (0x07 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_SETUP_RW (0x03 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_SETUP_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_HOLD_RW (0x03 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_HOLD_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_ACCESS_RW (0x07f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_ACCESS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x2c)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_UNUSED_R (0x03fff << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_UNUSED_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_BEB_HOLD_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_BEB_HOLD_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_BEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_BEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_WEB_HOLD_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_WEB_HOLD_SHIFT 15
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_WEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_WEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_OEB_HOLD_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_OEB_HOLD_SHIFT 14
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_OEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_OEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_CSB_HOLD_RW (0x01 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_CSB_HOLD_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_CSB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_CSB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_ADVB_HOLD_RW (0x01 << 12)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_ADVB_HOLD_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_ADVB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_ADVB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_READ_CAPTURE_RW (0x01 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_READ_CAPTURE_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_READ_CAPTURE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_READ_CAPTURE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_WAIT_EN_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_WAIT_EN_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_WAIT_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_WAIT_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_ACCESS_RW (0x03 << 5)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_ACCESS_SHIFT 5
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_ACCESS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_ACCESS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_ACCESS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_ACCESS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_CLK_DIV_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_CLK_DIV_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_CLK_DIV_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_CLK_DIV_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x40)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_UNUSED_R (0x01fffff << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_UNUSED_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_ADV_CFG_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_ADV_CFG_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_ADV_CFG_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_ADV_CFG_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_EN_POL_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_EN_POL_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_EN_POL_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_EN_POL_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_BYTE_EN_OP_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_BYTE_EN_OP_SHIFT 6
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_BYTE_EN_OP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_BYTE_EN_OP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_OP_MODE_RW (0x03 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_OP_MODE_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_OP_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_OP_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_OP_MODE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_OP_MODE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x44)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_UNUSED_R (0x01ff << 22)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_UNUSED_SHIFT 22
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_BYTE_EN_RW (0x01 << 21)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_BYTE_EN_SHIFT 21
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_BYTE_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_BYTE_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_RW (0x07 << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_RW (0x07 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_SETUP_RW (0x03 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_SETUP_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_HOLD_RW (0x03 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_HOLD_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_ACCESS_RW (0x07f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_ACCESS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x48)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_UNUSED_R (0x03ff << 21)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_UNUSED_SHIFT 21
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_RW (0x07 << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_RW (0x07 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_SETUP_RW (0x03 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_SETUP_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_HOLD_RW (0x03 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_HOLD_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_ACCESS_RW (0x07f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_ACCESS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x4c)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_UNUSED_R (0x03fff << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_UNUSED_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_BEB_HOLD_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_BEB_HOLD_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_BEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_BEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_WEB_HOLD_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_WEB_HOLD_SHIFT 15
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_WEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_WEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_OEB_HOLD_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_OEB_HOLD_SHIFT 14
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_OEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_OEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_CSB_HOLD_RW (0x01 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_CSB_HOLD_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_CSB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_CSB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_ADVB_HOLD_RW (0x01 << 12)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_ADVB_HOLD_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_ADVB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_ADVB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_READ_CAPTURE_RW (0x01 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_READ_CAPTURE_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_READ_CAPTURE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_READ_CAPTURE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_WAIT_EN_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_WAIT_EN_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_WAIT_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_WAIT_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_ACCESS_RW (0x03 << 5)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_ACCESS_SHIFT 5
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_ACCESS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_ACCESS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_ACCESS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_ACCESS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_CLK_DIV_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_CLK_DIV_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_CLK_DIV_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_CLK_DIV_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x60)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_UNUSED_R (0x01fffff << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_UNUSED_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_ADV_CFG_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_ADV_CFG_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_ADV_CFG_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_ADV_CFG_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_EN_POL_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_EN_POL_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_EN_POL_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_EN_POL_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_BYTE_EN_OP_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_BYTE_EN_OP_SHIFT 6
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_BYTE_EN_OP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_BYTE_EN_OP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_OP_MODE_RW (0x03 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_OP_MODE_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_OP_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_OP_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_OP_MODE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_OP_MODE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x64)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_UNUSED_R (0x01ff << 22)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_UNUSED_SHIFT 22
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_BYTE_EN_RW (0x01 << 21)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_BYTE_EN_SHIFT 21
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_BYTE_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_BYTE_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_RW (0x07 << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_RW (0x07 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_SETUP_RW (0x03 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_SETUP_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_HOLD_RW (0x03 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_HOLD_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_ACCESS_RW (0x07f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_ACCESS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x68)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_UNUSED_R (0x03ff << 21)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_UNUSED_SHIFT 21
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_RW (0x07 << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_RW (0x07 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_SETUP_RW (0x03 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_SETUP_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_HOLD_RW (0x03 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_HOLD_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_ACCESS_RW (0x07f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_ACCESS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x6c)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_UNUSED_R (0x03fff << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_UNUSED_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_BEB_HOLD_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_BEB_HOLD_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_BEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_BEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_WEB_HOLD_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_WEB_HOLD_SHIFT 15
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_WEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_WEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_OEB_HOLD_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_OEB_HOLD_SHIFT 14
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_OEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_OEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_CSB_HOLD_RW (0x01 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_CSB_HOLD_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_CSB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_CSB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_ADVB_HOLD_RW (0x01 << 12)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_ADVB_HOLD_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_ADVB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_ADVB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_READ_CAPTURE_RW (0x01 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_READ_CAPTURE_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_READ_CAPTURE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_READ_CAPTURE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_WAIT_EN_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_WAIT_EN_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_WAIT_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_WAIT_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_ACCESS_RW (0x03 << 5)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_ACCESS_SHIFT 5
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_ACCESS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_ACCESS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_ACCESS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_ACCESS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_CLK_DIV_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_CLK_DIV_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_CLK_DIV_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_CLK_DIV_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_REG  (IPBGCSFLSHNTWK_BASE + 0x100)
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_UNUSED_R (0x07ffffff << 4)
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_UNUSED_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_STOP_DURING_ASYNC_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_STOP_DURING_ASYNC_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_STOP_DURING_ASYNC_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_STOP_DURING_ASYNC_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_EN_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_EN_SHIFT 2
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_DIV_RW (0x03 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_DIV_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_DIV_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_DIV_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_DIV_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_DIV_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_REG	(IPBGCSFLSHNTWK_BASE + 0x200)
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_UNUSED_R (0x01fffff << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_UNUSED_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_BACKOFF_TIMEOUT_RW (0x07f << 2)
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_BACKOFF_TIMEOUT_SHIFT 2
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_BACKOFF_MODE_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_BACKOFF_MODE_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_BACKOFF_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_BACKOFF_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_DEFAULT_REQ_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_DEFAULT_REQ_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_DEFAULT_REQ_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_DEFAULT_REQ_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x300)
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_UNUSED_R (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_UNUSED_SHIFT 2
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_WR_ERROR_ENA_R (0x01 << 1)
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_WR_ERROR_ENA_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_WR_ERROR_ENA_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_WR_ERROR_ENA_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_RD_ERROR_ENA_R (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_RD_ERROR_ENA_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_RD_ERROR_ENA_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_RD_ERROR_ENA_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_LATENCY_CFG_REG	(IPBGCSFLSHNTWK_BASE + 0x304)
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_LATENCY_CFG_UNUSED_R (0x03fffffff << 1)
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_LATENCY_CFG_UNUSED_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_LATENCY_CFG_NR_OF_WAIT_STATE_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_LATENCY_CFG_NR_OF_WAIT_STATE_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_LATENCY_CFG_NR_OF_WAIT_STATE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_LATENCY_CFG_NR_OF_WAIT_STATE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_REG	(IPBGCSFLSHNTWK_BASE + 0xfd4)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_APB_LATENCY_CFG_R (0x01 << 31)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_APB_LATENCY_CFG_SHIFT 31
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_APB_LATENCY_CFG_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_APB_LATENCY_CFG_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_APB_ERROR_CFG_R (0x01 << 30)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_APB_ERROR_CFG_SHIFT 30
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_APB_ERROR_CFG_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_APB_ERROR_CFG_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_EBI_PIN_SHARING_R (0x01 << 29)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_EBI_PIN_SHARING_SHIFT 29
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_EBI_PIN_SHARING_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_EBI_PIN_SHARING_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_RST_SYNC_R (0x01 << 28)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_RST_SYNC_SHIFT 28
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_RST_SYNC_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_RST_SYNC_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_TARGET_SET_R (0x01 << 27)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_TARGET_SET_SHIFT 27
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_TARGET_SET_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_TARGET_SET_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_UNUSED_R (0x07fffff << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_UNUSED_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_R (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_REG  (IPBGCSFLSHNTWK_BASE + 0xfd8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_R (0x07 << 28)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_SHIFT 28
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_R (0x07 << 24)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_SHIFT 24
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_R (0x07 << 20)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_SHIFT 20
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_R (0x07 << 16)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_R (0x07 << 12)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_R (0x07 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_R (0x07 << 4)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_R (0x0f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL8 0x08
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL9 0x09
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL10 0x0a
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL11 0x0b
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL12 0x0c
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL13 0x0d
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL14 0x0e
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL15 0x0f
+#define IPBGCSFLSHNTWK_IP_2016_APB_SW_RESET_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0xff0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_SW_RESET_CFG_UNUSED_R (0x03fffffff << 1)
+#define IPBGCSFLSHNTWK_IP_2016_APB_SW_RESET_CFG_UNUSED_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2016_APB_SW_RESET_CFG_SW_RESET_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_SW_RESET_CFG_SW_RESET_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_SW_RESET_CFG_SW_RESET_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_SW_RESET_CFG_SW_RESET_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0xff4)
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_UNUSED_R (0x03fff << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_UNUSED_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_TIME_OUT_RW (0x07fff << 1)
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_TIME_OUT_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_POWER_DOWN_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_POWER_DOWN_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_POWER_DOWN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_POWER_DOWN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_REG  (IPBGCSFLSHNTWK_BASE + 0xffc)
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MODULE_ID_R (0x07fff << 16)
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MODULE_ID_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_R (0x07 << 12)
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_R (0x07 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_APERTURE_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_APERTURE_SHIFT 0
+
+
+
+
+typedef enum _retcode_t_
+{
+   RETCODE_OK = 0,
+   RETCODE_BAD_PARAMETER,
+   RETCODE_MISMATCH,                /* Security violation. */
+   RETCODE_INVALID_FUSE_SETTING,    /* Security violation. */
+   RETCODE_INVALID_FLASH_HEADER,    /* Security violation. */
+   RETCODE_CHAN_BUSY,
+   RETCODE_INVALID_SP,              /* Security violation during boot only. */
+   RETCODE_CRYPT_ERR,               /* Security Violation during boot only. */
+   RETCODE_INVALID_SP_COMMAND,      /* Security Violation during boot only. */
+   RETCODE_RSA_ERROR,               /* Security Violation. */
+   RETCODE_KEY2_MISSING,            /* Security Violation. */
+   RETCODE_NO_VALID_COPY,  
+   RETCODE_INVALID_CMD_CODE,
+   RETCODE_INVALID_IRQ_SOURCE,
+   RETCODE_HDCP_KEY_LOAD_FAILED,
+   RETCODE_FUSE_PROGRAM_FAILED,
+   RETCODE_OVERFLOW,
+   RETCODE_UNDERFLOW,
+   RETCODE_TOO_MANY_PAUSES,
+   RETCODE_FEATURE_DISABLED,
+   RETCODE_NOT_DTCP_REGION,
+   RETCODE_INVALID_SRM,
+   RETCODE_OTP_CTRL_ERR,
+   RETCODE_MC_WAITING,
+   RETCODE_FAILED,
+   RETCODE_BOOTDEV_UART,
+   RETCODE_BOOTDEV_FLASH,
+   RETCODE_BOOTDEV_INVALID,
+   RETCODE_FLASH_DEVICE_NOT_SUPPORTED,
+   RETCODE_FLASH_CTRL_ERROR,
+   RETCODE_FLASH_BAD_BLOCK,
+   RETCODE_FLASH_UNCORRECTABLE_ERROR,
+   RETCODE_UARTBOOT_ERROR,
+   RETCODE_YMODEM_HDR_ERROR,
+   RETCODE_YMODEM_PKT_ERROR,
+   RETCODE_YMODEM_DONE_ERROR,
+   RETCODE_NOT_SUPPORTED,
+   RETCODE_INVALID_BOOT_DEV,
+   /* 
+    * Echostar 07/25/2005 - Addition of a new error used in bkgnd.c
+    */
+   RETCODE_FATAL_PROGRAMMING_ERROR
+} retcode_t;
+
+typedef enum _devicetype_t
+{
+   NAND_x16_small_4cycle=0,
+   NAND_x16_small_5cycle,
+   NAND_x16_large_4cycle,
+   NAND_x16_large_5cycle,
+   NAND_x8_small_4cycle,
+   NAND_x8_small_5cycle,
+   NAND_x8_large_4cycle,
+   NAND_x8_large_5cycle,
+   PCI_DEV_BOOT,
+   NAND_x16_small_3cycle,
+   ARM_IN_RESET,
+   NAND_x8_small_3cycle,
+   SPI_16bit,
+   SPI_24bit,
+   SPI_32bit,
+   ARM_IN_RESET1,
+   NOR_x8_21bit, /* 16 */
+   NOR_x8_22bit,
+   NOR_x8_23bit,
+   NOR_x8_24bit,
+   NOR_x8_25bit,
+   NOR_x8_26bit,
+   NOR_x8_27bit,
+   ARM_IN_RESET2,
+   NOR_x16_21bit,
+   NOR_x16_22bit,
+   NOR_x16_23bit,
+   NOR_x16_24bit,
+   NOR_x16_25bit,
+   NOR_x16_26bit,
+   NOR_x16_27bit,
+   NOR_x16_ADM,
+   NAND_x8_large4K_4cycle,
+   NAND_x8_large4K_5cycle,
+   NAND_x16_large4K_4cycle,
+   NAND_x16_large4K_5cycle,
+   Invalid_dev_type
+  
+} devicetype_t;
+
+/* Define the class of Flash device used for booting: 
+    IP2017-NAND, IP2016-NOR SFC-SPI Flash
+*/
+typedef enum
+{
+  invalid_flash_IP,
+  ip2017,
+  ip2016,
+  sfc
+}flashtype_t;
+
+
+typedef unsigned long u_int32;
+typedef unsigned short u_int16;
+typedef unsigned char u_int8;
+
+
+
+/*************************
+* NOR Register specific  *
+* local defines          *
+**************************/
+#ifdef TEST_VPE
+#define NX_NOR_REG_BASE      				(0xE0600000 + 0x30000)
+#else
+#define NX_GCS_DMAC_BASE            IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_REG
+#endif
+
+#define NX_NOR_BUF_BASE   					(0x00000000)
+#define NOR_FLASH_BULK_XFER_SIZE 		(0x800)  // 2K bytes
+
+
+#define NX_NOR_BUF_BASE   					(0x00000000)
+#define NX_GCS_NOR_AHB_BUF          (NX_NOR_BUF_BASE)
+
+
+/**********************
+* Function Prototypes *
+***********************/
+void nx_nor_init (devicetype_t type) ;
+retcode_t nx_download_data_from_nor_flash(
+            u_int32        offset,  /* NOTE - should be on page boundary */
+            u_int8         *buffer,
+            u_int32        length,  /* NOTE - should be a multiple of pagesize */
+            devicetype_t   type,
+            flashtype_t eFlashtype) ;
+
+#endif /* __IP2016NOR_H */
+
diff -Naur u-boot-2009.08/drivers/mtd/nor_old/ip2070gcs.c u-boot-2009.08_alpha2/drivers/mtd/nor_old/ip2070gcs.c
--- u-boot-2009.08/drivers/mtd/nor_old/ip2070gcs.c	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor_old/ip2070gcs.c	2009-12-18 11:58:05.000000000 -0600
@@ -0,0 +1,136 @@
+/*
+#=======================================================================
+#        COPYRIGHT (c) NXP B.V. 2009
+#        All rights are reserved. Reproduction in whole or in part is
+#        prohibited without the written consent of the copyright owner.
+#
+#        Author   : Makarand Pawagi
+# 
+#        Filename : ip2070gcs.c
+#
+#        Purpose  : GCS setup
+#=======================================================================
+*/
+/*! 
+ *  @A9 GCS Flash Network
+ *  @ip2070gcs.c*
+ *  <pre>
+ *  $Author: murthyk $
+ *  $Revision: 131699 $
+ *  $Date: 2009-11-24 09:29:04 +0530 (Tue, 24 Nov 2009) $
+ *
+ *  Revision history
+ *  $Log: $
+ *  
+ *
+ *  $KeysEnd$
+ *  </pre>
+ *
+ */ 
+
+
+#include "ip2070gcs.h"
+
+
+/********************************************************************/
+/*  download_from_flash                                                       */
+/*                                                                  */
+/*  PARAMETERS:                                                     */
+/*      eBootDev          IN; flash device as shown by config straps                      */
+/*      eFlashtype        IN; type of Flash device-- NAND, NOR or SFC                   */
+/*                                                                  */
+/*  DESCRIPTION:                                                    */
+/*      inits the GCS config registers, as per the Flash device selected    */
+/*                                                                  */
+/*  RETURNS:                                                        */
+/*                  None                                                      */
+/********************************************************************/
+retcode_t nx_gcs_init (devicetype_t eBootDev, flashtype_t eFlashtype)
+{
+
+   /*Before flash specific init, read PCI mode from config straps and program it in GCS mode reg */
+
+      if (  (INP32(RGU_CNFG_TRAPS_REG))&RGU_CNFG_TRAPS_IO_MODE)
+      {
+         writel(GCS_ENABLE_ISA_MODE_MSK, IPBGCSFLSHNTWK_GCS_MODE_REG );  // ISA mode
+         puts("GCS in ISA MODE\r\n") ;
+      }
+      else 
+      {   // PCI 
+          
+          writel(GCS_ENABLE_PCI_MODE_MSK, IPBGCSFLSHNTWK_GCS_MODE_REG);
+          puts("GCS in PCI MODE\r\n") ;
+          // PCI HOST
+          if ((INP32(RGU_CNFG_TRAPS_REG)) & RGU_CNFG_TRAPS_PCI_HOST)
+          {
+              writel(GCS_ENABLE_PCI_HOST_MODE_MSK, IPBGCSFLSHNTWK_PCI_CONFIG_REG);  
+              writel(PCI_SETUP_VAL_HOST, PCI_REG_SETUP);  
+              puts("GCS in PCI HOST MODE\r\n") ;
+          }
+          else  // PCI  DEVICE 
+          {
+             
+             /* By default PCI config register of GCS is in device mode, so need to to program it */
+             writel(PCI_SETUP_VAL_DEVICE, PCI_REG_SETUP);  
+             puts("GCS in PCI DEVICE MODE\r\n") ;
+           }
+
+           writel(PCI_SYSTEM_ID, PCI_REG_SUBSYSTEM_ID);  //  Dev and VENDOR ID  --value provided by Mark/Ranga
+           writel(PCI_CMD_VAL, PCI_REG_CFG_CMD_STAT);
+       }
+
+      switch ( eFlashtype )
+      {
+         case ip2017:
+                     // Use default settings of AHB DMA base addr reg, aperture reg and CS route reg
+                     writel(0x0, IPBGCSFLSHNTWK_NAND_CS_ROUTE_REG); 
+                     puts("GCS: NAND DEVICE SETUP COMPLETE\r\n") ;
+                     break;
+
+         case ip2016:
+                     // Use default settings of AHB DMA base addr reg, aperture reg and CS route reg
+                     // enable NOR_ADM
+                       writel(ROM_BASE, IPBGCSFLSHNTWK_AHB_DSCN_NOR_BASE_ADDR_REG);
+                     
+                     if (eBootDev == NOR_x16_ADM)
+                     {
+                        writel(GCS_NOR_16B_ENABLE|GCS_NOR_DCSN_ADDR_REMAP_ENABLE
+                               , IPBGCSFLSHNTWK_FLASH_CONFIG_REG); 
+                        puts("GCS: NOR 16b ADM DEVICE SETUP\r\n") ;
+                     }
+
+                     if (eBootDev >= NOR_x16_21bit && eBootDev <= NOR_x16_27bit)
+                     {
+                        writel(GCS_NOR_16B_ENABLE|GCS_NOR_DCSN_ADDR_REMAP_ENABLE
+                               , IPBGCSFLSHNTWK_FLASH_CONFIG_REG); 
+                        puts("GCS: NOR 16b DEVICE SETUP\r\n") ;
+                     }
+
+#ifdef NOR_CS2
+                     writel(GCS_NOR_CSROUTE_CS2, IPBGCSFLSHNTWK_NOR_CS_ROUTE_REG);
+#endif
+                     puts("GCS: NOR DEVICE SETUP COMPLETE\r\n") ;
+                     
+                     break;
+
+              case sfc:
+                     writel(GCS_SFC_CLK_ENABLE, IPBGCSFLSHNTWK_GCS_CLOCK_MUX_REG);	
+                      // remap SFC  to NOR base and vice versa, cannot go with default, as we need support for 32b SFC device
+                     writel(NX_GCS_NOR_AHB_BUF, IPBGCSFLSHNTWK_AHB_DMA_SFC_BASE_ADDR_REG);
+                     writel(NX_GCS_SFC_AHB_BUF, IPBGCSFLSHNTWK_AHB_DMA_NOR_BASE_ADDR_REG);
+
+#ifdef SPI_CS2
+                     writel(GCS_SPI_CSROUTE_CS2, IPBGCSFLSHNTWK_NOR_CS_ROUTE_REG);
+#endif
+                     puts("GCS: SFC DEVICE SETUP COMPLETE\r\n") ;
+                     break;
+
+              default:
+                   /* Code will not reach here*/
+                     puts("GCS: ERROR: HOW DID THE CODE COME HERE!!!\r\n") ;
+                     break;
+      }
+
+   return RETCODE_OK ;
+}
+
diff -Naur u-boot-2009.08/drivers/mtd/nor_old/ip2070gcs.h u-boot-2009.08_alpha2/drivers/mtd/nor_old/ip2070gcs.h
--- u-boot-2009.08/drivers/mtd/nor_old/ip2070gcs.h	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor_old/ip2070gcs.h	2009-12-18 11:58:05.000000000 -0600
@@ -0,0 +1,5042 @@
+/*
+#===========================================================
+#        COPYRIGHT (c) NXP B.V. 2009
+#        All rights are reserved. Reproduction in whole or in part is
+#        prohibited without the written consent of the copyright owner.
+#
+#        Author   : Makarand Pawagi
+#
+#        Filename : ip2016nor.h
+#
+#        Purpose  : GCS NOR Drivar Related definitions
+#===========================================================
+*/
+#ifndef __IP2070GCS_H
+#define __IP2070GCS_H
+
+#include "ip1902dmac.h"
+
+retcode_t nx_gcs_init (devicetype_t eBootDev, flashtype_t eFlashtype);
+
+/******************/
+/* Register Bases */
+/******************/
+#define ROM_BASE     0xC0000000
+#define PCI_IO_BASE  0xE1000000
+#define PCI_MEM_BASE 0x80000000
+
+
+
+
+#define  BIT_0_MSK   0x00000001
+#define  BIT_1_MSK   0x00000002
+#define  BIT_2_MSK   0x00000004
+#define  BIT_3_MSK   0x00000008
+#define  BIT_4_MSK   0x00000010
+#define  BIT_5_MSK   0x00000020
+#define  BIT_6_MSK   0x00000040
+#define  BIT_7_MSK   0x00000080
+#define  BIT_8_MSK   0x00000100
+#define  BIT_9_MSK   0x00000200
+#define  BIT_10_MSK  0x00000400
+#define  BIT_11_MSK  0x00000800
+#define  BIT_12_MSK  0x00001000
+#define  BIT_13_MSK  0x00002000
+#define  BIT_14_MSK  0x00004000
+#define  BIT_15_MSK  0x00008000
+#define  BIT_16_MSK  0x00010000
+#define  BIT_17_MSK  0x00020000
+#define  BIT_18_MSK  0x00040000
+#define  BIT_19_MSK  0x00080000
+#define  BIT_20_MSK  0x00100000
+#define  BIT_21_MSK  0x00200000
+#define  BIT_22_MSK  0x00400000
+#define  BIT_23_MSK  0x00800000                     
+#define  BIT_24_MSK  0x01000000
+#define  BIT_25_MSK  0x02000000
+#define  BIT_26_MSK  0x04000000
+#define  BIT_27_MSK  0x08000000
+#define  BIT_28_MSK  0x10000000
+#define  BIT_29_MSK  0x20000000
+#define  BIT_30_MSK  0x40000000
+#define  BIT_31_MSK  0x80000000
+
+
+
+#define GCS_ENABLE_ISA_MODE_MSK            (0)
+#define GCS_ENABLE_PCI_MODE_MSK            (1)
+#define GCS_ENABLE_PCI_HOST_MODE_MSK       (0)
+
+#define PCI_SETUP_VAL_HOST                 (0x0CCE0e03)
+#define PCI_SETUP_VAL_DEVICE               (0x0CCE0e02)
+#define PCI_SYSTEM_ID                      (0x84931131)
+#define PCI_CMD_VAL                        (0x4)
+#define GCS_SFC_CLK_ENABLE                 (0x00000001)
+
+#define GCS_NOR_ADM_ENABLE                 (0x20)
+#define GCS_NOR_16B_ENABLE                 (0x2) 
+#define GCS_NOR_DCSN_ADDR_REMAP_ENABLE     (0x3)
+
+
+#define GCS_NOR_CSROUTE_CS2                (0x2)
+#define GCS_SPI_CSROUTE_CS2                (0x1)
+
+#define RGU_CNFG_TRAPS_REG                  0xe06e6030
+#define UART_BASE_ADDR                         0xe06e2000
+
+#define RGU_CNFG_TRAPS_BOOT_UART_SEL         (BIT_6_MSK)
+#define RGU_CNFG_TRAPS_BOOT_UART_SEL         (BIT_6_MSK)
+#define RGU_CNFG_TRAPS_BOOT_UART_PINS  			 (BIT_7_MSK)
+#define RGU_CNFG_TRAPS_BOOT_DEV_SEL          ((BIT_5_MSK) | (BIT_4_MSK) | (BIT_3_MSK) | (BIT_2_MSK) | (BIT_1_MSK))
+#define RGU_CNFG_TRAPS_IO_MODE               (BIT_16_MSK)
+#define RGU_CNFG_TRAPS_PCI_HOST              (BIT_23_MSK)
+
+
+
+#define NX_GCS_REG_BASE      IPBGCSFLSHNTWK_GCS_MODE_REG
+
+#define NX_GCS_MODE                 (0x0)
+#define NX_GCS_MODE_PCI             (1<0)
+
+#define NX_GCS_ROUTE_CS0            (7<0)
+#define NX_GCS_ROUTE_CS1            (7<3)
+#define NX_GCS_ROUTE_CS2            (7<6)
+#define NX_GCS_ROUTE_CS3            (7<9)
+
+/* NOR */
+#define NX_GCS_NOR_DMA_BASE_ADDR    (0x30)
+#define NX_GCS_NOR_DMA_APERTURE     (0x34)
+#define NX_GCS_NOR_CS_ROUTE         (0x50)
+
+#define NX_GCS_NOR_AHB_BUF          (NX_NOR_BUF_BASE)
+#define NX_GCS_NOR_APERTURE         (0x3FFFFFFF)
+
+/* NAND */
+#define NX_GCS_NAND_DMA_BASE_ADDR   (0x38)
+#define NX_GCS_NAND_DMA_APERTURE    (0x3C)
+#define NX_GCS_NAND_CS_ROUTE        (0x54)
+
+#define NX_GCS_NAND_AHB_BUF         (NX_NAND_BUF_BASE)
+#define NX_GCS_NAND_APERTURE        (0x3FFFFFFF)
+
+#define NX_GCS_ISA_CS_ROUTE        (0x5C)
+
+/* SFC */
+#define NX_GCS_SFC_AHB_BUF   NX_GCS_NOR_AHB_BUF // (0x80000000) bcoz SFC is remapped to 0x0000
+
+
+
+
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_UNUSED_R (0x01fffff << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_UNUSED_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_ADV_CFG_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_ADV_CFG_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_ADV_CFG_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_ADV_CFG_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_EN_POL_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_EN_POL_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_EN_POL_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_EN_POL_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_BYTE_EN_OP_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_BYTE_EN_OP_SHIFT 6
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_BYTE_EN_OP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_BYTE_EN_OP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_OP_MODE_RW (0x03 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_OP_MODE_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_OP_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_OP_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_OP_MODE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_OP_MODE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_MAIN_CFG_DEV_WIDTH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x4)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_UNUSED_R (0x01ff << 22)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_UNUSED_SHIFT 22
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_BYTE_EN_RW (0x01 << 21)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_BYTE_EN_SHIFT 21
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_BYTE_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_BYTE_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_RW (0x07 << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RR_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_RW (0x07 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_SETUP_RW (0x03 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_SETUP_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_HOLD_RW (0x03 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_HOLD_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_ACCESS_RW (0x07f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_READ_CFG_RD_ACCESS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_UNUSED_R (0x03ff << 21)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_UNUSED_SHIFT 21
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_RW (0x07 << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WW_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_RW (0x07 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_SETUP_RW (0x03 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_SETUP_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_HOLD_RW (0x03 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_HOLD_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_ACCESS_RW (0x07f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_WRITE_CFG_WR_ACCESS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0xc)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_UNUSED_R (0x03fff << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_UNUSED_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_BEB_HOLD_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_BEB_HOLD_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_BEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_BEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_WEB_HOLD_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_WEB_HOLD_SHIFT 15
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_WEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_WEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_OEB_HOLD_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_OEB_HOLD_SHIFT 14
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_OEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_OEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_CSB_HOLD_RW (0x01 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_CSB_HOLD_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_CSB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_CSB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_ADVB_HOLD_RW (0x01 << 12)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_ADVB_HOLD_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_ADVB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_ADVB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_READ_CAPTURE_RW (0x01 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_READ_CAPTURE_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_READ_CAPTURE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_READ_CAPTURE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_WAIT_EN_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_WAIT_EN_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_WAIT_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_WAIT_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_ACCESS_RW (0x03 << 5)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_ACCESS_SHIFT 5
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_ACCESS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_ACCESS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_ACCESS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_ACCESS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_CLK_DIV_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_CLK_DIV_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_CLK_DIV_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_CLK_DIV_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV0_BURST_CFG_PAGE_SIZE_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x20)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_UNUSED_R (0x01fffff << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_UNUSED_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_ADV_CFG_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_ADV_CFG_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_ADV_CFG_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_ADV_CFG_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_EN_POL_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_EN_POL_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_EN_POL_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_EN_POL_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_BYTE_EN_OP_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_BYTE_EN_OP_SHIFT 6
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_BYTE_EN_OP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_BYTE_EN_OP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_OP_MODE_RW (0x03 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_OP_MODE_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_OP_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_OP_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_OP_MODE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_OP_MODE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_MAIN_CFG_DEV_WIDTH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x24)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_UNUSED_R (0x01ff << 22)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_UNUSED_SHIFT 22
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_BYTE_EN_RW (0x01 << 21)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_BYTE_EN_SHIFT 21
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_BYTE_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_BYTE_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_RW (0x07 << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RR_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_RW (0x07 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_SETUP_RW (0x03 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_SETUP_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_HOLD_RW (0x03 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_HOLD_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_ACCESS_RW (0x07f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_READ_CFG_RD_ACCESS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x28)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_UNUSED_R (0x03ff << 21)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_UNUSED_SHIFT 21
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_RW (0x07 << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WW_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_RW (0x07 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_SETUP_RW (0x03 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_SETUP_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_HOLD_RW (0x03 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_HOLD_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_ACCESS_RW (0x07f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_WRITE_CFG_WR_ACCESS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x2c)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_UNUSED_R (0x03fff << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_UNUSED_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_BEB_HOLD_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_BEB_HOLD_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_BEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_BEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_WEB_HOLD_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_WEB_HOLD_SHIFT 15
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_WEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_WEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_OEB_HOLD_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_OEB_HOLD_SHIFT 14
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_OEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_OEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_CSB_HOLD_RW (0x01 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_CSB_HOLD_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_CSB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_CSB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_ADVB_HOLD_RW (0x01 << 12)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_ADVB_HOLD_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_ADVB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_ADVB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_READ_CAPTURE_RW (0x01 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_READ_CAPTURE_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_READ_CAPTURE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_READ_CAPTURE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_WAIT_EN_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_WAIT_EN_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_WAIT_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_WAIT_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_ACCESS_RW (0x03 << 5)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_ACCESS_SHIFT 5
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_ACCESS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_ACCESS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_ACCESS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_ACCESS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_CLK_DIV_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_CLK_DIV_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_CLK_DIV_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_CLK_DIV_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV1_BURST_CFG_PAGE_SIZE_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x40)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_UNUSED_R (0x01fffff << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_UNUSED_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_ADV_CFG_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_ADV_CFG_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_ADV_CFG_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_ADV_CFG_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_EN_POL_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_EN_POL_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_EN_POL_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_EN_POL_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_BYTE_EN_OP_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_BYTE_EN_OP_SHIFT 6
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_BYTE_EN_OP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_BYTE_EN_OP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_OP_MODE_RW (0x03 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_OP_MODE_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_OP_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_OP_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_OP_MODE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_OP_MODE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_MAIN_CFG_DEV_WIDTH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x44)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_UNUSED_R (0x01ff << 22)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_UNUSED_SHIFT 22
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_BYTE_EN_RW (0x01 << 21)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_BYTE_EN_SHIFT 21
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_BYTE_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_BYTE_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_RW (0x07 << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RR_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_RW (0x07 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_SETUP_RW (0x03 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_SETUP_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_HOLD_RW (0x03 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_HOLD_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_ACCESS_RW (0x07f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_READ_CFG_RD_ACCESS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x48)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_UNUSED_R (0x03ff << 21)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_UNUSED_SHIFT 21
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_RW (0x07 << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WW_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_RW (0x07 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_SETUP_RW (0x03 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_SETUP_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_HOLD_RW (0x03 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_HOLD_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_ACCESS_RW (0x07f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_WRITE_CFG_WR_ACCESS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x4c)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_UNUSED_R (0x03fff << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_UNUSED_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_BEB_HOLD_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_BEB_HOLD_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_BEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_BEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_WEB_HOLD_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_WEB_HOLD_SHIFT 15
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_WEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_WEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_OEB_HOLD_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_OEB_HOLD_SHIFT 14
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_OEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_OEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_CSB_HOLD_RW (0x01 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_CSB_HOLD_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_CSB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_CSB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_ADVB_HOLD_RW (0x01 << 12)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_ADVB_HOLD_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_ADVB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_ADVB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_READ_CAPTURE_RW (0x01 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_READ_CAPTURE_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_READ_CAPTURE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_READ_CAPTURE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_WAIT_EN_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_WAIT_EN_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_WAIT_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_WAIT_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_ACCESS_RW (0x03 << 5)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_ACCESS_SHIFT 5
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_ACCESS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_ACCESS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_ACCESS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_ACCESS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_CLK_DIV_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_CLK_DIV_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_CLK_DIV_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_CLK_DIV_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV2_BURST_CFG_PAGE_SIZE_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x60)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_UNUSED_R (0x01fffff << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_UNUSED_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_ADV_CFG_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_ADV_CFG_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_ADV_CFG_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_ADV_CFG_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_EN_POL_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_EN_POL_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_EN_POL_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_EN_POL_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_BYTE_EN_OP_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_BYTE_EN_OP_SHIFT 6
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_BYTE_EN_OP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_BYTE_EN_OP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_OP_MODE_RW (0x03 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_OP_MODE_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_OP_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_OP_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_OP_MODE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_OP_MODE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_MAIN_CFG_DEV_WIDTH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x64)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_UNUSED_R (0x01ff << 22)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_UNUSED_SHIFT 22
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_BYTE_EN_RW (0x01 << 21)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_BYTE_EN_SHIFT 21
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_BYTE_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_BYTE_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_RW (0x07 << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RR_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_RW (0x07 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_SETUP_RW (0x03 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_SETUP_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_HOLD_RW (0x03 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_HOLD_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_ACCESS_RW (0x07f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_READ_CFG_RD_ACCESS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x68)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_UNUSED_R (0x03ff << 21)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_UNUSED_SHIFT 21
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_RW (0x07 << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WW_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_RW (0x07 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_TRND_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_SETUP_RW (0x03 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_SETUP_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_HOLD_RW (0x03 << 7)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_HOLD_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_ACCESS_RW (0x07f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_WRITE_CFG_WR_ACCESS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x6c)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_UNUSED_R (0x03fff << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_UNUSED_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_BEB_HOLD_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_BEB_HOLD_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_BEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_BEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_WEB_HOLD_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_WEB_HOLD_SHIFT 15
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_WEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_WEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_OEB_HOLD_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_OEB_HOLD_SHIFT 14
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_OEB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_OEB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_CSB_HOLD_RW (0x01 << 13)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_CSB_HOLD_SHIFT 13
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_CSB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_CSB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_ADVB_HOLD_RW (0x01 << 12)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_ADVB_HOLD_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_ADVB_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_ADVB_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_READ_CAPTURE_RW (0x01 << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_READ_CAPTURE_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_READ_CAPTURE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_READ_CAPTURE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_WAIT_EN_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_WAIT_EN_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_WAIT_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_WAIT_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_ACCESS_RW (0x03 << 5)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_ACCESS_SHIFT 5
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_ACCESS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_ACCESS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_ACCESS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_ACCESS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_CLK_DIV_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_CLK_DIV_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_CLK_DIV_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_CLK_DIV_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_DEV3_BURST_CFG_PAGE_SIZE_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_REG  (IPBGCSFLSHNTWK_BASE + 0x100)
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_UNUSED_R (0x07ffffff << 4)
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_UNUSED_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_STOP_DURING_ASYNC_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_STOP_DURING_ASYNC_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_STOP_DURING_ASYNC_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_STOP_DURING_ASYNC_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_EN_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_EN_SHIFT 2
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_DIV_RW (0x03 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_DIV_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_DIV_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_DIV_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_DIV_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_ALWAYS_CFG_CLK_ALWAYS_CLK_DIV_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_REG	(IPBGCSFLSHNTWK_BASE + 0x200)
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_UNUSED_R (0x01fffff << 10)
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_UNUSED_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_BACKOFF_TIMEOUT_RW (0x07f << 2)
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_BACKOFF_TIMEOUT_SHIFT 2
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_BACKOFF_MODE_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_BACKOFF_MODE_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_BACKOFF_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_BACKOFF_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_DEFAULT_REQ_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_DEFAULT_REQ_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_DEFAULT_REQ_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_EBI_CFG_DEFAULT_REQ_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0x300)
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_UNUSED_R (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_UNUSED_SHIFT 2
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_WR_ERROR_ENA_R (0x01 << 1)
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_WR_ERROR_ENA_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_WR_ERROR_ENA_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_WR_ERROR_ENA_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_RD_ERROR_ENA_R (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_RD_ERROR_ENA_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_RD_ERROR_ENA_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_ERROR_CFG_RD_ERROR_ENA_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_LATENCY_CFG_REG	(IPBGCSFLSHNTWK_BASE + 0x304)
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_LATENCY_CFG_UNUSED_R (0x03fffffff << 1)
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_LATENCY_CFG_UNUSED_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_LATENCY_CFG_NR_OF_WAIT_STATE_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_LATENCY_CFG_NR_OF_WAIT_STATE_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_LATENCY_CFG_NR_OF_WAIT_STATE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_APB_LATENCY_CFG_NR_OF_WAIT_STATE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_REG	(IPBGCSFLSHNTWK_BASE + 0xfd4)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_APB_LATENCY_CFG_R (0x01 << 31)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_APB_LATENCY_CFG_SHIFT 31
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_APB_LATENCY_CFG_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_APB_LATENCY_CFG_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_APB_ERROR_CFG_R (0x01 << 30)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_APB_ERROR_CFG_SHIFT 30
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_APB_ERROR_CFG_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_APB_ERROR_CFG_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_EBI_PIN_SHARING_R (0x01 << 29)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_EBI_PIN_SHARING_SHIFT 29
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_EBI_PIN_SHARING_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_EBI_PIN_SHARING_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_RST_SYNC_R (0x01 << 28)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_RST_SYNC_SHIFT 28
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_RST_SYNC_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_RST_SYNC_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_TARGET_SET_R (0x01 << 27)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_TARGET_SET_SHIFT 27
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_TARGET_SET_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_TARGET_SET_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_UNUSED_R (0x07fffff << 3)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_UNUSED_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_R (0x07 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG_NR_OF_DEVICES_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_REG  (IPBGCSFLSHNTWK_BASE + 0xfd8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_R (0x07 << 28)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_SHIFT 28
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_7_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_R (0x07 << 24)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_SHIFT 24
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_6_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_R (0x07 << 20)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_SHIFT 20
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_5_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_R (0x07 << 16)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_4_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_R (0x07 << 12)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_3_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_R (0x07 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_2_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_R (0x07 << 4)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_1_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_R (0x0f << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL8 0x08
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL9 0x09
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL10 0x0a
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL11 0x0b
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL12 0x0c
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL13 0x0d
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL14 0x0e
+#define IPBGCSFLSHNTWK_IP_2016_APB_HDK_CFG2_MEM_SIZE_0_VAL15 0x0f
+#define IPBGCSFLSHNTWK_IP_2016_APB_SW_RESET_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0xff0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_SW_RESET_CFG_UNUSED_R (0x03fffffff << 1)
+#define IPBGCSFLSHNTWK_IP_2016_APB_SW_RESET_CFG_UNUSED_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2016_APB_SW_RESET_CFG_SW_RESET_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_SW_RESET_CFG_SW_RESET_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_SW_RESET_CFG_SW_RESET_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_SW_RESET_CFG_SW_RESET_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_REG  (IPBGCSFLSHNTWK_BASE + 0xff4)
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_UNUSED_R (0x03fff << 17)
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_UNUSED_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_TIME_OUT_RW (0x07fff << 1)
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_TIME_OUT_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_POWER_DOWN_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_POWER_DOWN_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_POWER_DOWN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_POWER_DOWN_CFG_POWER_DOWN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_REG  (IPBGCSFLSHNTWK_BASE + 0xffc)
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MODULE_ID_R (0x07fff << 16)
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MODULE_ID_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_R (0x07 << 12)
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MAJOR_REV_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_R (0x07 << 8)
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_MINOR_REV_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_APERTURE_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_IP_2016_APB_MODULE_ID_APERTURE_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_CMD_ADDR_FIFO_REG  (IPBGCSFLSHNTWK_BASE + 0x1000)
+#define IPBGCSFLSHNTWK_IP_2017_APB_CMD_ADDR_FIFO_UNUSED_R (0x03ff << 21)
+#define IPBGCSFLSHNTWK_IP_2017_APB_CMD_ADDR_FIFO_UNUSED_SHIFT 21
+#define IPBGCSFLSHNTWK_IP_2017_APB_CMD_ADDR_FIFO_CEN_R (0x01 << 19)
+#define IPBGCSFLSHNTWK_IP_2017_APB_CMD_ADDR_FIFO_CEN_SHIFT 19
+#define IPBGCSFLSHNTWK_IP_2017_APB_CMD_ADDR_FIFO_CEN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_CMD_ADDR_FIFO_CEN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_CMD_ADDR_FIFO_LAST_CYCLE_R (0x01 << 18)
+#define IPBGCSFLSHNTWK_IP_2017_APB_CMD_ADDR_FIFO_LAST_CYCLE_SHIFT 18
+#define IPBGCSFLSHNTWK_IP_2017_APB_CMD_ADDR_FIFO_LAST_CYCLE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_CMD_ADDR_FIFO_LAST_CYCLE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_CMD_ADDR_FIFO_CYCLE_TYPE_R (0x01 << 16)
+#define IPBGCSFLSHNTWK_IP_2017_APB_CMD_ADDR_FIFO_CYCLE_TYPE_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2017_APB_CMD_ADDR_FIFO_CYCLE_TYPE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_CMD_ADDR_FIFO_CYCLE_TYPE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_CMD_ADDR_FIFO_IO_R (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_CMD_ADDR_FIFO_IO_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_REG  (IPBGCSFLSHNTWK_BASE + 0x1004)
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_UNUSED_R (0x03ffffff << 5)
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_UNUSED_SHIFT 5
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_OOB_RW (0x01 << 4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_OOB_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_OOB_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_OOB_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_AES_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_AES_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_AES_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_AES_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_ECC_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_ECC_SHIFT 2
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_ECC_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_ECC_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_WRITE_PAGE_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_WRITE_PAGE_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_WRITE_PAGE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_WRITE_PAGE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_READ_PAGE_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_READ_PAGE_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_READ_PAGE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_PAGE_READWRITE_READ_PAGE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_REG	(IPBGCSFLSHNTWK_BASE + 0x1008)
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_UNUSED_R (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_UNUSED_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_RISING_R (0x07 << 8)
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_RISING_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_RISING_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_RISING_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_RISING_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_RISING_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_RISING_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_RISING_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_RISING_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_RISING_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_FALLING_R (0x07 << 4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_FALLING_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_FALLING_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_FALLING_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_FALLING_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_FALLING_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_FALLING_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_FALLING_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_FALLING_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_FALLING_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_R (0x0f << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_VAL8 0x08
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_VAL9 0x09
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_VAL10 0x0a
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_VAL11 0x0b
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_VAL12 0x0c
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_VAL13 0x0d
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_VAL14 0x0e
+#define IPBGCSFLSHNTWK_IP_2017_APB_NAND_STATUS_R_BN_VAL15 0x0f
+#define IPBGCSFLSHNTWK_IP_2017_APB_DMA_CTRL_REG  (IPBGCSFLSHNTWK_BASE + 0x100c)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DMA_CTRL_UNUSED_R (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DMA_CTRL_UNUSED_SHIFT 2
+#define IPBGCSFLSHNTWK_IP_2017_APB_DMA_CTRL_MEM_TO_PERI_DMA_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DMA_CTRL_MEM_TO_PERI_DMA_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2017_APB_DMA_CTRL_MEM_TO_PERI_DMA_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DMA_CTRL_MEM_TO_PERI_DMA_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DMA_CTRL_PERI_TO_MEM_DMA_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DMA_CTRL_PERI_TO_MEM_DMA_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_DMA_CTRL_PERI_TO_MEM_DMA_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DMA_CTRL_PERI_TO_MEM_DMA_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_EBI_CTRL_REG  (IPBGCSFLSHNTWK_BASE + 0x1010)
+#define IPBGCSFLSHNTWK_IP_2017_APB_EBI_CTRL_UNUSED_R (0x01fffff << 10)
+#define IPBGCSFLSHNTWK_IP_2017_APB_EBI_CTRL_UNUSED_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2017_APB_EBI_CTRL_BACKOFF_TIMEOUT_RW (0x07f << 2)
+#define IPBGCSFLSHNTWK_IP_2017_APB_EBI_CTRL_BACKOFF_TIMEOUT_SHIFT 2
+#define IPBGCSFLSHNTWK_IP_2017_APB_EBI_CTRL_BACKOFF_MODE_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_IP_2017_APB_EBI_CTRL_BACKOFF_MODE_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2017_APB_EBI_CTRL_BACKOFF_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_EBI_CTRL_BACKOFF_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_EBI_CTRL_DEFAULT_REQ_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_EBI_CTRL_DEFAULT_REQ_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_EBI_CTRL_DEFAULT_REQ_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_EBI_CTRL_DEFAULT_REQ_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_AHB_LATENCY_REG	(IPBGCSFLSHNTWK_BASE + 0x1014)
+#define IPBGCSFLSHNTWK_IP_2017_APB_AHB_LATENCY_UNUSED_R (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_IP_2017_APB_AHB_LATENCY_UNUSED_SHIFT 2
+#define IPBGCSFLSHNTWK_IP_2017_APB_AHB_LATENCY_CMD_REGISTER_R (0x01 << 1)
+#define IPBGCSFLSHNTWK_IP_2017_APB_AHB_LATENCY_CMD_REGISTER_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2017_APB_AHB_LATENCY_CMD_REGISTER_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_AHB_LATENCY_CMD_REGISTER_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_AHB_LATENCY_RD_DATA_REGISTER_R (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_AHB_LATENCY_RD_DATA_REGISTER_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_AHB_LATENCY_RD_DATA_REGISTER_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_AHB_LATENCY_RD_DATA_REGISTER_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_LATENCY_REG	(IPBGCSFLSHNTWK_BASE + 0x1018)
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_LATENCY_UNUSED_R (0x03fffffff << 1)
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_LATENCY_UNUSED_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_LATENCY_WAIT_STATE_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_LATENCY_WAIT_STATE_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_LATENCY_WAIT_STATE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_LATENCY_WAIT_STATE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_ERROR_REG  (IPBGCSFLSHNTWK_BASE + 0x101c)
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_ERROR_UNUSED_R (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_ERROR_UNUSED_SHIFT 2
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_ERROR_WR_ERROR_ENA_R (0x01 << 1)
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_ERROR_WR_ERROR_ENA_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_ERROR_WR_ERROR_ENA_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_ERROR_WR_ERROR_ENA_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_ERROR_RD_ERROR_ENA_R (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_ERROR_RD_ERROR_ENA_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_ERROR_RD_ERROR_ENA_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_APB_ERROR_RD_ERROR_ENA_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_SINGLE_READ_REG	(IPBGCSFLSHNTWK_BASE + 0x1044)
+#define IPBGCSFLSHNTWK_IP_2017_APB_SINGLE_READ_UNUSED_R (0x07fff << 16)
+#define IPBGCSFLSHNTWK_IP_2017_APB_SINGLE_READ_UNUSED_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2017_APB_SINGLE_READ_READ_DATA_R (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_SINGLE_READ_READ_DATA_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_SINGLE_WRITE_REG  (IPBGCSFLSHNTWK_BASE + 0x1048)
+#define IPBGCSFLSHNTWK_IP_2017_APB_SINGLE_WRITE_UNUSED_R (0x07fff << 16)
+#define IPBGCSFLSHNTWK_IP_2017_APB_SINGLE_WRITE_UNUSED_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2017_APB_SINGLE_WRITE_WRITE_DATA_R (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_SINGLE_WRITE_WRITE_DATA_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_REG  (IPBGCSFLSHNTWK_BASE + 0x104c)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_UNUSED_R (0x0ffffff << 7)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_UNUSED_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_PAGE_SIZE_RW (0x03 << 4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_PAGE_SIZE_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_PAGE_SIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_PAGE_SIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_PAGE_SIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_PAGE_SIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_WRITE_PROT_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_WRITE_PROT_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_WRITE_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_WRITE_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_CEN_DONT_CARE_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_CEN_DONT_CARE_SHIFT 2
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_CEN_DONT_CARE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_CEN_DONT_CARE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_DATA_WIDTH_RW (0x03 << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_DATA_WIDTH_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_DATA_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_DATA_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_DATA_WIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_0_DATA_WIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_REG  (IPBGCSFLSHNTWK_BASE + 0x1050)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_UNUSED_R (0x07 << 28)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_UNUSED_SHIFT 28
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_UNUSED_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_UNUSED_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_UNUSED_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_UNUSED_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_UNUSED_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_UNUSED_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_UNUSED_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_UNUSED_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPS_RW (0x07 << 24)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPS_SHIFT 24
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPS_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPS_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPS_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPS_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPH_RW (0x07 << 20)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPH_SHIFT 20
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCPH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLS_RW (0x07 << 16)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLS_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLS_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLS_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLS_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLS_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLH_RW (0x07 << 12)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLH_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TCLH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALS_RW (0x07 << 8)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALS_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALS_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALS_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALS_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALS_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALH_RW (0x07 << 4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALH_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TALH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_RW (0x0f << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_VAL8 0x08
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_VAL9 0x09
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_VAL10 0x0a
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_VAL11 0x0b
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_VAL12 0x0c
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_VAL13 0x0d
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_VAL14 0x0e
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_0_TRR_VAL15 0x0f
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_REG  (IPBGCSFLSHNTWK_BASE + 0x1054)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_UNUSED_R (0x01f << 26)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_UNUSED_SHIFT 26
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TDRD_RW (0x07 << 22)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TDRD_SHIFT 22
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TDRD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TDRD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TDRD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TDRD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TDRD_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TDRD_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TDRD_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TDRD_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWB_RW (0x01f << 16)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWB_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWP_RW (0x07 << 12)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWP_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWP_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWP_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWP_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWP_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWH_RW (0x07 << 8)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWH_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TWH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRP_RW (0x07 << 4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRP_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRP_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRP_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRP_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRP_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_RW (0x0f << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_VAL8 0x08
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_VAL9 0x09
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_VAL10 0x0a
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_VAL11 0x0b
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_VAL12 0x0c
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_VAL13 0x0d
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_VAL14 0x0e
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_0_TRH_VAL15 0x0f
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_REG  (IPBGCSFLSHNTWK_BASE + 0x1058)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_UNUSED_R (0x0ffffff << 7)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_UNUSED_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_PAGE_SIZE_RW (0x03 << 4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_PAGE_SIZE_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_PAGE_SIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_PAGE_SIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_PAGE_SIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_PAGE_SIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_WRITE_PROT_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_WRITE_PROT_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_WRITE_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_WRITE_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_CEN_DONT_CARE_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_CEN_DONT_CARE_SHIFT 2
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_CEN_DONT_CARE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_CEN_DONT_CARE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_DATA_WIDTH_RW (0x03 << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_DATA_WIDTH_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_DATA_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_DATA_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_DATA_WIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_1_DATA_WIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_REG  (IPBGCSFLSHNTWK_BASE + 0x105c)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_UNUSED_R (0x07 << 28)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_UNUSED_SHIFT 28
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_UNUSED_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_UNUSED_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_UNUSED_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_UNUSED_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_UNUSED_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_UNUSED_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_UNUSED_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_UNUSED_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPS_RW (0x07 << 24)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPS_SHIFT 24
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPS_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPS_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPS_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPS_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPH_RW (0x07 << 20)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPH_SHIFT 20
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCPH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLS_RW (0x07 << 16)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLS_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLS_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLS_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLS_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLS_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLH_RW (0x07 << 12)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLH_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TCLH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALS_RW (0x07 << 8)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALS_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALS_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALS_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALS_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALS_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALH_RW (0x07 << 4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALH_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TALH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_RW (0x0f << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_VAL8 0x08
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_VAL9 0x09
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_VAL10 0x0a
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_VAL11 0x0b
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_VAL12 0x0c
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_VAL13 0x0d
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_VAL14 0x0e
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_1_TRR_VAL15 0x0f
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_REG  (IPBGCSFLSHNTWK_BASE + 0x1060)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_UNUSED_R (0x01f << 26)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_UNUSED_SHIFT 26
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TDRD_RW (0x07 << 22)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TDRD_SHIFT 22
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TDRD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TDRD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TDRD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TDRD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TDRD_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TDRD_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TDRD_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TDRD_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWB_RW (0x01f << 16)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWB_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWP_RW (0x07 << 12)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWP_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWP_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWP_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWP_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWP_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWH_RW (0x07 << 8)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWH_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TWH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRP_RW (0x07 << 4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRP_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRP_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRP_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRP_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRP_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_RW (0x0f << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_VAL8 0x08
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_VAL9 0x09
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_VAL10 0x0a
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_VAL11 0x0b
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_VAL12 0x0c
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_VAL13 0x0d
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_VAL14 0x0e
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_1_TRH_VAL15 0x0f
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_REG  (IPBGCSFLSHNTWK_BASE + 0x1064)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_UNUSED_R (0x0ffffff << 7)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_UNUSED_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_PAGE_SIZE_RW (0x03 << 4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_PAGE_SIZE_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_PAGE_SIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_PAGE_SIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_PAGE_SIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_PAGE_SIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_WRITE_PROT_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_WRITE_PROT_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_WRITE_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_WRITE_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_CEN_DONT_CARE_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_CEN_DONT_CARE_SHIFT 2
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_CEN_DONT_CARE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_CEN_DONT_CARE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_DATA_WIDTH_RW (0x03 << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_DATA_WIDTH_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_DATA_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_DATA_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_DATA_WIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_2_DATA_WIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_REG  (IPBGCSFLSHNTWK_BASE + 0x1068)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_UNUSED_R (0x07 << 28)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_UNUSED_SHIFT 28
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_UNUSED_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_UNUSED_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_UNUSED_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_UNUSED_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_UNUSED_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_UNUSED_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_UNUSED_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_UNUSED_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPS_RW (0x07 << 24)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPS_SHIFT 24
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPS_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPS_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPS_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPS_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPH_RW (0x07 << 20)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPH_SHIFT 20
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCPH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLS_RW (0x07 << 16)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLS_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLS_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLS_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLS_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLS_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLH_RW (0x07 << 12)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLH_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TCLH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALS_RW (0x07 << 8)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALS_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALS_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALS_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALS_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALS_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALH_RW (0x07 << 4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALH_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TALH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_RW (0x0f << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_VAL8 0x08
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_VAL9 0x09
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_VAL10 0x0a
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_VAL11 0x0b
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_VAL12 0x0c
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_VAL13 0x0d
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_VAL14 0x0e
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_2_TRR_VAL15 0x0f
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_REG  (IPBGCSFLSHNTWK_BASE + 0x106c)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_UNUSED_R (0x01f << 26)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_UNUSED_SHIFT 26
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TDRD_RW (0x07 << 22)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TDRD_SHIFT 22
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TDRD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TDRD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TDRD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TDRD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TDRD_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TDRD_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TDRD_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TDRD_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWB_RW (0x01f << 16)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWB_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWP_RW (0x07 << 12)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWP_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWP_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWP_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWP_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWP_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWH_RW (0x07 << 8)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWH_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TWH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRP_RW (0x07 << 4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRP_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRP_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRP_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRP_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRP_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_RW (0x0f << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_VAL8 0x08
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_VAL9 0x09
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_VAL10 0x0a
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_VAL11 0x0b
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_VAL12 0x0c
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_VAL13 0x0d
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_VAL14 0x0e
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_2_TRH_VAL15 0x0f
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_REG  (IPBGCSFLSHNTWK_BASE + 0x1070)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_UNUSED_R (0x0ffffff << 7)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_UNUSED_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_PAGE_SIZE_RW (0x03 << 4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_PAGE_SIZE_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_PAGE_SIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_PAGE_SIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_PAGE_SIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_PAGE_SIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_WRITE_PROT_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_WRITE_PROT_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_WRITE_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_WRITE_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_CEN_DONT_CARE_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_CEN_DONT_CARE_SHIFT 2
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_CEN_DONT_CARE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_CEN_DONT_CARE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_DATA_WIDTH_RW (0x03 << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_DATA_WIDTH_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_DATA_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_DATA_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_DATA_WIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TYPE_3_DATA_WIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_REG  (IPBGCSFLSHNTWK_BASE + 0x1074)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_UNUSED_R (0x07 << 28)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_UNUSED_SHIFT 28
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_UNUSED_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_UNUSED_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_UNUSED_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_UNUSED_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_UNUSED_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_UNUSED_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_UNUSED_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_UNUSED_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPS_RW (0x07 << 24)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPS_SHIFT 24
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPS_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPS_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPS_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPS_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPH_RW (0x07 << 20)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPH_SHIFT 20
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCPH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLS_RW (0x07 << 16)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLS_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLS_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLS_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLS_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLS_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLH_RW (0x07 << 12)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLH_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TCLH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALS_RW (0x07 << 8)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALS_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALS_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALS_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALS_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALS_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALS_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALS_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALS_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALS_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALH_RW (0x07 << 4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALH_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TALH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_RW (0x0f << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_VAL8 0x08
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_VAL9 0x09
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_VAL10 0x0a
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_VAL11 0x0b
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_VAL12 0x0c
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_VAL13 0x0d
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_VAL14 0x0e
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_0_3_TRR_VAL15 0x0f
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_REG  (IPBGCSFLSHNTWK_BASE + 0x1078)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_UNUSED_R (0x01f << 26)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_UNUSED_SHIFT 26
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TDRD_RW (0x07 << 22)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TDRD_SHIFT 22
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TDRD_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TDRD_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TDRD_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TDRD_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TDRD_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TDRD_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TDRD_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TDRD_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWB_RW (0x01f << 16)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWB_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWP_RW (0x07 << 12)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWP_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWP_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWP_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWP_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWP_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWH_RW (0x07 << 8)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWH_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TWH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRP_RW (0x07 << 4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRP_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRP_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRP_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRP_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRP_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRP_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRP_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRP_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRP_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_RW (0x0f << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_VAL8 0x08
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_VAL9 0x09
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_VAL10 0x0a
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_VAL11 0x0b
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_VAL12 0x0c
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_VAL13 0x0d
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_VAL14 0x0e
+#define IPBGCSFLSHNTWK_IP_2017_APB_DEVICE_TIMING_1_3_TRH_VAL15 0x0f
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_REG  (IPBGCSFLSHNTWK_BASE + 0x1fd4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_UNUSED_R (0x0fffff << 11)
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_UNUSED_SHIFT 11
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_APB_LATENCY_CFG_R (0x01 << 10)
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_APB_LATENCY_CFG_SHIFT 10
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_APB_LATENCY_CFG_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_APB_LATENCY_CFG_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_APB_ERROR_CFG_R (0x01 << 9)
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_APB_ERROR_CFG_SHIFT 9
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_APB_ERROR_CFG_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_APB_ERROR_CFG_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_DATA_BUS_TYPE_R (0x01 << 7)
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_DATA_BUS_TYPE_SHIFT 7
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_DATA_BUS_TYPE_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_DATA_BUS_TYPE_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_DATA_BUS_LATENCY_CFG_R (0x01 << 6)
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_DATA_BUS_LATENCY_CFG_SHIFT 6
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_DATA_BUS_LATENCY_CFG_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_DATA_BUS_LATENCY_CFG_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_AES_R (0x01 << 5)
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_AES_SHIFT 5
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_AES_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_AES_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_EBI_PIN_SHARING_R (0x01 << 4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_EBI_PIN_SHARING_SHIFT 4
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_EBI_PIN_SHARING_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_EBI_PIN_SHARING_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_BOOT_FROM_NAND_R (0x01 << 3)
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_BOOT_FROM_NAND_SHIFT 3
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_BOOT_FROM_NAND_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_BOOT_FROM_NAND_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_RST_SYNC_R (0x01 << 2)
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_RST_SYNC_SHIFT 2
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_RST_SYNC_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_RST_SYNC_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_NR_OF_DEVICES_R (0x03 << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_NR_OF_DEVICES_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_NR_OF_DEVICES_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_NR_OF_DEVICES_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_NR_OF_DEVICES_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_CONFIG_NR_OF_DEVICES_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_CLR_ENABLE_REG  (IPBGCSFLSHNTWK_BASE + 0x1fd8)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_CLR_ENABLE_UNUSED_R (0x07f << 24)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_CLR_ENABLE_UNUSED_SHIFT 24
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_CLR_ENABLE_INT_CLR_ENABLE_R (0x0ffffff << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_CLR_ENABLE_INT_CLR_ENABLE_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_SET_ENABLE_REG  (IPBGCSFLSHNTWK_BASE + 0x1fdc)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_SET_ENABLE_UNUSED_R (0x07f << 24)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_SET_ENABLE_UNUSED_SHIFT 24
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_SET_ENABLE_INT_SET_ENABLE_R (0x0ffffff << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_SET_ENABLE_INT_SET_ENABLE_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_STATUS_REG  (IPBGCSFLSHNTWK_BASE + 0x1fe0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_STATUS_UNUSED_R (0x07f << 24)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_STATUS_UNUSED_SHIFT 24
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_STATUS_INT_STATUS_R (0x0ffffff << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_STATUS_INT_STATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_ENABLE_REG  (IPBGCSFLSHNTWK_BASE + 0x1fe4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_ENABLE_UNUSED_R (0x07f << 24)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_ENABLE_UNUSED_SHIFT 24
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_ENABLE_INT_ENABLE_R (0x0ffffff << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_ENABLE_INT_ENABLE_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_CLEAR_STATUSS_REG  (IPBGCSFLSHNTWK_BASE + 0x1fe8)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_CLEAR_STATUSS_UNUSED_R (0x07f << 24)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_CLEAR_STATUSS_UNUSED_SHIFT 24
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_CLEAR_STATUSS_INT_CLR_STATUS_R (0x0ffffff << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_CLEAR_STATUSS_INT_CLR_STATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_SET_STATUS_REG  (IPBGCSFLSHNTWK_BASE + 0x1fec)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_SET_STATUS_UNUSED_R (0x07f << 24)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_SET_STATUS_UNUSED_SHIFT 24
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_SET_STATUS_INT_SET_STATUS_R (0x0ffffff << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_INT_SET_STATUS_INT_SET_STATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_SW_RESET_REG  (IPBGCSFLSHNTWK_BASE + 0x1ff0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_SW_RESET_UNUSED_R (0x03fffffff << 1)
+#define IPBGCSFLSHNTWK_IP_2017_APB_SW_RESET_UNUSED_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2017_APB_SW_RESET_SW_RESET_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_SW_RESET_SW_RESET_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_SW_RESET_SW_RESET_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_SW_RESET_SW_RESET_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_POWER_DOWN_REG  (IPBGCSFLSHNTWK_BASE + 0x1ff4)
+#define IPBGCSFLSHNTWK_IP_2017_APB_POWER_DOWN_UNUSED_R (0x03fff << 17)
+#define IPBGCSFLSHNTWK_IP_2017_APB_POWER_DOWN_UNUSED_SHIFT 17
+#define IPBGCSFLSHNTWK_IP_2017_APB_POWER_DOWN_TIME_OUT_RW (0x07fff << 1)
+#define IPBGCSFLSHNTWK_IP_2017_APB_POWER_DOWN_TIME_OUT_SHIFT 1
+#define IPBGCSFLSHNTWK_IP_2017_APB_POWER_DOWN_POWER_DOWN_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_POWER_DOWN_POWER_DOWN_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_POWER_DOWN_POWER_DOWN_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_POWER_DOWN_POWER_DOWN_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_EXT_MODULE_ID_REG  (IPBGCSFLSHNTWK_BASE + 0x1ff8)
+#define IPBGCSFLSHNTWK_IP_2017_APB_EXT_MODULE_ID_EXT_MODULE_ID_R (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_EXT_MODULE_ID_EXT_MODULE_ID_SHIFT 0
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_REG  (IPBGCSFLSHNTWK_BASE + 0x1ffc)
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MODULE_ID_R (0x07fff << 16)
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MODULE_ID_SHIFT 16
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MAJOR_REV_R (0x07 << 12)
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MAJOR_REV_SHIFT 12
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MAJOR_REV_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MAJOR_REV_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MAJOR_REV_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MAJOR_REV_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MAJOR_REV_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MAJOR_REV_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MAJOR_REV_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MAJOR_REV_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MINOR_REV_R (0x07 << 8)
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MINOR_REV_SHIFT 8
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MINOR_REV_VAL0 0x00
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MINOR_REV_VAL1 0x01
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MINOR_REV_VAL2 0x02
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MINOR_REV_VAL3 0x03
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MINOR_REV_VAL4 0x04
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MINOR_REV_VAL5 0x05
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MINOR_REV_VAL6 0x06
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_MINOR_REV_VAL7 0x07
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_APERTURE_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_IP_2017_APB_MODULE_ID_APERTURE_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_VERSION_ID_REG  (IPBGCSFLSHNTWK_BASE + 0x2000)
+#define IPBGCSFLSHNTWK_SFC_SFC_VERSION_ID_VERSION_R (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_VERSION_ID_VERSION_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_REG	(IPBGCSFLSHNTWK_BASE + 0x2004)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_SPI_RST_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_SPI_RST_SHIFT 31
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_SPI_RST_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_SPI_RST_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_REQ_INT_MASK_RW (0x01 << 30)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_REQ_INT_MASK_SHIFT 30
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_REQ_INT_MASK_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_REQ_INT_MASK_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_REQ_EN_RW (0x01 << 29)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_REQ_EN_SHIFT 29
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_REQ_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_REQ_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_ACC_ERR_CLR_RW (0x01 << 28)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_ACC_ERR_CLR_SHIFT 28
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_ACC_ERR_CLR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_ACC_ERR_CLR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TMR_INT_MASK_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TMR_INT_MASK_SHIFT 27
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TMR_INT_MASK_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TMR_INT_MASK_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TMR_INT_EN_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TMR_INT_EN_SHIFT 26
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TMR_INT_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TMR_INT_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_INT_MASK_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_INT_MASK_SHIFT 25
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_INT_MASK_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_INT_MASK_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_INT_EN_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_INT_EN_SHIFT 24
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_INT_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_INT_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_HOLD_EN_RW (0x01 << 23)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_HOLD_EN_SHIFT 23
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_HOLD_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_HOLD_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_PRE_FETCH_TX_EN_RW (0x01 << 22)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_PRE_FETCH_TX_EN_SHIFT 22
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_PRE_FETCH_TX_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_PRE_FETCH_TX_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_START_BITS_RW (0x01 << 20)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_START_BITS_SHIFT 20
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_START_BITS_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_START_BITS_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_TRANS_EDGE_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_TRANS_EDGE_SHIFT 18
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_TRANS_EDGE_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_TRANS_EDGE_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_EN_RW (0x01 << 17)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_EN_SHIFT 17
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_TX_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_LOOP_BACK_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_LOOP_BACK_SHIFT 16
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_LOOP_BACK_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_LOOP_BACK_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_RW (0x0f << 11)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_SHIFT 11
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_VAL2 0x02
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_VAL3 0x03
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_VAL4 0x04
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_VAL5 0x05
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_VAL6 0x06
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_VAL7 0x07
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_VAL8 0x08
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_VAL9 0x09
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_VAL10 0x0a
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_VAL11 0x0b
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_VAL12 0x0c
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_VAL13 0x0d
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_VAL14 0x0e
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_DMA_THRD_VAL15 0x0f
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_INT_MASK_RW (0x01 << 10)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_INT_MASK_SHIFT 10
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_INT_MASK_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_INT_MASK_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_INT_EN_RW (0x01 << 9)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_INT_EN_SHIFT 9
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_INT_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_INT_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_HOLD_EN_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_HOLD_EN_SHIFT 8
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_HOLD_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_HOLD_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_PRE_FETCH_RX_EN_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_PRE_FETCH_RX_EN_SHIFT 6
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_PRE_FETCH_RX_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_PRE_FETCH_RX_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_DATA_WIDTH_RW (0x01 << 4)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_DATA_WIDTH_SHIFT 4
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_DATA_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_DATA_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_CAP_EDGE_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_CAP_EDGE_SHIFT 2
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_CAP_EDGE_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_CAP_EDGE_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_EN_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_EN_SHIFT 1
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_RX_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_SPI_EN_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_SPI_EN_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_SPI_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CSR_SPI_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_REG  (IPBGCSFLSHNTWK_BASE + 0x2008)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_SCK_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_SCK_SHIFT 31
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_SCK_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_SCK_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_WP_RW (0x01 << 30)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_WP_SHIFT 30
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_WP_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_WP_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_HOLD_RW (0x01 << 29)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_HOLD_SHIFT 29
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_CS_RW (0x01 << 28)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_CS_SHIFT 28
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_CS_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_CS_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_SI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_SI_SHIFT 27
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_SO_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_SO_SHIFT 24
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_SO_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_SO_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_SCK_RW (0x01 << 23)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_SCK_SHIFT 23
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_SCK_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_SCK_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_WP_RW (0x01 << 22)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_WP_SHIFT 22
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_WP_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_WP_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_HOLD_RW (0x01 << 21)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_HOLD_SHIFT 21
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_CS_RW (0x01 << 20)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_CS_SHIFT 20
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_CS_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_CS_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_SI_RW (0x01 << 19)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_SI_SHIFT 19
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_SO_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_SO_SHIFT 18
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_SO_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SFT_EN_SO_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_ADDR_TX_MULTI_RW (0x01 << 12)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_ADDR_TX_MULTI_SHIFT 12
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_ADDR_TX_MULTI_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_ADDR_TX_MULTI_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_TX_MULTI_RW (0x01 << 10)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_TX_MULTI_SHIFT 10
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_TX_MULTI_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_TX_MULTI_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_RX_MULTI_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_RX_MULTI_SHIFT 8
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_RX_MULTI_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_RX_MULTI_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SI_PIN_MUX_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SI_PIN_MUX_SHIFT 6
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SI_PIN_MUX_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SI_PIN_MUX_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SO_PIN_MUX_RW (0x01 << 4)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SO_PIN_MUX_SHIFT 4
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SO_PIN_MUX_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_SO_PIN_MUX_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_WP_PIN_MUX_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_WP_PIN_MUX_SHIFT 2
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_WP_PIN_MUX_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_WP_PIN_MUX_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_HOLD_PIN_MUX_RW (0x03 << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_HOLD_PIN_MUX_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_HOLD_PIN_MUX_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_HOLD_PIN_MUX_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_HOLD_PIN_MUX_VAL2 0x02
+#define IPBGCSFLSHNTWK_SFC_SFC_PIN_CONFIG_HOLD_PIN_MUX_VAL3 0x03
+#define IPBGCSFLSHNTWK_SFC_SFC_SCK_CSR_REG	(IPBGCSFLSHNTWK_BASE + 0x200c)
+#define IPBGCSFLSHNTWK_SFC_SFC_SCK_CSR_CLK_ON_RW (0x01 << 17)
+#define IPBGCSFLSHNTWK_SFC_SFC_SCK_CSR_CLK_ON_SHIFT 17
+#define IPBGCSFLSHNTWK_SFC_SFC_SCK_CSR_CLK_ON_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_SCK_CSR_CLK_ON_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_SCK_CSR_SCK_IDL_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_SFC_SFC_SCK_CSR_SCK_IDL_SHIFT 16
+#define IPBGCSFLSHNTWK_SFC_SFC_SCK_CSR_SCK_IDL_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_SCK_CSR_SCK_IDL_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_SCK_CSR_CLOCK_DIV_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_SCK_CSR_CLOCK_DIV_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_TM_WP_CS_REG  (IPBGCSFLSHNTWK_BASE + 0x2010)
+#define IPBGCSFLSHNTWK_SFC_SFC_TM_WP_CS_THWP_RW (0x07f << 24)
+#define IPBGCSFLSHNTWK_SFC_SFC_TM_WP_CS_THWP_SHIFT 24
+#define IPBGCSFLSHNTWK_SFC_SFC_TM_WP_CS_TSWP_RW (0x07f << 16)
+#define IPBGCSFLSHNTWK_SFC_SFC_TM_WP_CS_TSWP_SHIFT 16
+#define IPBGCSFLSHNTWK_SFC_SFC_TM_WP_CS_THCS_RW (0x07f << 8)
+#define IPBGCSFLSHNTWK_SFC_SFC_TM_WP_CS_THCS_SHIFT 8
+#define IPBGCSFLSHNTWK_SFC_SFC_TM_WP_CS_TSCS_RW (0x0ff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_TM_WP_CS_TSCS_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PROTOCOL_DELAY_REG  (IPBGCSFLSHNTWK_BASE + 0x2014)
+#define IPBGCSFLSHNTWK_SFC_SFC_PROTOCOL_DELAY_ADDR_BIT_RW (0x01 << 28)
+#define IPBGCSFLSHNTWK_SFC_SFC_PROTOCOL_DELAY_ADDR_BIT_SHIFT 28
+#define IPBGCSFLSHNTWK_SFC_SFC_PROTOCOL_DELAY_ADDR_BIT_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PROTOCOL_DELAY_ADDR_BIT_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PROTOCOL_DELAY_FRAME_DELAY_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_SFC_SFC_PROTOCOL_DELAY_FRAME_DELAY_SHIFT 15
+#define IPBGCSFLSHNTWK_SFC_SFC_PROTOCOL_DELAY_FRAME_DELAY_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_PROTOCOL_DELAY_FRAME_DELAY_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_PROTOCOL_DELAY_FRAME_DELAY_VAL2 0x02
+#define IPBGCSFLSHNTWK_SFC_SFC_PROTOCOL_DELAY_FRAME_DELAY_VAL3 0x03
+#define IPBGCSFLSHNTWK_SFC_SFC_PROTOCOL_DELAY_IO_ADDR_TURN_RW (0x01f << 6)
+#define IPBGCSFLSHNTWK_SFC_SFC_PROTOCOL_DELAY_IO_ADDR_TURN_SHIFT 6
+#define IPBGCSFLSHNTWK_SFC_SFC_PROTOCOL_DELAY_IO_DATA_TURN_RW (0x03f << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PROTOCOL_DELAY_IO_DATA_TURN_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_REG  (IPBGCSFLSHNTWK_BASE + 0x2018)
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_CMD_RW (0x07f << 24)
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_CMD_SHIFT 24
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_ADD_REQ_RW (0x01 << 23)
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_ADD_REQ_SHIFT 23
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_ADD_REQ_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_ADD_REQ_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_CMD_DATA_DST_RW (0x01 << 19)
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_CMD_DATA_DST_SHIFT 19
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_CMD_DATA_DST_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_CMD_DATA_DST_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_CMD_DATA_SCR_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_CMD_DATA_SCR_SHIFT 18
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_CMD_DATA_SCR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_CMD_DATA_SCR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_RW_CTRL_CMD_RW (0x01 << 17)
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_RW_CTRL_CMD_SHIFT 17
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_RW_CTRL_CMD_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_RW_CTRL_CMD_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_RW_CTRL_CMD_EN_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_RW_CTRL_CMD_EN_SHIFT 16
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_RW_CTRL_CMD_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_SP_RW_CTRL_CMD_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_WR_CMD_MEM_RW (0x07f << 8)
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_WR_CMD_MEM_SHIFT 8
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_RD_CMD_MEM_RW (0x0ff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_DEVICE_CMD_RD_CMD_MEM_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_SP_CMD_RD_WR0_DATA_REG  (IPBGCSFLSHNTWK_BASE + 0x201c)
+#define IPBGCSFLSHNTWK_SFC_SFC_SP_CMD_RD_WR0_DATA_RD_WR_DATA0_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_SP_CMD_RD_WR0_DATA_RD_WR_DATA0_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_SP_CMD_RD_WR1_DATA_REG  (IPBGCSFLSHNTWK_BASE + 0x2020)
+#define IPBGCSFLSHNTWK_SFC_SFC_SP_CMD_RD_WR1_DATA_RD_WR_DATA1_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_SP_CMD_RD_WR1_DATA_RD_WR_DATA1_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_CMD_TMR_REG	(IPBGCSFLSHNTWK_BASE + 0x2024)
+#define IPBGCSFLSHNTWK_SFC_SFC_CMD_TMR_TMR_EN_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_SFC_SFC_CMD_TMR_TMR_EN_SHIFT 31
+#define IPBGCSFLSHNTWK_SFC_SFC_CMD_TMR_TMR_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CMD_TMR_TMR_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CMD_TMR_START_SP_RW (0x01 << 30)
+#define IPBGCSFLSHNTWK_SFC_SFC_CMD_TMR_START_SP_SHIFT 30
+#define IPBGCSFLSHNTWK_SFC_SFC_CMD_TMR_START_SP_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CMD_TMR_START_SP_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CMD_TMR_ACC_ERR_EN_RW (0x01 << 29)
+#define IPBGCSFLSHNTWK_SFC_SFC_CMD_TMR_ACC_ERR_EN_SHIFT 29
+#define IPBGCSFLSHNTWK_SFC_SFC_CMD_TMR_ACC_ERR_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_CMD_TMR_ACC_ERR_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CMD_TMR_TMR_VAL_RW (0x01fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_CMD_TMR_TMR_VAL_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_TX_RX_DATA_CNT_REG  (IPBGCSFLSHNTWK_BASE + 0x2028)
+#define IPBGCSFLSHNTWK_SFC_SFC_TX_RX_DATA_CNT_TX_COUNT_R (0x07ff << 12)
+#define IPBGCSFLSHNTWK_SFC_SFC_TX_RX_DATA_CNT_TX_COUNT_SHIFT 12
+#define IPBGCSFLSHNTWK_SFC_SFC_TX_RX_DATA_CNT_RX_COUNT_R (0x0fff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_TX_RX_DATA_CNT_RX_COUNT_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x202c)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_RW (0x0f << 27)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_SHIFT 27
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_VAL2 0x02
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_VAL3 0x03
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_VAL4 0x04
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_VAL5 0x05
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_VAL6 0x06
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_VAL7 0x07
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_VAL8 0x08
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_VAL9 0x09
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_VAL10 0x0a
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_VAL11 0x0b
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_VAL12 0x0c
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_VAL13 0x0d
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_VAL14 0x0e
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_BOOT_STRAP_VAL15 0x0f
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_CS_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_CS_SHIFT 26
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_CS_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_CS_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_SCK_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_SCK_SHIFT 25
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_SCK_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_SCK_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_SI_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_SI_SHIFT 24
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_WP_RW (0x01 << 23)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_WP_SHIFT 23
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_WP_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_WP_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_HOLD_RW (0x01 << 22)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_HOLD_SHIFT 22
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_SO_RW (0x01 << 21)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_SO_SHIFT 21
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_SO_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_CUR_SO_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_SP_CMD_DONE_RW (0x01 << 20)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_SP_CMD_DONE_SHIFT 20
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_SP_CMD_DONE_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_SP_CMD_DONE_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_ACC_ERR_RW (0x01 << 19)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_ACC_ERR_SHIFT 19
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_ACC_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_ACC_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_TMR_INT_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_TMR_INT_SHIFT 18
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_TMR_INT_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_TMR_INT_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_TX_INT_RW (0x01 << 17)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_TX_INT_SHIFT 17
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_TX_INT_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_TX_INT_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_RX_INT_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_RX_INT_SHIFT 16
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_RX_INT_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_RX_INT_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_DMA_REQ_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_DMA_REQ_SHIFT 15
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_DMA_REQ_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_DMA_REQ_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_RW (0x0f << 10)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_SHIFT 10
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_VAL2 0x02
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_VAL3 0x03
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_VAL4 0x04
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_VAL5 0x05
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_VAL6 0x06
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_VAL7 0x07
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_VAL8 0x08
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_VAL9 0x09
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_VAL10 0x0a
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_VAL11 0x0b
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_VAL12 0x0c
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_VAL13 0x0d
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_VAL14 0x0e
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_VALID_BUFF_ENTRY_VAL15 0x0f
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_DEBUG_SIGNALS_RW (0x03f << 3)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_DEBUG_SIGNALS_SHIFT 3
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_RD_CURR_DONE_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_RD_CURR_DONE_SHIFT 2
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_RD_CURR_DONE_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_RD_CURR_DONE_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_WR_CURR_DONE_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_WR_CURR_DONE_SHIFT 1
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_WR_CURR_DONE_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_WR_CURR_DONE_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_XFER_DONE_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_XFER_DONE_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_XFER_DONE_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_SFC_STATUS_XFER_DONE_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_SFC_CURR_HSX_ADDRESS_REG  (IPBGCSFLSHNTWK_BASE + 0x2030)
+#define IPBGCSFLSHNTWK_SFC_SFC_CURR_HSX_ADDRESS_HSX_ADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_CURR_HSX_ADDRESS_HSX_ADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_CURR_READ_DATA_REG  (IPBGCSFLSHNTWK_BASE + 0x2034)
+#define IPBGCSFLSHNTWK_SFC_SFC_CURR_READ_DATA_HSX_RD_DATA_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_CURR_READ_DATA_HSX_RD_DATA_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_CURR_WRITE_DATA_REG	(IPBGCSFLSHNTWK_BASE + 0x2038)
+#define IPBGCSFLSHNTWK_SFC_SFC_CURR_WRITE_DATA_HSX_RD_DATA_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_CURR_WRITE_DATA_HSX_RD_DATA_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_0_REG  (IPBGCSFLSHNTWK_BASE + 0x203c)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_0_BUFF_0_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_0_BUFF_0_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_1_REG  (IPBGCSFLSHNTWK_BASE + 0x2040)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_1_BUFF_1_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_1_BUFF_1_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_2_REG  (IPBGCSFLSHNTWK_BASE + 0x2044)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_2_BUFF_2_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_2_BUFF_2_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_3_REG  (IPBGCSFLSHNTWK_BASE + 0x2048)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_3_BUFF_3_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_3_BUFF_3_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_4_REG  (IPBGCSFLSHNTWK_BASE + 0x204c)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_4_BUFF_4_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_4_BUFF_4_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_5_REG  (IPBGCSFLSHNTWK_BASE + 0x2050)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_5_BUFF_5_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_5_BUFF_5_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_6_REG  (IPBGCSFLSHNTWK_BASE + 0x2054)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_6_BUFF_6_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_6_BUFF_6_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_7_REG  (IPBGCSFLSHNTWK_BASE + 0x2058)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_7_BUFF_7_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_7_BUFF_7_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_8_REG  (IPBGCSFLSHNTWK_BASE + 0x205c)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_8_BUFF_8_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_8_BUFF_8_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_9_REG  (IPBGCSFLSHNTWK_BASE + 0x2060)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_9_BUFF_9_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_9_BUFF_9_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_10_REG  (IPBGCSFLSHNTWK_BASE + 0x2064)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_10_BUFF_10_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_10_BUFF_10_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_11_REG  (IPBGCSFLSHNTWK_BASE + 0x2068)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_11_BUFF_11_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_11_BUFF_11_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_12_REG  (IPBGCSFLSHNTWK_BASE + 0x206c)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_12_BUFF_12_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_12_BUFF_12_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_13_REG  (IPBGCSFLSHNTWK_BASE + 0x2070)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_13_BUFF_13_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_13_BUFF_13_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_14_REG  (IPBGCSFLSHNTWK_BASE + 0x2074)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_14_BUFF_14_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_14_BUFF_14_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_15_REG  (IPBGCSFLSHNTWK_BASE + 0x2078)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_15_BUFF_15_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SFC_SFC_PRE_FETCH_BUFF_15_BUFF_15_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_REG  (IPBGCSFLSHNTWK_BASE + 0x2ffc)
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MODULE_ID_R (0x07fff << 16)
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MODULE_ID_SHIFT 16
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MAJOR_REVISION_R (0x07 << 12)
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MAJOR_REVISION_SHIFT 12
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MAJOR_REVISION_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MAJOR_REVISION_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MAJOR_REVISION_VAL2 0x02
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MAJOR_REVISION_VAL3 0x03
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MAJOR_REVISION_VAL4 0x04
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MAJOR_REVISION_VAL5 0x05
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MAJOR_REVISION_VAL6 0x06
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MAJOR_REVISION_VAL7 0x07
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MINOR_REVISION_R (0x07 << 8)
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MINOR_REVISION_SHIFT 8
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MINOR_REVISION_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MINOR_REVISION_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MINOR_REVISION_VAL2 0x02
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MINOR_REVISION_VAL3 0x03
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MINOR_REVISION_VAL4 0x04
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MINOR_REVISION_VAL5 0x05
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MINOR_REVISION_VAL6 0x06
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MINOR_REVISION_VAL7 0x07
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MOD_SIZE_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_SFC_MODULE_ID_MOD_SIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_REG  (IPBGCSFLSHNTWK_BASE + 0x3000)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_DESC_TYPE_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_DESC_TYPE_SHIFT 31
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_DESC_TYPE_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_DESC_TYPE_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_WR_WAIT_RW (0x03f << 24)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_WR_WAIT_SHIFT 24
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_RD_WAIT_RW (0x03f << 16)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_RD_WAIT_SHIFT 16
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_REG_TYPE_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_REG_TYPE_SHIFT 15
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_REG_TYPE_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_REG_TYPE_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_SYNC_IO_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_SYNC_IO_SHIFT 14
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_SYNC_IO_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_SYNC_IO_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_EXT_WAIT_RW (0x01 << 12)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_EXT_WAIT_SHIFT 12
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_EXT_WAIT_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_EXT_WAIT_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_ISA_INCR_RW (0x01 << 11)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_ISA_INCR_SHIFT 11
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_ISA_INCR_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_ISA_INCR_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_CHIP_SEL_RW (0x03 << 8)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_CHIP_SEL_SHIFT 8
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_CHIP_SEL_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_CHIP_SEL_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_CHIP_SEL_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_CHIP_SEL_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_REG_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_REG_SHIFT 7
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_IO_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_IO_SHIFT 6
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_IO_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_IO_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_WIDTH_RW (0x01 << 4)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_WIDTH_SHIFT 4
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC0_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_REG  (IPBGCSFLSHNTWK_BASE + 0x3004)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_DESC_TYPE_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_DESC_TYPE_SHIFT 31
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_DESC_TYPE_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_DESC_TYPE_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_WR_WAIT_RW (0x03f << 24)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_WR_WAIT_SHIFT 24
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_RD_WAIT_RW (0x03f << 16)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_RD_WAIT_SHIFT 16
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_REG_TYPE_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_REG_TYPE_SHIFT 15
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_REG_TYPE_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_REG_TYPE_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_SYNC_IO_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_SYNC_IO_SHIFT 14
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_SYNC_IO_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_SYNC_IO_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_EXT_WAIT_RW (0x01 << 12)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_EXT_WAIT_SHIFT 12
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_EXT_WAIT_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_EXT_WAIT_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_ISA_INCR_RW (0x01 << 11)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_ISA_INCR_SHIFT 11
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_ISA_INCR_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_ISA_INCR_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_CHIP_SEL_RW (0x03 << 8)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_CHIP_SEL_SHIFT 8
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_CHIP_SEL_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_CHIP_SEL_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_CHIP_SEL_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_CHIP_SEL_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_REG_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_REG_SHIFT 7
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_IO_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_IO_SHIFT 6
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_IO_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_IO_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_WIDTH_RW (0x01 << 4)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_WIDTH_SHIFT 4
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC1_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_REG  (IPBGCSFLSHNTWK_BASE + 0x3008)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_DESC_TYPE_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_DESC_TYPE_SHIFT 31
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_DESC_TYPE_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_DESC_TYPE_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_WR_WAIT_RW (0x03f << 24)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_WR_WAIT_SHIFT 24
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_RD_WAIT_RW (0x03f << 16)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_RD_WAIT_SHIFT 16
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_REG_TYPE_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_REG_TYPE_SHIFT 15
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_REG_TYPE_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_REG_TYPE_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_SYNC_IO_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_SYNC_IO_SHIFT 14
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_SYNC_IO_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_SYNC_IO_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_EXT_WAIT_RW (0x01 << 12)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_EXT_WAIT_SHIFT 12
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_EXT_WAIT_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_EXT_WAIT_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_ISA_INCR_RW (0x01 << 11)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_ISA_INCR_SHIFT 11
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_ISA_INCR_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_ISA_INCR_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_CHIP_SEL_RW (0x03 << 8)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_CHIP_SEL_SHIFT 8
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_CHIP_SEL_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_CHIP_SEL_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_CHIP_SEL_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_CHIP_SEL_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_REG_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_REG_SHIFT 7
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_IO_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_IO_SHIFT 6
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_IO_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_IO_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_WIDTH_RW (0x01 << 4)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_WIDTH_SHIFT 4
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC2_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_REG  (IPBGCSFLSHNTWK_BASE + 0x300c)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_DESC_TYPE_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_DESC_TYPE_SHIFT 31
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_DESC_TYPE_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_DESC_TYPE_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_WR_WAIT_RW (0x03f << 24)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_WR_WAIT_SHIFT 24
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_RD_WAIT_RW (0x03f << 16)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_RD_WAIT_SHIFT 16
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_REG_TYPE_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_REG_TYPE_SHIFT 15
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_REG_TYPE_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_REG_TYPE_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_SYNC_IO_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_SYNC_IO_SHIFT 14
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_SYNC_IO_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_SYNC_IO_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_EXT_WAIT_RW (0x01 << 12)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_EXT_WAIT_SHIFT 12
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_EXT_WAIT_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_EXT_WAIT_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_ISA_INCR_RW (0x01 << 11)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_ISA_INCR_SHIFT 11
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_ISA_INCR_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_ISA_INCR_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_CHIP_SEL_RW (0x03 << 8)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_CHIP_SEL_SHIFT 8
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_CHIP_SEL_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_CHIP_SEL_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_CHIP_SEL_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_CHIP_SEL_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_REG_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_REG_SHIFT 7
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_IO_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_IO_SHIFT 6
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_IO_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_IO_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_WIDTH_RW (0x01 << 4)
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_WIDTH_SHIFT 4
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ISA_DESC3_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG  (IPBGCSFLSHNTWK_BASE + 0x3010)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_SETUP_RW (0x07 << 28)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_SETUP_SHIFT 28
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_SETUP_VAL4 0x04
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_SETUP_VAL5 0x05
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_SETUP_VAL6 0x06
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_SETUP_VAL7 0x07
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_ACCESS_RW (0x07 << 24)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_ACCESS_SHIFT 24
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_ACCESS_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_ACCESS_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_ACCESS_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_ACCESS_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_ACCESS_VAL4 0x04
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_ACCESS_VAL5 0x05
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_ACCESS_VAL6 0x06
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_REG_ACCESS_VAL7 0x07
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_SETUP_RW (0x03f << 17)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_SETUP_SHIFT 17
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_RW (0x0f << 12)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_SHIFT 12
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_VAL4 0x04
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_VAL5 0x05
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_VAL6 0x06
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_VAL7 0x07
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_VAL8 0x08
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_VAL9 0x09
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_VAL10 0x0a
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_VAL11 0x0b
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_VAL12 0x0c
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_VAL13 0x0d
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_VAL14 0x0e
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CS_HOLD_VAL15 0x0f
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CTL_SETUP_RW (0x03f << 5)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_CTL_SETUP_SHIFT 5
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_ADDR_HOLD_RW (0x01f << 0)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC0_ADDR_HOLD_SHIFT 0
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG  (IPBGCSFLSHNTWK_BASE + 0x3014)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_SETUP_RW (0x07 << 28)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_SETUP_SHIFT 28
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_SETUP_VAL4 0x04
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_SETUP_VAL5 0x05
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_SETUP_VAL6 0x06
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_SETUP_VAL7 0x07
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_ACCESS_RW (0x07 << 24)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_ACCESS_SHIFT 24
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_ACCESS_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_ACCESS_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_ACCESS_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_ACCESS_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_ACCESS_VAL4 0x04
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_ACCESS_VAL5 0x05
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_ACCESS_VAL6 0x06
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_REG_ACCESS_VAL7 0x07
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_SETUP_RW (0x03f << 17)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_SETUP_SHIFT 17
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_RW (0x0f << 12)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_SHIFT 12
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_VAL4 0x04
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_VAL5 0x05
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_VAL6 0x06
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_VAL7 0x07
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_VAL8 0x08
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_VAL9 0x09
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_VAL10 0x0a
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_VAL11 0x0b
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_VAL12 0x0c
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_VAL13 0x0d
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_VAL14 0x0e
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CS_HOLD_VAL15 0x0f
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CTL_SETUP_RW (0x03f << 5)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_CTL_SETUP_SHIFT 5
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_ADDR_HOLD_RW (0x01f << 0)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC1_ADDR_HOLD_SHIFT 0
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG  (IPBGCSFLSHNTWK_BASE + 0x3018)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_SETUP_RW (0x07 << 28)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_SETUP_SHIFT 28
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_SETUP_VAL4 0x04
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_SETUP_VAL5 0x05
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_SETUP_VAL6 0x06
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_SETUP_VAL7 0x07
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_ACCESS_RW (0x07 << 24)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_ACCESS_SHIFT 24
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_ACCESS_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_ACCESS_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_ACCESS_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_ACCESS_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_ACCESS_VAL4 0x04
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_ACCESS_VAL5 0x05
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_ACCESS_VAL6 0x06
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_REG_ACCESS_VAL7 0x07
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_SETUP_RW (0x03f << 17)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_SETUP_SHIFT 17
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_RW (0x0f << 12)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_SHIFT 12
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_VAL4 0x04
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_VAL5 0x05
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_VAL6 0x06
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_VAL7 0x07
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_VAL8 0x08
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_VAL9 0x09
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_VAL10 0x0a
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_VAL11 0x0b
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_VAL12 0x0c
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_VAL13 0x0d
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_VAL14 0x0e
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CS_HOLD_VAL15 0x0f
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CTL_SETUP_RW (0x03f << 5)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_CTL_SETUP_SHIFT 5
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_ADDR_HOLD_RW (0x01f << 0)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC2_ADDR_HOLD_SHIFT 0
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG  (IPBGCSFLSHNTWK_BASE + 0x301c)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_SETUP_RW (0x07 << 28)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_SETUP_SHIFT 28
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_SETUP_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_SETUP_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_SETUP_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_SETUP_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_SETUP_VAL4 0x04
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_SETUP_VAL5 0x05
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_SETUP_VAL6 0x06
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_SETUP_VAL7 0x07
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_ACCESS_RW (0x07 << 24)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_ACCESS_SHIFT 24
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_ACCESS_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_ACCESS_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_ACCESS_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_ACCESS_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_ACCESS_VAL4 0x04
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_ACCESS_VAL5 0x05
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_ACCESS_VAL6 0x06
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_REG_ACCESS_VAL7 0x07
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_SETUP_RW (0x03f << 17)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_SETUP_SHIFT 17
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_RW (0x0f << 12)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_SHIFT 12
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_VAL4 0x04
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_VAL5 0x05
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_VAL6 0x06
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_VAL7 0x07
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_VAL8 0x08
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_VAL9 0x09
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_VAL10 0x0a
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_VAL11 0x0b
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_VAL12 0x0c
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_VAL13 0x0d
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_VAL14 0x0e
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CS_HOLD_VAL15 0x0f
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CTL_SETUP_RW (0x03f << 5)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_CTL_SETUP_SHIFT 5
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_ADDR_HOLD_RW (0x01f << 0)
+#define IPBGCSFLSHNTWK_ISA_EXT_DESC3_ADDR_HOLD_SHIFT 0
+#define IPBGCSFLSHNTWK_ISA_ROM_MODE_REG  (IPBGCSFLSHNTWK_BASE + 0x3020)
+#define IPBGCSFLSHNTWK_ISA_ROM_MODE_SYNCHRONOUS_IO_ENABLE_RW (0x07 << 8)
+#define IPBGCSFLSHNTWK_ISA_ROM_MODE_SYNCHRONOUS_IO_ENABLE_SHIFT 8
+#define IPBGCSFLSHNTWK_ISA_ROM_MODE_SYNCHRONOUS_IO_ENABLE_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_ROM_MODE_SYNCHRONOUS_IO_ENABLE_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_ROM_MODE_SYNCHRONOUS_IO_ENABLE_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_ROM_MODE_SYNCHRONOUS_IO_ENABLE_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_ROM_MODE_SYNCHRONOUS_IO_ENABLE_VAL4 0x04
+#define IPBGCSFLSHNTWK_ISA_ROM_MODE_SYNCHRONOUS_IO_ENABLE_VAL5 0x05
+#define IPBGCSFLSHNTWK_ISA_ROM_MODE_SYNCHRONOUS_IO_ENABLE_VAL6 0x06
+#define IPBGCSFLSHNTWK_ISA_ROM_MODE_SYNCHRONOUS_IO_ENABLE_VAL7 0x07
+#define IPBGCSFLSHNTWK_ISA_XOE_MASK_REG  (IPBGCSFLSHNTWK_BASE + 0x3024)
+#define IPBGCSFLSHNTWK_ISA_XOE_MASK_XOE_MASK_RW (0x0ff << 0)
+#define IPBGCSFLSHNTWK_ISA_XOE_MASK_XOE_MASK_SHIFT 0
+#define IPBGCSFLSHNTWK_ISA_PAGE_SIZE_REG  (IPBGCSFLSHNTWK_BASE + 0x3028)
+#define IPBGCSFLSHNTWK_ISA_PAGE_SIZE_PAGE_SIZE_RW (0x0ff << 0)
+#define IPBGCSFLSHNTWK_ISA_PAGE_SIZE_PAGE_SIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_ISA_IO_TIMEOUT_REG  (IPBGCSFLSHNTWK_BASE + 0x302c)
+#define IPBGCSFLSHNTWK_ISA_IO_TIMEOUT_TIMEOUT_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_ISA_IO_TIMEOUT_TIMEOUT_SHIFT 0
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_REG  (IPBGCSFLSHNTWK_BASE + 0x3ffc)
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MODULE_ID_R (0x07fff << 16)
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MODULE_ID_SHIFT 16
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MAJOR_REVISION_R (0x07 << 12)
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MAJOR_REVISION_SHIFT 12
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MAJOR_REVISION_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MAJOR_REVISION_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MAJOR_REVISION_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MAJOR_REVISION_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MAJOR_REVISION_VAL4 0x04
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MAJOR_REVISION_VAL5 0x05
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MAJOR_REVISION_VAL6 0x06
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MAJOR_REVISION_VAL7 0x07
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MINOR_REVISION_R (0x07 << 8)
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MINOR_REVISION_SHIFT 8
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MINOR_REVISION_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MINOR_REVISION_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MINOR_REVISION_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MINOR_REVISION_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MINOR_REVISION_VAL4 0x04
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MINOR_REVISION_VAL5 0x05
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MINOR_REVISION_VAL6 0x06
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MINOR_REVISION_VAL7 0x07
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MOD_SIZE_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_ISA_MODULE_ID_MOD_SIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_REG  (IPBGCSFLSHNTWK_BASE + 0x4000)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_INTSTATUS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_INTSTATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCSTATUS_REG  (IPBGCSFLSHNTWK_BASE + 0x4004)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCSTATUS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCSTATUS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCSTATUS_INTTCSTATUS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCSTATUS_INTTCSTATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_REG	(IPBGCSFLSHNTWK_BASE + 0x4008)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_INTTCCLEAR_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_INTTCCLEAR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRORSTATUS_REG	(IPBGCSFLSHNTWK_BASE + 0x400c)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRORSTATUS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRORSTATUS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRORSTATUS_INTERRORSTATUS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRORSTATUS_INTERRORSTATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRCLR_REG  (IPBGCSFLSHNTWK_BASE + 0x4010)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRCLR_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRCLR_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRCLR_INTERRCLR_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRCLR_INTERRCLR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTTCSTATUS_REG	(IPBGCSFLSHNTWK_BASE + 0x4014)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTTCSTATUS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTTCSTATUS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTTCSTATUS_RAWINTTCSTATUS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTTCSTATUS_RAWINTTCSTATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTERRORSTATUS_REG  (IPBGCSFLSHNTWK_BASE + 0x4018)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTERRORSTATUS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTERRORSTATUS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTERRORSTATUS_RAWINTERRORSTATUS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTERRORSTATUS_RAWINTERRORSTATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACENBLDCHNS_REG  (IPBGCSFLSHNTWK_BASE + 0x401c)
+#define IPBGCSFLSHNTWK_DMAC_DMACENBLDCHNS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACENBLDCHNS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACENBLDCHNS_ENABLEDCHANNELS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACENBLDCHNS_ENABLEDCHANNELS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTBREQ_REG  (IPBGCSFLSHNTWK_BASE + 0x4020)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTBREQ_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTBREQ_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTBREQ_SOFTBREQ_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTBREQ_SOFTBREQ_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTSREQ_REG  (IPBGCSFLSHNTWK_BASE + 0x4024)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTSREQ_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTSREQ_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTSREQ_SOFTSREQ_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTSREQ_SOFTSREQ_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLBREQ_REG  (IPBGCSFLSHNTWK_BASE + 0x4028)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLBREQ_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLBREQ_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLBREQ_SOFTLBREQ_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLBREQ_SOFTLBREQ_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLSREQ_REG  (IPBGCSFLSHNTWK_BASE + 0x402c)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLSREQ_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLSREQ_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLSREQ_SOFTLSREQ_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLSREQ_SOFTLSREQ_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4030)
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_UNDEFINED_RW (0x0fffffff << 3)
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_UNDEFINED_SHIFT 3
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M2_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M2_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M2_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M2_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M1_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M1_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M1_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M1_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACSYNC_REG  (IPBGCSFLSHNTWK_BASE + 0x4034)
+#define IPBGCSFLSHNTWK_DMAC_DMACSYNC_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACSYNC_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACSYNC_DMACSYNC_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACSYNC_DMACSYNC_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x4100)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x4104)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x4108)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x410c)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4110)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x4120)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC1DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x4124)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x4128)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x412c)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4130)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x4140)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC2DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x4144)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x4148)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x414c)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4150)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x4160)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC3DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x4164)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x4168)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x416c)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4170)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x4180)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC4DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x4184)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x4188)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x418c)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4190)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x41a0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC5DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x41a4)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x41a8)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x41ac)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x41b0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x41c0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC6DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x41c4)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x41c8)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x41cc)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x41d0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x41e0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC7DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x41e4)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x41e8)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x41ec)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x41f0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_REG  (IPBGCSFLSHNTWK_BASE + 0x4500)
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_UNDEFINED_RW (0x03fffffff << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_T_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_T_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_T_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_T_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP1_REG  (IPBGCSFLSHNTWK_BASE + 0x4504)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP1_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP1_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP1_DMACCLR_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP1_DMACCLR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP2_REG  (IPBGCSFLSHNTWK_BASE + 0x4508)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP2_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP2_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP2_DMACCTC_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP2_DMACCTC_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_REG  (IPBGCSFLSHNTWK_BASE + 0x450c)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_UNDEFINED_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_UNDEFINED_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_TC_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_TC_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_TC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_TC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID0_REG  (IPBGCSFLSHNTWK_BASE + 0x4fe0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID0_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID0_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID0_PARTNUMBER0_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID0_PARTNUMBER0_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_REG  (IPBGCSFLSHNTWK_BASE + 0x4fe4)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_R (0x07 << 4)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_SHIFT 4
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_R (0x0f << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL8 0x08
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL9 0x09
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL10 0x0a
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL11 0x0b
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL12 0x0c
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL13 0x0d
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL14 0x0e
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL15 0x0f
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REG  (IPBGCSFLSHNTWK_BASE + 0x4fe8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_R (0x07 << 4)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_SHIFT 4
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_R (0x0f << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL8 0x08
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL9 0x09
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL10 0x0a
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL11 0x0b
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL12 0x0c
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL13 0x0d
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL14 0x0e
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL15 0x0f
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_REG  (IPBGCSFLSHNTWK_BASE + 0x4fec)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_CONFIGURATION_R (0x01 << 7)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_CONFIGURATION_SHIFT 7
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_CONFIGURATION_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_CONFIGURATION_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID0_REG  (IPBGCSFLSHNTWK_BASE + 0x4ff0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID0_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID0_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID0_DMACPCELLID0_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID0_DMACPCELLID0_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID1_REG  (IPBGCSFLSHNTWK_BASE + 0x4ff4)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID1_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID1_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID1_DMACPCELLID1_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID1_DMACPCELLID1_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID2_REG  (IPBGCSFLSHNTWK_BASE + 0x4ff8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID2_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID2_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID2_DMACPCELLID2_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID2_DMACPCELLID2_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID3_REG  (IPBGCSFLSHNTWK_BASE + 0x4ffc)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID3_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID3_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID3_DMACPCELLID3_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID3_DMACPCELLID3_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_SIG_SYS_ADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x5000)
+#define IPBGCSFLSHNTWK_SDIO_SIG_SYS_ADDR_SIG_SYS_ADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SDIO_SIG_SYS_ADDR_SIG_SYS_ADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_BLK_SIZE_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x5004)
+#define IPBGCSFLSHNTWK_SDIO_BLK_SIZE_TRANS_BLK_SIZE_12_R (0x01 << 15)
+#define IPBGCSFLSHNTWK_SDIO_BLK_SIZE_TRANS_BLK_SIZE_12_SHIFT 15
+#define IPBGCSFLSHNTWK_SDIO_BLK_SIZE_TRANS_BLK_SIZE_12_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_BLK_SIZE_TRANS_BLK_SIZE_12_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_BLK_SIZE_HOST_DMA_BUFF_SIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_SDIO_BLK_SIZE_HOST_DMA_BUFF_SIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_SDIO_BLK_SIZE_HOST_DMA_BUFF_SIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_BLK_SIZE_HOST_DMA_BUFF_SIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_BLK_SIZE_HOST_DMA_BUFF_SIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_SDIO_BLK_SIZE_HOST_DMA_BUFF_SIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_SDIO_BLK_SIZE_BLK_SIZEAHB_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_SDIO_BLK_SIZE_BLK_SIZEAHB_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_BLK_CNT_REG  (IPBGCSFLSHNTWK_BASE + 0x5006)
+#define IPBGCSFLSHNTWK_SDIO_BLK_CNT_BLK_CNT_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_SDIO_BLK_CNT_BLK_CNT_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_ARGUMENT_REG  (IPBGCSFLSHNTWK_BASE + 0x5008)
+#define IPBGCSFLSHNTWK_SDIO_ARGUMENT_ARGUMENT_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SDIO_ARGUMENT_ARGUMENT_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x500c)
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_BOOT_EN_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_BOOT_EN_SHIFT 8
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_BOOT_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_BOOT_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_SPI_MODE_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_SPI_MODE_SHIFT 7
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_SPI_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_SPI_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_MULTI_SINGLE_BLK_SEL_RW (0x01 << 5)
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_MULTI_SINGLE_BLK_SEL_SHIFT 5
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_MULTI_SINGLE_BLK_SEL_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_MULTI_SINGLE_BLK_SEL_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_DATA_TRANS_DIR_SEL_RW (0x01 << 4)
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_DATA_TRANS_DIR_SEL_SHIFT 4
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_DATA_TRANS_DIR_SEL_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_DATA_TRANS_DIR_SEL_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_AUTO_CMD12_EN_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_AUTO_CMD12_EN_SHIFT 2
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_AUTO_CMD12_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_AUTO_CMD12_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_BLK_CNT_SEL_AHB_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_BLK_CNT_SEL_AHB_SHIFT 1
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_BLK_CNT_SEL_AHB_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_BLK_CNT_SEL_AHB_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_DMA_EN_AHB_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_DMA_EN_AHB_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_DMA_EN_AHB_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_TRANSFER_MODE_DMA_EN_AHB_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CMD_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x500e)
+#define IPBGCSFLSHNTWK_SDIO_CMD_CMD_INDEX_RW (0x01f << 8)
+#define IPBGCSFLSHNTWK_SDIO_CMD_CMD_INDEX_SHIFT 8
+#define IPBGCSFLSHNTWK_SDIO_CMD_CMD_REG_SD_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_SDIO_CMD_CMD_REG_SD_SHIFT 6
+#define IPBGCSFLSHNTWK_SDIO_CMD_CMD_REG_SD_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CMD_CMD_REG_SD_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CMD_DATA_PRES_SEL_RW (0x01 << 5)
+#define IPBGCSFLSHNTWK_SDIO_CMD_DATA_PRES_SEL_SHIFT 5
+#define IPBGCSFLSHNTWK_SDIO_CMD_DATA_PRES_SEL_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CMD_DATA_PRES_SEL_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CMD_CMD_INDEX_CHK_EN_RW (0x01 << 4)
+#define IPBGCSFLSHNTWK_SDIO_CMD_CMD_INDEX_CHK_EN_SHIFT 4
+#define IPBGCSFLSHNTWK_SDIO_CMD_CMD_INDEX_CHK_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CMD_CMD_INDEX_CHK_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CMD_CMD_CRC_CHK_EN_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_SDIO_CMD_CMD_CRC_CHK_EN_SHIFT 3
+#define IPBGCSFLSHNTWK_SDIO_CMD_CMD_CRC_CHK_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CMD_CMD_CRC_CHK_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CMD_RESP_TYPE_RW (0x03 << 0)
+#define IPBGCSFLSHNTWK_SDIO_CMD_RESP_TYPE_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_CMD_RESP_TYPE_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CMD_RESP_TYPE_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CMD_RESP_TYPE_VAL2 0x02
+#define IPBGCSFLSHNTWK_SDIO_CMD_RESP_TYPE_VAL3 0x03
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_REGISTER_0_REG  (IPBGCSFLSHNTWK_BASE + 0x5010)
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_RESP0_DATA_R (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_RESP0_DATA_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_REGISTER_1_REG  (IPBGCSFLSHNTWK_BASE + 0x5012)
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_RESP1_DATA_R (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_RESP1_DATA_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_REGISTER_2_REG  (IPBGCSFLSHNTWK_BASE + 0x5014)
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_RESP2_DATA_R (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_RESP2_DATA_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_REGISTER_3_REG  (IPBGCSFLSHNTWK_BASE + 0x5016)
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_RESP3_DATA_R (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_RESP3_DATA_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_REGISTER_4_REG  (IPBGCSFLSHNTWK_BASE + 0x5018)
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_RESP4_DATA_R (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_RESP4_DATA_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_REGISTER_5_REG  (IPBGCSFLSHNTWK_BASE + 0x501a)
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_RESP5_DATA_R (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_RESP5_DATA_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_REGISTER_6_REG  (IPBGCSFLSHNTWK_BASE + 0x501c)
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_RESP6_DATA_R (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_RESP6_DATA_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_REGISTER_7_REG  (IPBGCSFLSHNTWK_BASE + 0x501e)
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_RESP7_DATA_R (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_SDIO_RESPONSE_RESP7_DATA_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_BUFF_DATA_PORT_REG_REG	(IPBGCSFLSHNTWK_BASE + 0x5020)
+#define IPBGCSFLSHNTWK_SDIO_BUFF_DATA_PORT_BUFF_DATA_PORT_REG_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SDIO_BUFF_DATA_PORT_BUFF_DATA_PORT_REG_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x5024)
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_4_7_IN_SYN_R (0x07 << 25)
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_4_7_IN_SYN_SHIFT 25
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_4_7_IN_SYN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_4_7_IN_SYN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_4_7_IN_SYN_VAL2 0x02
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_4_7_IN_SYN_VAL3 0x03
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_4_7_IN_SYN_VAL4 0x04
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_4_7_IN_SYN_VAL5 0x05
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_4_7_IN_SYN_VAL6 0x06
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_4_7_IN_SYN_VAL7 0x07
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CMD_IN_SYN_R (0x01 << 24)
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CMD_IN_SYN_SHIFT 24
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CMD_IN_SYN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CMD_IN_SYN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_0_3_IN_SYN_R (0x07 << 20)
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_0_3_IN_SYN_SHIFT 20
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_0_3_IN_SYN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_0_3_IN_SYN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_0_3_IN_SYN_VAL2 0x02
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_0_3_IN_SYN_VAL3 0x03
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_0_3_IN_SYN_VAL4 0x04
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_0_3_IN_SYN_VAL5 0x05
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_0_3_IN_SYN_VAL6 0x06
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DATA_0_3_IN_SYN_VAL7 0x07
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_SDWP_SYN_N_R (0x01 << 19)
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_SDWP_SYN_N_SHIFT 19
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_SDWP_SYN_N_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_SDWP_SYN_N_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_SDCD_SYN_N_R (0x01 << 18)
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_SDCD_SYN_N_SHIFT 18
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_SDCD_SYN_N_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_SDCD_SYN_N_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CARD_STATE_STABLE_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CARD_STATE_STABLE_SHIFT 17
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CARD_STATE_STABLE_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CARD_STATE_STABLE_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CARD_INSERTED_R (0x01 << 16)
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CARD_INSERTED_SHIFT 16
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CARD_INSERTED_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CARD_INSERTED_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_BUFF_RD_EN_R (0x01 << 11)
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_BUFF_RD_EN_SHIFT 11
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_BUFF_RD_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_BUFF_RD_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_BUFF_WR_EN_R (0x01 << 10)
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_BUFF_WR_EN_SHIFT 10
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_BUFF_WR_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_BUFF_WR_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_RD_TRANS_ACTIVE_AHB_R (0x01 << 9)
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_RD_TRANS_ACTIVE_AHB_SHIFT 9
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_RD_TRANS_ACTIVE_AHB_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_RD_TRANS_ACTIVE_AHB_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_WR_TRANS_ACTIVE_AHB_R (0x01 << 8)
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_WR_TRANS_ACTIVE_AHB_SHIFT 8
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_WR_TRANS_ACTIVE_AHB_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_WR_TRANS_ACTIVE_AHB_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DAT_LINE_ACTIVE_AHB_R (0x01 << 2)
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DAT_LINE_ACTIVE_AHB_SHIFT 2
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DAT_LINE_ACTIVE_AHB_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_DAT_LINE_ACTIVE_AHB_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CMD_INHIBIT_DAT_AHB_R (0x01 << 1)
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CMD_INHIBIT_DAT_AHB_SHIFT 1
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CMD_INHIBIT_DAT_AHB_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CMD_INHIBIT_DAT_AHB_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CMD_INHIBIT_CMD_AHB_R (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CMD_INHIBIT_CMD_AHB_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CMD_INHIBIT_CMD_AHB_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_PRESENT_STATE_CMD_INHIBIT_CMD_AHB_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x5028)
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_CARD_DET_SIG_DETECTION_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_CARD_DET_SIG_DETECTION_SHIFT 7
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_CARD_DET_SIG_DETECTION_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_CARD_DET_SIG_DETECTION_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_CARD_DET_LEVEL_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_CARD_DET_LEVEL_SHIFT 6
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_CARD_DET_LEVEL_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_CARD_DET_LEVEL_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_SD8_BIT_MODE_RW (0x01 << 5)
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_SD8_BIT_MODE_SHIFT 5
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_SD8_BIT_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_SD8_BIT_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_DMA_SELECT_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_DMA_SELECT_SHIFT 3
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_DMA_SELECT_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_DMA_SELECT_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_HIGH_SPEED_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_HIGH_SPEED_SHIFT 2
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_HIGH_SPEED_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_HIGH_SPEED_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_DATA_TRANS_WIDTH_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_DATA_TRANS_WIDTH_SHIFT 1
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_DATA_TRANS_WIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_DATA_TRANS_WIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_LED_ON_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_LED_ON_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_LED_ON_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_LED_ON_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_POWER_CTRL_REG_REG	(IPBGCSFLSHNTWK_BASE + 0x5029)
+#define IPBGCSFLSHNTWK_SDIO_POWER_CTRL_BUS_VOLT_RW (0x03 << 1)
+#define IPBGCSFLSHNTWK_SDIO_POWER_CTRL_BUS_VOLT_SHIFT 1
+#define IPBGCSFLSHNTWK_SDIO_POWER_CTRL_BUS_VOLT_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_POWER_CTRL_BUS_VOLT_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_POWER_CTRL_BUS_VOLT_VAL2 0x02
+#define IPBGCSFLSHNTWK_SDIO_POWER_CTRL_BUS_VOLT_VAL3 0x03
+#define IPBGCSFLSHNTWK_SDIO_POWER_CTRL_BUS_POW_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_POWER_CTRL_BUS_POW_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_POWER_CTRL_BUS_POW_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_POWER_CTRL_BUS_POW_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_BLK_GAP_CTRL_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x502a)
+#define IPBGCSFLSHNTWK_SDIO_BLK_GAP_CTRL_INT_AT_BLK_GAP_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_SDIO_BLK_GAP_CTRL_INT_AT_BLK_GAP_SHIFT 3
+#define IPBGCSFLSHNTWK_SDIO_BLK_GAP_CTRL_INT_AT_BLK_GAP_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_BLK_GAP_CTRL_INT_AT_BLK_GAP_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_BLK_GAP_CTRL_RD_WAIT_CTRL_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_SDIO_BLK_GAP_CTRL_RD_WAIT_CTRL_SHIFT 2
+#define IPBGCSFLSHNTWK_SDIO_BLK_GAP_CTRL_RD_WAIT_CTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_BLK_GAP_CTRL_RD_WAIT_CTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_BLK_GAP_CTRL_CONT_REQ_AHB_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_SDIO_BLK_GAP_CTRL_CONT_REQ_AHB_SHIFT 1
+#define IPBGCSFLSHNTWK_SDIO_BLK_GAP_CTRL_CONT_REQ_AHB_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_BLK_GAP_CTRL_CONT_REQ_AHB_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_BLK_GAP_CTRL_STOP_AT_BLK_GAP_REQ_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_BLK_GAP_CTRL_STOP_AT_BLK_GAP_REQ_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_BLK_GAP_CTRL_STOP_AT_BLK_GAP_REQ_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_BLK_GAP_CTRL_STOP_AT_BLK_GAP_REQ_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_WAKE_UP_CTRL_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x502b)
+#define IPBGCSFLSHNTWK_SDIO_WAKE_UP_CTRL_PME_EVENT3_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_SDIO_WAKE_UP_CTRL_PME_EVENT3_SHIFT 2
+#define IPBGCSFLSHNTWK_SDIO_WAKE_UP_CTRL_PME_EVENT3_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_WAKE_UP_CTRL_PME_EVENT3_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_WAKE_UP_CTRL_PME_EVENT2_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_SDIO_WAKE_UP_CTRL_PME_EVENT2_SHIFT 1
+#define IPBGCSFLSHNTWK_SDIO_WAKE_UP_CTRL_PME_EVENT2_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_WAKE_UP_CTRL_PME_EVENT2_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_WAKE_UP_CTRL_PME_EVENT1_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_WAKE_UP_CTRL_PME_EVENT1_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_WAKE_UP_CTRL_PME_EVENT1_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_WAKE_UP_CTRL_PME_EVENT1_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CLK_CTRL_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x502c)
+#define IPBGCSFLSHNTWK_SDIO_CLK_CTRL_SDCLK_FREQ_SEL_RW (0x07f << 8)
+#define IPBGCSFLSHNTWK_SDIO_CLK_CTRL_SDCLK_FREQ_SEL_SHIFT 8
+#define IPBGCSFLSHNTWK_SDIO_CLK_CTRL_SD_CLK_EN_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_SDIO_CLK_CTRL_SD_CLK_EN_SHIFT 2
+#define IPBGCSFLSHNTWK_SDIO_CLK_CTRL_SD_CLK_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CLK_CTRL_SD_CLK_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CLK_CTRL_INT_CLK_STABLE_AHB_R (0x01 << 1)
+#define IPBGCSFLSHNTWK_SDIO_CLK_CTRL_INT_CLK_STABLE_AHB_SHIFT 1
+#define IPBGCSFLSHNTWK_SDIO_CLK_CTRL_INT_CLK_STABLE_AHB_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CLK_CTRL_INT_CLK_STABLE_AHB_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CLK_CTRL_INT_CLK_ENABLE_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_CLK_CTRL_INT_CLK_ENABLE_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_CLK_CTRL_INT_CLK_ENABLE_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CLK_CTRL_INT_CLK_ENABLE_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x502e)
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_RW (0x0f << 0)
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_VAL2 0x02
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_VAL3 0x03
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_VAL4 0x04
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_VAL5 0x05
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_VAL6 0x06
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_VAL7 0x07
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_VAL8 0x08
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_VAL9 0x09
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_VAL10 0x0a
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_VAL11 0x0b
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_VAL12 0x0c
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_VAL13 0x0d
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_VAL14 0x0e
+#define IPBGCSFLSHNTWK_SDIO_TIMEOUT_CTRL_DATA_TIMEOUT_CNT_VAL15 0x0f
+#define IPBGCSFLSHNTWK_SDIO_SOFTWARE_RST_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x502f)
+#define IPBGCSFLSHNTWK_SDIO_SOFTWARE_RST_SOFT_RST_DAT_AHB_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_SDIO_SOFTWARE_RST_SOFT_RST_DAT_AHB_SHIFT 2
+#define IPBGCSFLSHNTWK_SDIO_SOFTWARE_RST_SOFT_RST_DAT_AHB_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_SOFTWARE_RST_SOFT_RST_DAT_AHB_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_SOFTWARE_RST_SOFT_RST_CMD_AHB_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_SDIO_SOFTWARE_RST_SOFT_RST_CMD_AHB_SHIFT 1
+#define IPBGCSFLSHNTWK_SDIO_SOFTWARE_RST_SOFT_RST_CMD_AHB_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_SOFTWARE_RST_SOFT_RST_CMD_AHB_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_SOFTWARE_RST_SOFT_RST_ALL_AHB_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_SOFTWARE_RST_SOFT_RST_ALL_AHB_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_SOFTWARE_RST_SOFT_RST_ALL_AHB_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_SOFTWARE_RST_SOFT_RST_ALL_AHB_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_REG_REG	(IPBGCSFLSHNTWK_BASE + 0x5030)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ERROR_INT_STS_R (0x01 << 15)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ERROR_INT_STS_SHIFT 15
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ERROR_INT_STS_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ERROR_INT_STS_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_BOOT_TERMINATE_REG_R (0x01 << 10)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_BOOT_TERMINATE_REG_SHIFT 10
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_BOOT_TERMINATE_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_BOOT_TERMINATE_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_BOOT_ACK_RCV_REG_R (0x01 << 9)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_BOOT_ACK_RCV_REG_SHIFT 9
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_BOOT_ACK_RCV_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_BOOT_ACK_RCV_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_CARD_INT_REG_R (0x01 << 8)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_CARD_INT_REG_SHIFT 8
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_CARD_INT_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_CARD_INT_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_CARD_REMOVAL_REG_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_CARD_REMOVAL_REG_SHIFT 7
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_CARD_REMOVAL_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_CARD_REMOVAL_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_CARD_INSERTED_REG_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_CARD_INSERTED_REG_SHIFT 6
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_CARD_INSERTED_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_CARD_INSERTED_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_BUFF_RD_RDY_REG_RW (0x01 << 5)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_BUFF_RD_RDY_REG_SHIFT 5
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_BUFF_RD_RDY_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_BUFF_RD_RDY_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_BUFF_WR_RDY_REG_RW (0x01 << 4)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_BUFF_WR_RDY_REG_SHIFT 4
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_BUFF_WR_RDY_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_BUFF_WR_RDY_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_DMA_INT_REG_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_DMA_INT_REG_SHIFT 3
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_DMA_INT_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_DMA_INT_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_SIG_BLKGAP_EVENT_REG_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_SIG_BLKGAP_EVENT_REG_SHIFT 2
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_SIG_BLKGAP_EVENT_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_SIG_BLKGAP_EVENT_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_TRANS_COMP_REG_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_TRANS_COMP_REG_SHIFT 1
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_TRANS_COMP_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_TRANS_COMP_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_SIG_CMD_COMP_REG_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_SIG_CMD_COMP_REG_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_SIG_CMD_COMP_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_SIG_CMD_COMP_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x5032)
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_VENDOR_SPECIFIC_ERR_R (0x01 << 14)
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_VENDOR_SPECIFIC_ERR_SHIFT 14
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_VENDOR_SPECIFIC_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_VENDOR_SPECIFIC_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_ERROR_CEATA_ERR_REG_RW (0x01 << 13)
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_ERROR_CEATA_ERR_REG_SHIFT 13
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_ERROR_CEATA_ERR_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_ERROR_CEATA_ERR_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_ERROR_AHB_ERR_REG_RW (0x01 << 12)
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_ERROR_AHB_ERR_REG_SHIFT 12
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_ERROR_AHB_ERR_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_ERROR_AHB_ERR_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_ADMA_ERR_REG_RW (0x01 << 9)
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_ADMA_ERR_REG_SHIFT 9
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_ADMA_ERR_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_ADMA_ERR_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_AUTO_CMD12_ERR_REG_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_AUTO_CMD12_ERR_REG_SHIFT 8
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_AUTO_CMD12_ERR_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_AUTO_CMD12_ERR_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CURLIMIT_ERR_REG_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CURLIMIT_ERR_REG_SHIFT 7
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CURLIMIT_ERR_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CURLIMIT_ERR_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_DATA_END_BIT_ERR_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_DATA_END_BIT_ERR_SHIFT 6
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_DATA_END_BIT_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_DATA_END_BIT_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_DATA_CRC_ERR_REG_RW (0x01 << 5)
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_DATA_CRC_ERR_REG_SHIFT 5
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_DATA_CRC_ERR_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_DATA_CRC_ERR_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_DATA_TIMEOUT_ERR_RW (0x01 << 4)
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_DATA_TIMEOUT_ERR_SHIFT 4
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_DATA_TIMEOUT_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_DATA_TIMEOUT_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CMD_INDEX_ERR_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CMD_INDEX_ERR_SHIFT 3
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CMD_INDEX_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CMD_INDEX_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CMD_END_BIT_ERR_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CMD_END_BIT_ERR_SHIFT 2
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CMD_END_BIT_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CMD_END_BIT_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CMD_CRC_ERR_REG_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CMD_CRC_ERR_REG_SHIFT 1
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CMD_CRC_ERR_REG_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CMD_CRC_ERR_REG_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CMD_TIMEOUT_ERR_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CMD_TIMEOUT_ERR_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CMD_TIMEOUT_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERROR_INTR_STATUS_SIG_CMD_TIMEOUT_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x5034)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_FIXED_TO_0_R (0x01 << 15)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_FIXED_TO_0_SHIFT 15
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_FIXED_TO_0_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_FIXED_TO_0_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BOOT_TERMINATE_INTR_EN_R (0x01 << 10)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BOOT_TERMINATE_INTR_EN_SHIFT 10
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BOOT_TERMINATE_INTR_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BOOT_TERMINATE_INTR_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BOOT_ACK_RCV_EN_R (0x01 << 9)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BOOT_ACK_RCV_EN_SHIFT 9
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BOOT_ACK_RCV_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BOOT_ACK_RCV_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_CARD_INTR_STATUS_EN_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_CARD_INTR_STATUS_EN_SHIFT 8
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_CARD_INTR_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_CARD_INTR_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_CARD_REMOVAL_STATUS_EN_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_CARD_REMOVAL_STATUS_EN_SHIFT 7
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_CARD_REMOVAL_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_CARD_REMOVAL_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_CARD_INSERTION_STATUS_EN_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_CARD_INSERTION_STATUS_EN_SHIFT 6
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_CARD_INSERTION_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_CARD_INSERTION_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BUFF_RD_RDY_STATUS_EN_RW (0x01 << 5)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BUFF_RD_RDY_STATUS_EN_SHIFT 5
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BUFF_RD_RDY_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BUFF_RD_RDY_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BUFF_WR_RDY_STATUS_EN_RW (0x01 << 4)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BUFF_WR_RDY_STATUS_EN_SHIFT 4
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BUFF_WR_RDY_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BUFF_WR_RDY_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_DMA_INTR_STATUS_EN_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_DMA_INTR_STATUS_EN_SHIFT 3
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_DMA_INTR_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_DMA_INTR_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BLK_GAP_EVENT_STATUS_EN_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BLK_GAP_EVENT_STATUS_EN_SHIFT 2
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BLK_GAP_EVENT_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_BLK_GAP_EVENT_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_TRANSFER_COMPLETE_STATUS_EN_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_TRANSFER_COMPLETE_STATUS_EN_SHIFT 1
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_TRANSFER_COMPLETE_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_TRANSFER_COMPLETE_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_CMD_COMPLETE_STATUS_EN_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_CMD_COMPLETE_STATUS_EN_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_CMD_COMPLETE_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_STATUS_ENABLE_CMD_COMPLETE_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_REG_REG	(IPBGCSFLSHNTWK_BASE + 0x5036)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_VENDOR_SPECIFIC_ERR_STATUS_EN_R (0x01 << 14)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_VENDOR_SPECIFIC_ERR_STATUS_EN_SHIFT 14
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_VENDOR_SPECIFIC_ERR_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_VENDOR_SPECIFIC_ERR_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CEATE_ERR_STATUS_EN_RW (0x01 << 13)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CEATE_ERR_STATUS_EN_SHIFT 13
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CEATE_ERR_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CEATE_ERR_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_TARGET_RESP_ERR_STATUS_EN_RW (0x01 << 12)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_TARGET_RESP_ERR_STATUS_EN_SHIFT 12
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_TARGET_RESP_ERR_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_TARGET_RESP_ERR_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_ADMA_ERR_STATUS_EN_RW (0x01 << 9)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_ADMA_ERR_STATUS_EN_SHIFT 9
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_ADMA_ERR_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_ADMA_ERR_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_AUTO_CMD12_ERR_STATUS_EN_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_AUTO_CMD12_ERR_STATUS_EN_SHIFT 8
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_AUTO_CMD12_ERR_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_AUTO_CMD12_ERR_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CURRENT_LIMIT_ERR_STATUS_EN_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CURRENT_LIMIT_ERR_STATUS_EN_SHIFT 7
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CURRENT_LIMIT_ERR_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CURRENT_LIMIT_ERR_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_DATA_ENDBIT_ERR_STATUS_EN_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_DATA_ENDBIT_ERR_STATUS_EN_SHIFT 6
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_DATA_ENDBIT_ERR_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_DATA_ENDBIT_ERR_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_DATA_CRC_ERR_STATUS_EN_RW (0x01 << 5)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_DATA_CRC_ERR_STATUS_EN_SHIFT 5
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_DATA_CRC_ERR_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_DATA_CRC_ERR_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_DATA_TIMEOUT_ERR_STATUS_EN_RW (0x01 << 4)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_DATA_TIMEOUT_ERR_STATUS_EN_SHIFT 4
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_DATA_TIMEOUT_ERR_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_DATA_TIMEOUT_ERR_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CMD_INDEX_ERR_STATUS_EN_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CMD_INDEX_ERR_STATUS_EN_SHIFT 3
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CMD_INDEX_ERR_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CMD_INDEX_ERR_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CMD_ENDBIT_ERR_STATUS_EN_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CMD_ENDBIT_ERR_STATUS_EN_SHIFT 2
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CMD_ENDBIT_ERR_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CMD_ENDBIT_ERR_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CMD_CRC_ERR_STATUS_EN_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CMD_CRC_ERR_STATUS_EN_SHIFT 1
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CMD_CRC_ERR_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CMD_CRC_ERR_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CMD_TIMEOUT_ERR_STATUS_EN_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CMD_TIMEOUT_ERR_STATUS_EN_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CMD_TIMEOUT_ERR_STATUS_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_STATUS_ENABLE_CMD_TIMEOUT_ERR_STATUS_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_REG_REG	(IPBGCSFLSHNTWK_BASE + 0x5038)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_FIXED_TO_0_R (0x01 << 15)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_FIXED_TO_0_SHIFT 15
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_FIXED_TO_0_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_FIXED_TO_0_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BOOT_TERMINATE_INTR_SIG_EN_R (0x01 << 10)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BOOT_TERMINATE_INTR_SIG_EN_SHIFT 10
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BOOT_TERMINATE_INTR_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BOOT_TERMINATE_INTR_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BOOT_ACK_RCV_SIG_EN_R (0x01 << 9)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BOOT_ACK_RCV_SIG_EN_SHIFT 9
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BOOT_ACK_RCV_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BOOT_ACK_RCV_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_CARD_INTR_SIG_EN_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_CARD_INTR_SIG_EN_SHIFT 8
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_CARD_INTR_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_CARD_INTR_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_CARD_REMOVAL_SIG_EN_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_CARD_REMOVAL_SIG_EN_SHIFT 7
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_CARD_REMOVAL_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_CARD_REMOVAL_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_CARD_INSERTION_SIG_EN_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_CARD_INSERTION_SIG_EN_SHIFT 6
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_CARD_INSERTION_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_CARD_INSERTION_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BUFF_RD_RDY_SIG_EN_RW (0x01 << 5)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BUFF_RD_RDY_SIG_EN_SHIFT 5
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BUFF_RD_RDY_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BUFF_RD_RDY_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BUFF_WR_RDY_SIG_EN_RW (0x01 << 4)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BUFF_WR_RDY_SIG_EN_SHIFT 4
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BUFF_WR_RDY_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BUFF_WR_RDY_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_DMA_INTR_SIG_EN_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_DMA_INTR_SIG_EN_SHIFT 3
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_DMA_INTR_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_DMA_INTR_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BLK_GAP_EVENT_SIG_EN_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BLK_GAP_EVENT_SIG_EN_SHIFT 2
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BLK_GAP_EVENT_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_BLK_GAP_EVENT_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_TRANSFER_CMP_SIG_EN_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_TRANSFER_CMP_SIG_EN_SHIFT 1
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_TRANSFER_CMP_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_TRANSFER_CMP_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_CMD_CMP_SIG_EN_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_CMD_CMP_SIG_EN_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_CMD_CMP_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_NORMAL_INTR_SIG_ENABLE_CMD_CMP_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x503a)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_VENDOR_SPECIFIC_ERR_SIG_EN_R (0x01 << 14)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_VENDOR_SPECIFIC_ERR_SIG_EN_SHIFT 14
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_VENDOR_SPECIFIC_ERR_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_VENDOR_SPECIFIC_ERR_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CEATA_ERR_SIG_EN_RW (0x01 << 13)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CEATA_ERR_SIG_EN_SHIFT 13
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CEATA_ERR_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CEATA_ERR_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_TARGET_RESP_ERR_SIG_EN_RW (0x01 << 12)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_TARGET_RESP_ERR_SIG_EN_SHIFT 12
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_TARGET_RESP_ERR_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_TARGET_RESP_ERR_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_ADMA_ERR_SIG_EN_RW (0x01 << 9)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_ADMA_ERR_SIG_EN_SHIFT 9
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_ADMA_ERR_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_ADMA_ERR_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_AUTO_CMD12_ERR_SIG_EN_RW (0x01 << 8)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_AUTO_CMD12_ERR_SIG_EN_SHIFT 8
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_AUTO_CMD12_ERR_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_AUTO_CMD12_ERR_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CURRENT_LIMIT_ERR_SIG_EN_RW (0x01 << 7)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CURRENT_LIMIT_ERR_SIG_EN_SHIFT 7
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CURRENT_LIMIT_ERR_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CURRENT_LIMIT_ERR_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_DATA_ENDBIT_ERR_SIG_EN_RW (0x01 << 6)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_DATA_ENDBIT_ERR_SIG_EN_SHIFT 6
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_DATA_ENDBIT_ERR_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_DATA_ENDBIT_ERR_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_DATA_CRC_ERR_SIG_EN_RW (0x01 << 5)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_DATA_CRC_ERR_SIG_EN_SHIFT 5
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_DATA_CRC_ERR_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_DATA_CRC_ERR_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_DATA_TIMEOUT_ERR_SIG_EN_RW (0x01 << 4)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_DATA_TIMEOUT_ERR_SIG_EN_SHIFT 4
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_DATA_TIMEOUT_ERR_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_DATA_TIMEOUT_ERR_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CMD_INDEX_ERR_SIG_EN_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CMD_INDEX_ERR_SIG_EN_SHIFT 3
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CMD_INDEX_ERR_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CMD_INDEX_ERR_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CMD_ENDBIT_ERR_SIG_EN_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CMD_ENDBIT_ERR_SIG_EN_SHIFT 2
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CMD_ENDBIT_ERR_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CMD_ENDBIT_ERR_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CMD_CRC_ERR_SIG_EN_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CMD_CRC_ERR_SIG_EN_SHIFT 1
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CMD_CRC_ERR_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CMD_CRC_ERR_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CMD_TIMEOUT_ERR_SIG_EN_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CMD_TIMEOUT_ERR_SIG_EN_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CMD_TIMEOUT_ERR_SIG_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ERR_INTR_SIG_ENABLE_CMD_TIMEOUT_ERR_SIG_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x503c)
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_CMDNOT_ISS_CMD12_ERR_R (0x01 << 7)
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_CMDNOT_ISS_CMD12_ERR_SHIFT 7
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_CMDNOT_ISS_CMD12_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_CMDNOT_ISS_CMD12_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_INDEX_ERR_R (0x01 << 4)
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_INDEX_ERR_SHIFT 4
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_INDEX_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_INDEX_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_END_ERR_R (0x01 << 3)
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_END_ERR_SHIFT 3
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_END_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_END_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_CRC_ERR_R (0x01 << 2)
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_CRC_ERR_SHIFT 2
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_CRC_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_CRC_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_TOUT_ERR_R (0x01 << 1)
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_TOUT_ERR_SHIFT 1
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_TOUT_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_TOUT_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_NOT_EXEC_R (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_NOT_EXEC_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_NOT_EXEC_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_AUTO_CMD12_ERR_STATUS_ACMD12_NOT_EXEC_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x5040)
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_SPI_BLK_MODE_R (0x01 << 30)
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_SPI_BLK_MODE_SHIFT 30
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_SPI_BLK_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_SPI_BLK_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_SPI_MODE_R (0x01 << 29)
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_SPI_MODE_SHIFT 29
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_SPI_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_SPI_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_BIT_64_SYS_BUS_SUPPORT_R (0x01 << 28)
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_BIT_64_SYS_BUS_SUPPORT_SHIFT 28
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_BIT_64_SYS_BUS_SUPPORT_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_BIT_64_SYS_BUS_SUPPORT_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_INTR_MODE_R (0x01 << 27)
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_INTR_MODE_SHIFT 27
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_INTR_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_INTR_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_VOLT_SUPPORT_1_8_R (0x01 << 26)
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_VOLT_SUPPORT_1_8_SHIFT 26
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_VOLT_SUPPORT_1_8_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_VOLT_SUPPORT_1_8_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_VOLT_SUPPORT_3_0_R (0x01 << 25)
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_VOLT_SUPPORT_3_0_SHIFT 25
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_VOLT_SUPPORT_3_0_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_VOLT_SUPPORT_3_0_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_VOLT_SUPPORT_3_3_R (0x01 << 24)
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_VOLT_SUPPORT_3_3_SHIFT 24
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_VOLT_SUPPORT_3_3_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_VOLT_SUPPORT_3_3_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_SUSPEND_RESUME_SUPPORT_R (0x01 << 23)
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_SUSPEND_RESUME_SUPPORT_SHIFT 23
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_SUSPEND_RESUME_SUPPORT_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_SUSPEND_RESUME_SUPPORT_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_SDMA_SUPPORT_R (0x01 << 22)
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_SDMA_SUPPORT_SHIFT 22
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_SDMA_SUPPORT_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_SDMA_SUPPORT_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_HIGH_SPEED_SUPPORT_R (0x01 << 21)
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_HIGH_SPEED_SUPPORT_SHIFT 21
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_HIGH_SPEED_SUPPORT_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_HIGH_SPEED_SUPPORT_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_ADMA2_SUPPORT_R (0x01 << 19)
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_ADMA2_SUPPORT_SHIFT 19
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_ADMA2_SUPPORT_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_ADMA2_SUPPORT_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_EXTD_MEDIA_BUS_SUPPORT_R (0x01 << 18)
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_EXTD_MEDIA_BUS_SUPPORT_SHIFT 18
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_EXTD_MEDIA_BUS_SUPPORT_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_EXTD_MEDIA_BUS_SUPPORT_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_MAX_BLK_LEN_R (0x01 << 16)
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_MAX_BLK_LEN_SHIFT 16
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_MAX_BLK_LEN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_MAX_BLK_LEN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_BASE_CLK_FREQ_R (0x01f << 8)
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_BASE_CLK_FREQ_SHIFT 8
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_TOUT_CLK_UNIT_R (0x01 << 7)
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_TOUT_CLK_UNIT_SHIFT 7
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_TOUT_CLK_UNIT_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_TOUT_CLK_UNIT_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_TOUT_CLK_FREQ_R (0x03f << 0)
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_TOUT_CLK_FREQ_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_CAPABILITIES_REG_RSV_REG  (IPBGCSFLSHNTWK_BASE + 0x5044)
+#define IPBGCSFLSHNTWK_SDIO_MAX_CURR_CAP_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x5048)
+#define IPBGCSFLSHNTWK_SDIO_MAX_CURR_CAP_MAX_CURR_FOR_1_8_R (0x07f << 16)
+#define IPBGCSFLSHNTWK_SDIO_MAX_CURR_CAP_MAX_CURR_FOR_1_8_SHIFT 16
+#define IPBGCSFLSHNTWK_SDIO_MAX_CURR_CAP_MAX_CURR_FOR_3_0_R (0x07f << 8)
+#define IPBGCSFLSHNTWK_SDIO_MAX_CURR_CAP_MAX_CURR_FOR_3_0_SHIFT 8
+#define IPBGCSFLSHNTWK_SDIO_MAX_CURR_CAP_MAX_CURR_FOR_3_3_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_SDIO_MAX_CURR_CAP_MAX_CURR_FOR_3_3_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_MAX_CURR_CAP_REG_RSV_REG  (IPBGCSFLSHNTWK_BASE + 0x504c)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_REG  (IPBGCSFLSHNTWK_BASE + 0x5050)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_CMDNOT_ISS_CMD12_ERR_R (0x01 << 7)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_CMDNOT_ISS_CMD12_ERR_SHIFT 7
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_CMDNOT_ISS_CMD12_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_CMDNOT_ISS_CMD12_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_INDEX_ERR_R (0x01 << 4)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_INDEX_ERR_SHIFT 4
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_INDEX_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_INDEX_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_END_ERR_R (0x01 << 3)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_END_ERR_SHIFT 3
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_END_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_END_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_CRC_ERR_R (0x01 << 2)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_CRC_ERR_SHIFT 2
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_CRC_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_CRC_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_TOUT_ERR_R (0x01 << 1)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_TOUT_ERR_SHIFT 1
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_TOUT_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_TOUT_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_NOT_EXEC_R (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_NOT_EXEC_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_NOT_EXEC_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_ACMD12_ERR_STS_FORCE_ACMD12_NOT_EXEC_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_REG_FOR_ERR_INTR_STATUS_REG  (IPBGCSFLSHNTWK_BASE + 0x5052)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_VENDOR_SPECIFIC_ERR_R (0x01 << 14)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_VENDOR_SPECIFIC_ERR_SHIFT 14
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_VENDOR_SPECIFIC_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_VENDOR_SPECIFIC_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CEATA_ERR_R (0x01 << 13)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CEATA_ERR_SHIFT 13
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CEATA_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CEATA_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_TARGET_RESP_ERR_R (0x01 << 12)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_TARGET_RESP_ERR_SHIFT 12
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_TARGET_RESP_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_TARGET_RESP_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_ADMA_ERR_R (0x01 << 9)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_ADMA_ERR_SHIFT 9
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_ADMA_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_ADMA_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_AUTO_CMD12_ERR_R (0x01 << 8)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_AUTO_CMD12_ERR_SHIFT 8
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_AUTO_CMD12_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_AUTO_CMD12_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CURR_LIMIT_ERR_R (0x01 << 7)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CURR_LIMIT_ERR_SHIFT 7
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CURR_LIMIT_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CURR_LIMIT_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_DATA_ENDBIT_ERR_R (0x01 << 6)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_DATA_ENDBIT_ERR_SHIFT 6
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_DATA_ENDBIT_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_DATA_ENDBIT_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_DATA_CRC_ERR_R (0x01 << 5)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_DATA_CRC_ERR_SHIFT 5
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_DATA_CRC_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_DATA_CRC_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_DATA_TIMEOUT_ERR_R (0x01 << 4)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_DATA_TIMEOUT_ERR_SHIFT 4
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_DATA_TIMEOUT_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_DATA_TIMEOUT_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CMD_INDEX_ERR_R (0x01 << 3)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CMD_INDEX_ERR_SHIFT 3
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CMD_INDEX_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CMD_INDEX_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CMD_ENDBIT_ERR_R (0x01 << 2)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CMD_ENDBIT_ERR_SHIFT 2
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CMD_ENDBIT_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CMD_ENDBIT_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CMD_CRC_ERR_R (0x01 << 1)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CMD_CRC_ERR_SHIFT 1
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CMD_CRC_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CMD_CRC_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CMD_TIMEOUT_ERR_R (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CMD_TIMEOUT_ERR_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CMD_TIMEOUT_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_FORCE_EVENT_FORCE_CMD_TIMEOUT_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ADMA_ERR_STATUS_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x5054)
+#define IPBGCSFLSHNTWK_SDIO_ADMA_ERR_STATUS_ADMA_LEN_ERR_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_SDIO_ADMA_ERR_STATUS_ADMA_LEN_ERR_SHIFT 2
+#define IPBGCSFLSHNTWK_SDIO_ADMA_ERR_STATUS_ADMA_LEN_ERR_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ADMA_ERR_STATUS_ADMA_LEN_ERR_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ADMA_ERR_STATUS_ADMA_ERR_STATE_RW (0x03 << 0)
+#define IPBGCSFLSHNTWK_SDIO_ADMA_ERR_STATUS_ADMA_ERR_STATE_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_ADMA_ERR_STATUS_ADMA_ERR_STATE_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_ADMA_ERR_STATUS_ADMA_ERR_STATE_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_ADMA_ERR_STATUS_ADMA_ERR_STATE_VAL2 0x02
+#define IPBGCSFLSHNTWK_SDIO_ADMA_ERR_STATUS_ADMA_ERR_STATE_VAL3 0x03
+#define IPBGCSFLSHNTWK_SDIO_ADMA_SYS_ADDRESS_REG_LSW_REG  (IPBGCSFLSHNTWK_BASE + 0x5058)
+#define IPBGCSFLSHNTWK_SDIO_ADMA_SYS_ADDRESS_ADMA_SYS_ADDR_LSW_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SDIO_ADMA_SYS_ADDRESS_ADMA_SYS_ADDR_LSW_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_ADMA_SYS_ADDRESS_REG_MSW_REG  (IPBGCSFLSHNTWK_BASE + 0x505c)
+#define IPBGCSFLSHNTWK_SDIO_ADMA_SYS_ADDRESS_ADMA_SYS_ADDR_MSW_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SDIO_ADMA_SYS_ADDRESS_ADMA_SYS_ADDR_MSW_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_BOOT_TIMEOUT_CNT_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x5060)
+#define IPBGCSFLSHNTWK_SDIO_BOOT_TIMEOUT_CNT_BOOT_DATA_TIMEOUT_COUNT_VAL_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_SDIO_BOOT_TIMEOUT_CNT_BOOT_DATA_TIMEOUT_COUNT_VAL_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_DEBUG_SEL_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x5064)
+#define IPBGCSFLSHNTWK_SDIO_DEBUG_SEL_DEBUG_SEL_R (0x01 << 0)
+#define IPBGCSFLSHNTWK_SDIO_DEBUG_SEL_DEBUG_SEL_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_DEBUG_SEL_DEBUG_SEL_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_DEBUG_SEL_DEBUG_SEL_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_SPI_INTR_SUPPORT_REG  (IPBGCSFLSHNTWK_BASE + 0x50f0)
+#define IPBGCSFLSHNTWK_SDIO_SPI_INTR_SUPPORT_SPI_INT_SUPPORT_RW (0x0ff << 0)
+#define IPBGCSFLSHNTWK_SDIO_SPI_INTR_SUPPORT_SPI_INT_SUPPORT_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_SLOT_INTR_STATUS_REG_REG  (IPBGCSFLSHNTWK_BASE + 0x50fc)
+#define IPBGCSFLSHNTWK_SDIO_SLOT_INTR_STATUS_INTR_SIG_FOR_EACH_SLOT_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_SDIO_SLOT_INTR_STATUS_INTR_SIG_FOR_EACH_SLOT_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_VER_REG  (IPBGCSFLSHNTWK_BASE + 0x50fe)
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_VER_VENDOR_VER_R (0x07f << 8)
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_VER_VENDOR_VER_SHIFT 8
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_VER_SPEC_VER_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_SDIO_HOST_CTRL_VER_SPEC_VER_SHIFT 0
+#define IPBGCSFLSHNTWK_GCS_MODE_REG  (IPBGCSFLSHNTWK_BASE + 0x6000)
+#define IPBGCSFLSHNTWK_GCS_MODE_SDIO_FORCE_SWITCH_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_GCS_MODE_SDIO_FORCE_SWITCH_SHIFT 2
+#define IPBGCSFLSHNTWK_GCS_MODE_SDIO_FORCE_SWITCH_VAL0 0x00
+#define IPBGCSFLSHNTWK_GCS_MODE_SDIO_FORCE_SWITCH_VAL1 0x01
+#define IPBGCSFLSHNTWK_GCS_MODE_SDIO_MULTIPLEXER_MODE_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_GCS_MODE_SDIO_MULTIPLEXER_MODE_SHIFT 1
+#define IPBGCSFLSHNTWK_GCS_MODE_SDIO_MULTIPLEXER_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_GCS_MODE_SDIO_MULTIPLEXER_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_GCS_MODE_GCS_CONTORL_MODE_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_GCS_MODE_GCS_CONTORL_MODE_SHIFT 0
+#define IPBGCSFLSHNTWK_GCS_MODE_GCS_CONTORL_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_GCS_MODE_GCS_CONTORL_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_PCI_CONFIG_REG  (IPBGCSFLSHNTWK_BASE + 0x6004)
+#define IPBGCSFLSHNTWK_PCI_CONFIG_PCI_MODE_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_PCI_CONFIG_PCI_MODE_SHIFT 0
+#define IPBGCSFLSHNTWK_PCI_CONFIG_PCI_MODE_VAL0 0x00
+#define IPBGCSFLSHNTWK_PCI_CONFIG_PCI_MODE_VAL1 0x01
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_REG  (IPBGCSFLSHNTWK_BASE + 0x6008)
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_EBI_STATUS_R (0x07 << 5)
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_EBI_STATUS_SHIFT 5
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_EBI_STATUS_VAL0 0x00
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_EBI_STATUS_VAL1 0x01
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_EBI_STATUS_VAL2 0x02
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_EBI_STATUS_VAL3 0x03
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_EBI_STATUS_VAL4 0x04
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_EBI_STATUS_VAL5 0x05
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_EBI_STATUS_VAL6 0x06
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_EBI_STATUS_VAL7 0x07
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_CONF_STRAP_SFC_RW (0x01 << 3)
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_CONF_STRAP_SFC_SHIFT 3
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_CONF_STRAP_SFC_VAL0 0x00
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_CONF_STRAP_SFC_VAL1 0x01
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_EN_BOOT_SFC_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_EN_BOOT_SFC_SHIFT 2
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_EN_BOOT_SFC_VAL0 0x00
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_EN_BOOT_SFC_VAL1 0x01
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_BE_SUPP_NAND_NOR_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_BE_SUPP_NAND_NOR_SHIFT 1
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_BE_SUPP_NAND_NOR_VAL0 0x00
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_BE_SUPP_NAND_NOR_VAL1 0x01
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_ADDR_REMAP_ENABLE_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_ADDR_REMAP_ENABLE_SHIFT 0
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_ADDR_REMAP_ENABLE_VAL0 0x00
+#define IPBGCSFLSHNTWK_FLASH_CONFIG_ADDR_REMAP_ENABLE_VAL1 0x01
+#define IPBGCSFLSHNTWK_AHB_DSCN_NOR_BASE_ADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x600c)
+#define IPBGCSFLSHNTWK_AHB_DSCN_NOR_BASE_ADDR_BASE_ADDR_RW (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_AHB_DSCN_NOR_BASE_ADDR_BASE_ADDR_SHIFT 12
+#define IPBGCSFLSHNTWK_AHB_DSCN_NOR_APERTURE_REG  (IPBGCSFLSHNTWK_BASE + 0x6010)
+#define IPBGCSFLSHNTWK_AHB_DSCN_NOR_APERTURE_APERT_RW (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_AHB_DSCN_NOR_APERTURE_APERT_SHIFT 12
+#define IPBGCSFLSHNTWK_AHB_DSCN_SFC_BASE_ADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x6014)
+#define IPBGCSFLSHNTWK_AHB_DSCN_SFC_BASE_ADDR_BASE_ADDR_RW (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_AHB_DSCN_SFC_BASE_ADDR_BASE_ADDR_SHIFT 12
+#define IPBGCSFLSHNTWK_AHB_DSCN_SFC_APERTURE_REG  (IPBGCSFLSHNTWK_BASE + 0x6018)
+#define IPBGCSFLSHNTWK_AHB_DSCN_SFC_APERTURE_APERT_RW (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_AHB_DSCN_SFC_APERTURE_APERT_SHIFT 12
+#define IPBGCSFLSHNTWK_AHB_DSCN_ISA_BASE_ADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x601c)
+#define IPBGCSFLSHNTWK_AHB_DSCN_ISA_BASE_ADDR_BASE_ADDR_RW (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_AHB_DSCN_ISA_BASE_ADDR_BASE_ADDR_SHIFT 12
+#define IPBGCSFLSHNTWK_AHB_DSCN_ISA_APERTURE_REG  (IPBGCSFLSHNTWK_BASE + 0x6020)
+#define IPBGCSFLSHNTWK_AHB_DSCN_ISA_APERTURE_APERT_RW (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_AHB_DSCN_ISA_APERTURE_APERT_SHIFT 12
+#define IPBGCSFLSHNTWK_AHB_DSCN_NOR_ADDR_REMAP_REG	(IPBGCSFLSHNTWK_BASE + 0x6024)
+#define IPBGCSFLSHNTWK_AHB_DSCN_NOR_ADDR_REMAP_APERT_RW (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_AHB_DSCN_NOR_ADDR_REMAP_APERT_SHIFT 12
+#define IPBGCSFLSHNTWK_AHB_DSCN_SFC_ADDR_REMAP_REG	(IPBGCSFLSHNTWK_BASE + 0x6028)
+#define IPBGCSFLSHNTWK_AHB_DSCN_SFC_ADDR_REMAP_APERT_RW (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_AHB_DSCN_SFC_ADDR_REMAP_APERT_SHIFT 12
+#define IPBGCSFLSHNTWK_AHB_DSCN_ISA_ADDR_REMAP_REG	(IPBGCSFLSHNTWK_BASE + 0x602c)
+#define IPBGCSFLSHNTWK_AHB_DSCN_ISA_ADDR_REMAP_APERT_RW (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_AHB_DSCN_ISA_ADDR_REMAP_APERT_SHIFT 12
+#define IPBGCSFLSHNTWK_AHB_DMA_NOR_BASE_ADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x6030)
+#define IPBGCSFLSHNTWK_AHB_DMA_NOR_BASE_ADDR_BASE_ADDR_RW (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_AHB_DMA_NOR_BASE_ADDR_BASE_ADDR_SHIFT 12
+#define IPBGCSFLSHNTWK_AHB_DMA_NOR_APERTURE_REG  (IPBGCSFLSHNTWK_BASE + 0x6034)
+#define IPBGCSFLSHNTWK_AHB_DMA_NOR_APERTURE_APERT_RW (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_AHB_DMA_NOR_APERTURE_APERT_SHIFT 12
+#define IPBGCSFLSHNTWK_AHB_DMA_NAND_BASE_ADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x6038)
+#define IPBGCSFLSHNTWK_AHB_DMA_NAND_BASE_ADDR_BASE_ADDR_RW (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_AHB_DMA_NAND_BASE_ADDR_BASE_ADDR_SHIFT 12
+#define IPBGCSFLSHNTWK_AHB_DMA_NAND_APERTURE_REG  (IPBGCSFLSHNTWK_BASE + 0x603c)
+#define IPBGCSFLSHNTWK_AHB_DMA_NAND_APERTURE_APERT_RW (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_AHB_DMA_NAND_APERTURE_APERT_SHIFT 12
+#define IPBGCSFLSHNTWK_AHB_DMA_SFC_BASE_ADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x6040)
+#define IPBGCSFLSHNTWK_AHB_DMA_SFC_BASE_ADDR_BASE_ADDR_RW (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_AHB_DMA_SFC_BASE_ADDR_BASE_ADDR_SHIFT 12
+#define IPBGCSFLSHNTWK_AHB_DMA_SFC_APERTURE_REG  (IPBGCSFLSHNTWK_BASE + 0x6044)
+#define IPBGCSFLSHNTWK_AHB_DMA_SFC_APERTURE_APERT_RW (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_AHB_DMA_SFC_APERTURE_APERT_SHIFT 12
+#define IPBGCSFLSHNTWK_AHB_DMA_ISA_BASE_ADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x6048)
+#define IPBGCSFLSHNTWK_AHB_DMA_ISA_BASE_ADDR_BASE_ADDR_RW (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_AHB_DMA_ISA_BASE_ADDR_BASE_ADDR_SHIFT 12
+#define IPBGCSFLSHNTWK_AHB_DMA_ISA_APERTURE_REG  (IPBGCSFLSHNTWK_BASE + 0x604c)
+#define IPBGCSFLSHNTWK_AHB_DMA_ISA_APERTURE_APERT_RW (0x07ffff << 12)
+#define IPBGCSFLSHNTWK_AHB_DMA_ISA_APERTURE_APERT_SHIFT 12
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_REG  (IPBGCSFLSHNTWK_BASE + 0x6050)
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS3_RW (0x03 << 9)
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS3_SHIFT 9
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS3_VAL0 0x00
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS3_VAL1 0x01
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS3_VAL2 0x02
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS3_VAL3 0x03
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS2_RW (0x03 << 6)
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS2_SHIFT 6
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS2_VAL0 0x00
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS2_VAL1 0x01
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS2_VAL2 0x02
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS2_VAL3 0x03
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS1_RW (0x03 << 3)
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS1_SHIFT 3
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS1_VAL0 0x00
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS1_VAL1 0x01
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS1_VAL2 0x02
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS1_VAL3 0x03
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS0_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS0_SHIFT 0
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS0_VAL0 0x00
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS0_VAL1 0x01
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS0_VAL2 0x02
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS0_VAL3 0x03
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS0_VAL4 0x04
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS0_VAL5 0x05
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS0_VAL6 0x06
+#define IPBGCSFLSHNTWK_NOR_CS_ROUTE_CS0_VAL7 0x07
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_REG  (IPBGCSFLSHNTWK_BASE + 0x6054)
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS3_RW (0x03 << 9)
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS3_SHIFT 9
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS3_VAL0 0x00
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS3_VAL1 0x01
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS3_VAL2 0x02
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS3_VAL3 0x03
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS2_RW (0x03 << 6)
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS2_SHIFT 6
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS2_VAL0 0x00
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS2_VAL1 0x01
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS2_VAL2 0x02
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS2_VAL3 0x03
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS1_RW (0x03 << 3)
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS1_SHIFT 3
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS1_VAL0 0x00
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS1_VAL1 0x01
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS1_VAL2 0x02
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS1_VAL3 0x03
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS0_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS0_SHIFT 0
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS0_VAL0 0x00
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS0_VAL1 0x01
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS0_VAL2 0x02
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS0_VAL3 0x03
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS0_VAL4 0x04
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS0_VAL5 0x05
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS0_VAL6 0x06
+#define IPBGCSFLSHNTWK_NAND_CS_ROUTE_CS0_VAL7 0x07
+#define IPBGCSFLSHNTWK_SFC_CS_ROUTE_REG  (IPBGCSFLSHNTWK_BASE + 0x6058)
+#define IPBGCSFLSHNTWK_SFC_CS_ROUTE_CS0_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_SFC_CS_ROUTE_CS0_SHIFT 0
+#define IPBGCSFLSHNTWK_SFC_CS_ROUTE_CS0_VAL0 0x00
+#define IPBGCSFLSHNTWK_SFC_CS_ROUTE_CS0_VAL1 0x01
+#define IPBGCSFLSHNTWK_SFC_CS_ROUTE_CS0_VAL2 0x02
+#define IPBGCSFLSHNTWK_SFC_CS_ROUTE_CS0_VAL3 0x03
+#define IPBGCSFLSHNTWK_SFC_CS_ROUTE_CS0_VAL4 0x04
+#define IPBGCSFLSHNTWK_SFC_CS_ROUTE_CS0_VAL5 0x05
+#define IPBGCSFLSHNTWK_SFC_CS_ROUTE_CS0_VAL6 0x06
+#define IPBGCSFLSHNTWK_SFC_CS_ROUTE_CS0_VAL7 0x07
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_REG  (IPBGCSFLSHNTWK_BASE + 0x605c)
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS3_RW (0x03 << 9)
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS3_SHIFT 9
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS3_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS3_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS3_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS3_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS2_RW (0x03 << 6)
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS2_SHIFT 6
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS2_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS2_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS2_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS2_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS1_RW (0x03 << 3)
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS1_SHIFT 3
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS1_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS1_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS1_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS1_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS0_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS0_SHIFT 0
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS0_VAL0 0x00
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS0_VAL1 0x01
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS0_VAL2 0x02
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS0_VAL3 0x03
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS0_VAL4 0x04
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS0_VAL5 0x05
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS0_VAL6 0x06
+#define IPBGCSFLSHNTWK_ISA_CS_ROUTE_CS0_VAL7 0x07
+#define IPBGCSFLSHNTWK_SDIO_CS_ROUTE_REG  (IPBGCSFLSHNTWK_BASE + 0x6060)
+#define IPBGCSFLSHNTWK_SDIO_CS_ROUTE_CS0_RW (0x07 << 0)
+#define IPBGCSFLSHNTWK_SDIO_CS_ROUTE_CS0_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_CS_ROUTE_CS0_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_CS_ROUTE_CS0_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_CS_ROUTE_CS0_VAL2 0x02
+#define IPBGCSFLSHNTWK_SDIO_CS_ROUTE_CS0_VAL3 0x03
+#define IPBGCSFLSHNTWK_SDIO_CS_ROUTE_CS0_VAL4 0x04
+#define IPBGCSFLSHNTWK_SDIO_CS_ROUTE_CS0_VAL5 0x05
+#define IPBGCSFLSHNTWK_SDIO_CS_ROUTE_CS0_VAL6 0x06
+#define IPBGCSFLSHNTWK_SDIO_CS_ROUTE_CS0_VAL7 0x07
+#define IPBGCSFLSHNTWK_GCS_CLOCK_MUX_REG  (IPBGCSFLSHNTWK_BASE + 0x6064)
+#define IPBGCSFLSHNTWK_GCS_CLOCK_MUX_CLOCK_TYPE_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_GCS_CLOCK_MUX_CLOCK_TYPE_SHIFT 1
+#define IPBGCSFLSHNTWK_GCS_CLOCK_MUX_CLOCK_TYPE_VAL0 0x00
+#define IPBGCSFLSHNTWK_GCS_CLOCK_MUX_CLOCK_TYPE_VAL1 0x01
+#define IPBGCSFLSHNTWK_GCS_CLOCK_MUX_EN_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_GCS_CLOCK_MUX_EN_SHIFT 0
+#define IPBGCSFLSHNTWK_GCS_CLOCK_MUX_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_GCS_CLOCK_MUX_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_GCS_SDIO_CLOCK_MUX_REG  (IPBGCSFLSHNTWK_BASE + 0x6068)
+#define IPBGCSFLSHNTWK_GCS_SDIO_CLOCK_MUX_EN_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_GCS_SDIO_CLOCK_MUX_EN_SHIFT 0
+#define IPBGCSFLSHNTWK_GCS_SDIO_CLOCK_MUX_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_GCS_SDIO_CLOCK_MUX_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_HPROT_REG  (IPBGCSFLSHNTWK_BASE + 0x606c)
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_RW (0x0f << 0)
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_SHIFT 0
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_VAL0 0x00
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_VAL1 0x01
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_VAL2 0x02
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_VAL3 0x03
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_VAL4 0x04
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_VAL5 0x05
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_VAL6 0x06
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_VAL7 0x07
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_VAL8 0x08
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_VAL9 0x09
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_VAL10 0x0a
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_VAL11 0x0b
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_VAL12 0x0c
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_VAL13 0x0d
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_VAL14 0x0e
+#define IPBGCSFLSHNTWK_SDIO_HPROT_EN_VAL15 0x0f
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_REG  (IPBGCSFLSHNTWK_BASE + 0x6ffc)
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MODULE_ID_R (0x07fff << 16)
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MODULE_ID_SHIFT 16
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MAJOR_REVISION_R (0x07 << 12)
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MAJOR_REVISION_SHIFT 12
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MAJOR_REVISION_VAL0 0x00
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MAJOR_REVISION_VAL1 0x01
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MAJOR_REVISION_VAL2 0x02
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MAJOR_REVISION_VAL3 0x03
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MAJOR_REVISION_VAL4 0x04
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MAJOR_REVISION_VAL5 0x05
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MAJOR_REVISION_VAL6 0x06
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MAJOR_REVISION_VAL7 0x07
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MINOR_REVISION_R (0x07 << 8)
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MINOR_REVISION_SHIFT 8
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MINOR_REVISION_VAL0 0x00
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MINOR_REVISION_VAL1 0x01
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MINOR_REVISION_VAL2 0x02
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MINOR_REVISION_VAL3 0x03
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MINOR_REVISION_VAL4 0x04
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MINOR_REVISION_VAL5 0x05
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MINOR_REVISION_VAL6 0x06
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MINOR_REVISION_VAL7 0x07
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MOD_SIZE_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_GCS_MODULE_ID_MOD_SIZE_SHIFT 0
+
+
+
+#define PCI_REG_SETUP 0x0
+#define PCI_REG_SUBSYSTEM_ID 0x0
+#define PCI_REG_CFG_CMD_STAT 0x0
+
+
+
+#endif /* __IP2070GCS_H */
+
diff -Naur u-boot-2009.08/drivers/mtd/nor_old/Makefile u-boot-2009.08_alpha2/drivers/mtd/nor_old/Makefile
--- u-boot-2009.08/drivers/mtd/nor_old/Makefile	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor_old/Makefile	2009-12-18 11:58:05.000000000 -0600
@@ -0,0 +1,51 @@
+#
+# (C) Copyright 2006
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+include $(TOPDIR)/config.mk
+
+LIB	:= $(obj)libnor.a
+
+ifdef CONFIG_CMD_NOR
+COBJS-y += nor.o
+COBJS-y += ip2016nor.o
+COBJS-y += ip1902dmac.o
+COBJS-y += ip2070gcs.o
+endif
+
+COBJS	:= $(COBJS-y)
+SRCS	:= $(COBJS:.o=.c)
+OBJS	:= $(addprefix $(obj),$(COBJS))
+
+all:	$(LIB)
+
+$(LIB):	$(obj).depend $(OBJS)
+	$(AR) $(ARFLAGS) $@ $(OBJS)
+
+#########################################################################
+
+# defines $(obj).depend target
+include $(SRCTREE)/rules.mk
+
+sinclude $(obj).depend
+
+#########################################################################
diff -Naur u-boot-2009.08/drivers/mtd/nor_old/Makefile~ u-boot-2009.08_alpha2/drivers/mtd/nor_old/Makefile~
--- u-boot-2009.08/drivers/mtd/nor_old/Makefile~	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor_old/Makefile~	2009-12-18 11:58:05.000000000 -0600
@@ -0,0 +1,51 @@
+#
+# (C) Copyright 2006
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+include $(TOPDIR)/config.mk
+
+LIB	:= $(obj)libnor.a
+
+ifdef CONFIG_CMD_NOR
+COBJS-y += nor.o
+COBJS-y += ip2016nor.o
+COBJS-y += ip1902dmac.o
+COBJS-y += ip2070gcs.o
+endif
+
+COBJS	:= $(COBJS-y)
+SRCS	:= $(COBJS:.o=.c)
+OBJS	:= $(addprefix $(obj),$(COBJS))
+
+all:	$(LIB)
+
+$(LIB):	$(obj).depend $(OBJS)
+	$(AR) $(ARFLAGS) $@ $(OBJS)
+
+#########################################################################
+
+# defines $(obj).depend target
+include $(SRCTREE)/rules.mk
+
+sinclude $(obj).depend
+
+#########################################################################
diff -Naur u-boot-2009.08/drivers/mtd/nor_old/nor.c u-boot-2009.08_alpha2/drivers/mtd/nor_old/nor.c
--- u-boot-2009.08/drivers/mtd/nor_old/nor.c	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/mtd/nor_old/nor.c	2009-12-18 11:58:05.000000000 -0600
@@ -0,0 +1,131 @@
+/*
+#===========================================================
+#        COPYRIGHT (c) NXP B.V. 2009
+#        All rights are reserved. Reproduction in whole or in part is
+#        prohibited without the written consent of the copyright owner.
+#
+#        Author   : Makarand Pawagi
+#
+#        Filename : nor.c
+#
+#        Purpose  : NOR Support
+#===========================================================
+*/
+
+
+//#include "ip1902dmac.h"
+#include <common.h>
+#include "ip2070gcs.h"
+
+
+nor_info_t nor_info;
+
+typedef struct _nor_global_info {
+	devicetype_t  flashBootDev;
+	flashtype_t  flashtype;
+} nor_global_info ;
+
+nor_global_info gFlashInfo ;
+
+/********************************************************************/
+/*  find_boot_device                                                       */
+/*                                                                  */
+/*  PARAMETERS:                                                     */
+/*      eBootDev          OUT; flash device as shown by config straps                      */
+/*      eFlashtype        OUT; type of Flash device-- NAND, NOR or SFC                   */
+/*                                                                  */
+/*  DESCRIPTION:                                                    */
+/*      checks the config straps  and fuse bits to indicate boot device -- flash or UART    */
+/*                                                                  */
+/*  RETURNS:                                                        */
+/*                  RETCODE_BOOTDEV_FLASH                   */
+/*                  RETCODE_BOOTDEV_UART                      */
+/*                  RETCODE_BOOTDEV_INVALID                   */
+/********************************************************************/
+
+retcode_t find_boot_device(devicetype_t *eBootDev, flashtype_t *eFlashtype)
+{
+   retcode_t ret = RETCODE_BOOTDEV_FLASH;  /* default booting device is a Flash */
+   u_int32 lconfigstrapReg = INP32(RGU_CNFG_TRAPS_REG);
+
+   /* check config straps to see if UART boot over-ride is enabled  */
+   if (!(lconfigstrapReg & RGU_CNFG_TRAPS_BOOT_UART_SEL) )
+   {
+       /* Throw error and return ---- boot from uart not supported for micro-loader */
+       return RETCODE_BOOTDEV_UART;
+
+   }
+   
+   /* if the UART boot over-ride is NOT set 
+       check config straps and return the Flash type and the actual device type */
+   *eBootDev = (lconfigstrapReg & RGU_CNFG_TRAPS_BOOT_DEV_SEL)>> 1;
+   
+   if ((*eBootDev >NAND_x16_small_4cycle) && (*eBootDev <= NAND_x8_small_3cycle) && 
+       (*eBootDev !=PCI_DEV_BOOT) &&
+       (*eBootDev !=ARM_IN_RESET)
+      )
+   {
+      *eFlashtype = ip2017;
+   }
+   else if ((*eBootDev >=NOR_x8_21bit) && (*eBootDev <= NOR_x16_ADM) && *eBootDev !=ARM_IN_RESET2)
+   {
+      *eFlashtype = ip2016;
+   }
+   else if ((*eBootDev >=SPI_16bit) && (*eBootDev <= SPI_32bit))
+   {
+      *eFlashtype = sfc;
+   }
+   else
+   {
+       *eFlashtype = invalid_flash_IP;
+       ret = RETCODE_BOOTDEV_INVALID;
+   }
+
+   /* So there is a valid flash device indicated by config straps*/
+   if (RETCODE_BOOTDEV_FLASH == ret)
+   {
+      /* Throw info trace: Valid flash device selected */
+   }
+   
+   return ret;
+
+}
+
+
+int mtd_nor_read(struct mtd_info *mtd, loff_t from, size_t len, size_t *retlen, u_char *buf)
+{
+//	nx_nor_init (0) ;
+	nx_nor_init (gFlashInfo.flashBootDev) ;
+	
+//	nx_download_data_from_nor_flash((u_int32)from, buf, (u_int32)len, 2, 0) ;
+	nx_download_data_from_nor_flash((u_int32)from, buf, (u_int32)len, gFlashInfo.flashBootDev, gFlashInfo.flashtype) ;	
+}
+
+void nor_init(void)
+{
+	devicetype_t  eBootDev;
+	flashtype_t  eFlashtype;
+	retcode_t ret;
+
+	ret = find_boot_device(&eBootDev, &eFlashtype);
+	if (RETCODE_BOOTDEV_UART == ret)
+	{
+	  /* Throw error trace */	  
+	  puts("Invalid Boot Device .....NOR Init faild\r\n") ;	  
+	}
+	if (RETCODE_BOOTDEV_FLASH == ret)
+	{
+		puts("Boot Device NOR Flash\r\n") ;	
+		puts("\r Initializing the GCS\r\n") ;
+		nx_gcs_init(eBootDev, eFlashtype);	/* InitGCS */
+		/* TODO-Set up all the Flashes that are on the board */
+	}
+
+	gFlashInfo.flashBootDev = eBootDev ;
+	gFlashInfo.flashtype = eFlashtype ;
+
+	nor_info.read = mtd_nor_read ;
+	return ;
+}
+
+
diff -Naur u-boot-2009.08/drivers/net/lipp_6300eth/lipp_6300eth.c u-boot-2009.08_alpha2/drivers/net/lipp_6300eth/lipp_6300eth.c
--- u-boot-2009.08/drivers/net/lipp_6300eth/lipp_6300eth.c	2010-01-18 19:09:08.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/net/lipp_6300eth/lipp_6300eth.c	2009-12-21 21:01:14.000000000 -0600
@@ -220,13 +220,13 @@
     tmhwLIPP6100Eth_GetHWVersion(pPriv->hwUnitNo,&hwVersion);
 
     GMAC_DBG("HW Version:%08x\n",hwVersion);
-
+#if 1
     if(hwVersion != 0x2535U)
     {
         GMAC_DBG("Wrong Module ID, returning from initialization\n");
         return 0;
     }
-
+#endif
     ret_val = tmhwLIPP6100Eth_Init(pPriv->hwUnitNo);
 
     if(TM_OK !=  ret_val)
diff -Naur u-boot-2009.08/drivers/net/lipp_6300eth/tmbslPhyAccess.c u-boot-2009.08_alpha2/drivers/net/lipp_6300eth/tmbslPhyAccess.c
--- u-boot-2009.08/drivers/net/lipp_6300eth/tmbslPhyAccess.c	2010-01-18 19:09:08.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/net/lipp_6300eth/tmbslPhyAccess.c	2009-12-21 16:14:12.000000000 -0600
@@ -1,218 +1,336 @@
-/*
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
- *
- * Copyright (c) 2006-2007, LIPP Alliance
- *
- * All Rights Reserved.
- *
- *---------------------------------------------------------------------------
- * %filename:             tmbslPhyAccess.c %
- * %pid_version:             1.2                  %
- *---------------------------------------------------------------------------
- * DESCRIPTION:  PHY interface file for Linux Ethernet driver
- *
- * DOCUMENT REF: 
- *
- * NOTES:        This is to be updated if there is change in PHY hardware
- *               Appropriate APIs are to be repopulated in the array.
- *
- *-----------------------------------------------------------------------------
- *
-*/
-#include "tmbslPhy.h" /* tmbslPhyConfig_t declaration */
-#include "tmhwLIPP6100Eth_Cfg.h" /* For TMHWLIPP6100ETH_NUM_UNITS */
-
-/* lipp_6300eth_common.h has PHY macros definitions __USING_<phy name>_PHY__*/
-#include "lipp_6300eth_common.h" 
-
-#define LAN_CLK_SEL        0
-#define LAN_CLK_SPEED_SEL  0
-
-#ifdef __USING_SMSC8700_PHY__
-#include "tmbslPhySMSC8700.h" /* For function prototypes of PHY*/
-/* PHY interface structure to store PHY register access functions */    
- tmbslPhyConfig_t gtmbslPhyInterface[TMHWLIPP6100ETH_NUM_UNITS] = 
-{
-    {  "SMSC8700",
-        LAN_CLK_SEL,
-        LAN_CLK_SPEED_SEL,
-        tmbslPhySMSC8700GetSWVersion, 
-        tmbslPhySMSC8700GetCapabilities,
-        tmbslPhySMSC8700Init,
-        tmbslPhySMSC8700Deinit,  
-        tmbslPhySMSC8700SetPowerState,
-        tmbslPhySMSC8700GetPowerState,
-        tmbslPhySMSC8700GetBasicModeControl,
-        tmbslPhySMSC8700SetBasicModeControl,
-        tmbslPhySMSC8700GetBasicModeStatus,
-        tmbslPhySMSC8700AutoNegotiate,
-        Null,
-        Null,
-        Null,
-        Null,
-        Null,
-        Null,
-        Null,
-        tmbslPhySMSC8700LoopBack,
-        tmbslPhySMSC8700SoftReset,
-        tmbslPhySMSC8700GetLinkStatus
-    }
-
-};
-
-#endif
-
-#ifdef __USING_SMSC8710_PHY__
-#include "tmbslPhySMSC8710.h" /* For function prototypes of PHY*/
-/* PHY interface structure to store PHY register access functions */    
- tmbslPhyConfig_t gtmbslPhyInterface[TMHWLIPP6100ETH_NUM_UNITS] = 
-{
-    {  "SMSC8710",
-        LAN_CLK_SEL,
-        LAN_CLK_SPEED_SEL,
-        tmbslPhySMSC8710GetSWVersion, 
-        tmbslPhySMSC8710GetCapabilities,
-        tmbslPhySMSC8710Init,
-        tmbslPhySMSC8710Deinit,  
-        tmbslPhySMSC8710SetPowerState,
-        tmbslPhySMSC8710GetPowerState,
-        tmbslPhySMSC8710GetBasicModeControl,
-        tmbslPhySMSC8710SetBasicModeControl,
-        tmbslPhySMSC8710GetBasicModeStatus,
-        tmbslPhySMSC8710AutoNegotiate,
-        Null,
-        Null,
-        Null,
-        Null,
-        Null,
-        Null,
-        Null,
-        tmbslPhySMSC8710LoopBack,
-        tmbslPhySMSC8710SoftReset,
-        tmbslPhySMSC8710GetLinkStatus
-    }
-
-};
-
-#endif
-
-#ifdef  __USING_DP83848_PHY__
-#include "tmbslPhyDP83848.h"
-/* PHY interface structure to store PHY register access functions */    
- tmbslPhyConfig_t gtmbslPhyInterface[TMHWLIPP6100ETH_NUM_UNITS] = 
-{
-    {  "DP83848",
-        LAN_CLK_SEL,
-        LAN_CLK_SPEED_SEL,
-        tmbslPhyDP83848GetSWVersion, 
-        tmbslPhyDP83848GetCapabilities,
-        tmbslPhyDP83848Init,
-        tmbslPhyDP83848Deinit,  
-        tmbslPhyDP83848SetPowerState,
-        tmbslPhyDP83848GetPowerState,
-        tmbslPhyDP83848GetBasicModeControl,
-        tmbslPhyDP83848SetBasicModeControl,
-        tmbslPhyDP83848GetBasicModeStatus,
-        tmbslPhyDP83848AutoNegotiate,
-        Null,
-        Null,
-        Null,
-        Null,
-        Null,
-        Null,
-        Null,
-        tmbslPhyDP83848LoopBack,
-        tmbslPhyDP83848SoftReset,
-        tmbslPhyDP83848GetLinkStatus
-    }
-
-};
-
-#endif
-
-#ifdef __USING_DP83865_PHY__
-#include "tmbslPhyDP83865.h"
-/* PHY interface structure to store PHY register access functions */    
- tmbslPhyConfig_t gtmbslPhyInterface[TMHWLIPP6100ETH_NUM_UNITS] = 
-{
-    {  "DP83865",
-        LAN_CLK_SEL,
-        LAN_CLK_SPEED_SEL,
-        tmbslPhyDP83865GetSWVersion, 
-        tmbslPhyDP83865GetCapabilities,
-        tmbslPhyDP83865Init,
-        tmbslPhyDP83865Deinit,  
-        tmbslPhyDP83865SetPowerState,
-        tmbslPhyDP83865GetPowerState,
-        tmbslPhyDP83865GetBasicModeControl,
-        tmbslPhyDP83865SetBasicModeControl,
-        tmbslPhyDP83865GetBasicModeStatus,
-        tmbslPhyDP83865AutoNegotiate,
-        Null,
-        Null,
-        Null,
-        Null,
-        Null,
-        Null,
-        Null,
-        tmbslPhyDP83865LoopBack,
-        tmbslPhyDP83865SoftReset,
-        tmbslPhyDP83865GetLinkStatus
-    }
-
-};
-#endif
-
-#ifdef __USING_EMU_PHY__
-#include "tmbslPhyEmu.h"
-/* PHY interface structure to store PHY register access functions */    
- tmbslPhyConfig_t gtmbslPhyInterface[TMHWLIPP6100ETH_NUM_UNITS] = 
-{
-    {  "EMULATOR",
-        LAN_CLK_SEL,
-        LAN_CLK_SPEED_SEL,
-        tmbslPhyEmuGetSWVersion, 
-        tmbslPhyEmuGetCapabilities,
-        tmbslPhyEmuInit,
-        tmbslPhyEmuDeinit,  
-        tmbslPhyEmuSetPowerState,
-        tmbslPhyEmuGetPowerState,
-        tmbslPhyEmuGetBasicModeControl,
-        tmbslPhyEmuSetBasicModeControl,
-        tmbslPhyEmuGetBasicModeStatus,
-        tmbslPhyEmuAutoNegotiate,
-        Null,
-        Null,
-        Null,
-        Null,
-        Null,
-        Null,
-        Null,
-        tmbslPhyEmuLoopBack,
-        tmbslPhyEmuSoftReset,
-        tmbslPhyEmuGetLinkStatus
-    }
-
-};
-
-#endif
-
-
-void tmbslPhyGetInterface(int unitnumber, tmbslPhyConfig_t ** pPhyInterface)
-{
-     *(pPhyInterface) = &gtmbslPhyInterface[unitnumber];
-}
-
-
+/*
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ *
+ * Copyright (c) 2006-2007, LIPP Alliance
+ *
+ * All Rights Reserved.
+ *
+ *---------------------------------------------------------------------------
+ * %filename:             tmbslPhyAccess.c %
+ * %pid_version:             1.2                  %
+ *---------------------------------------------------------------------------
+ * DESCRIPTION:  PHY interface file for Linux Ethernet driver
+ *
+ * DOCUMENT REF:
+ *
+ * NOTES:        This is to be updated if there is change in PHY hardware
+ *               Appropriate APIs are to be repopulated in the array.
+ *
+ *-----------------------------------------------------------------------------
+ *
+*/
+#include "tmbslPhy.h"
+#include "tmhwLIPP6100Eth_Cfg.h"
+
+#define LAN_CLK_SEL        0
+#define LAN_CLK_SPEED_SEL  0
+
+#ifdef __USING_SMSC8700_PHY__
+#include "tmbslPhySMSC8700.h"
+/* PHY interface structure to store PHY register access functions */
+ tmbslPhyConfig_t gtmbslPhyInterface[TMHWLIPP6100ETH_NUM_UNITS] =
+{
+    {  "SMSC8700",
+        LAN_CLK_SEL,
+        LAN_CLK_SPEED_SEL,
+        tmbslPhySMSC8700GetSWVersion,
+        tmbslPhySMSC8700GetCapabilities,
+        tmbslPhySMSC8700Init,
+        tmbslPhySMSC8700Deinit,
+        tmbslPhySMSC8700SetPowerState,
+        tmbslPhySMSC8700GetPowerState,
+        tmbslPhySMSC8700GetBasicModeControl,
+        tmbslPhySMSC8700SetBasicModeControl,
+        tmbslPhySMSC8700GetBasicModeStatus,
+        tmbslPhySMSC8700AutoNegotiate,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        tmbslPhySMSC8700LoopBack,
+        tmbslPhySMSC8700SoftReset,
+        tmbslPhySMSC8700GetLinkStatus
+    }
+
+};
+
+#endif
+
+#ifdef __USING_SMSC8710_PHY__
+#include "tmbslPhySMSC8710.h"
+/* PHY interface structure to store PHY register access functions */
+ tmbslPhyConfig_t gtmbslPhyInterface[TMHWLIPP6100ETH_NUM_UNITS] =
+{
+    {  "SMSC8710",
+        LAN_CLK_SEL,
+        LAN_CLK_SPEED_SEL,
+        tmbslPhySMSC8710GetSWVersion,
+        tmbslPhySMSC8710GetCapabilities,
+        tmbslPhySMSC8710Init,
+        tmbslPhySMSC8710Deinit,
+        tmbslPhySMSC8710SetPowerState,
+        tmbslPhySMSC8710GetPowerState,
+        tmbslPhySMSC8710GetBasicModeControl,
+        tmbslPhySMSC8710SetBasicModeControl,
+        tmbslPhySMSC8710GetBasicModeStatus,
+        tmbslPhySMSC8710AutoNegotiate,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        tmbslPhySMSC8710LoopBack,
+        tmbslPhySMSC8710SoftReset,
+        tmbslPhySMSC8710GetLinkStatus
+    }
+
+};
+#endif
+
+#ifdef  __USING_DP83848_PHY__
+#include "tmbslPhyDP83848.h"
+/* PHY interface structure to store PHY register access functions */
+ tmbslPhyConfig_t gtmbslPhyInterface[TMHWLIPP6100ETH_NUM_UNITS] =
+{
+    {  "DP83848",
+        LAN_CLK_SEL,
+        LAN_CLK_SPEED_SEL,
+        tmbslPhyDP83848GetSWVersion,
+        tmbslPhyDP83848GetCapabilities,
+        tmbslPhyDP83848Init,
+        tmbslPhyDP83848Deinit,
+        tmbslPhyDP83848SetPowerState,
+        tmbslPhyDP83848GetPowerState,
+        tmbslPhyDP83848GetBasicModeControl,
+        tmbslPhyDP83848SetBasicModeControl,
+        tmbslPhyDP83848GetBasicModeStatus,
+        tmbslPhyDP83848AutoNegotiate,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        tmbslPhyDP83848LoopBack,
+        tmbslPhyDP83848SoftReset,
+        tmbslPhyDP83848GetLinkStatus
+    }
+
+};
+
+#endif
+
+#ifdef __USING_DP83865_PHY__
+#include "tmbslPhyDP83865.h"
+/* PHY interface structure to store PHY register access functions */
+ tmbslPhyConfig_t gtmbslPhyInterface[TMHWLIPP6100ETH_NUM_UNITS] =
+{
+    {  "DP83865",
+        LAN_CLK_SEL,
+        LAN_CLK_SPEED_SEL,
+        tmbslPhyDP83865GetSWVersion,
+        tmbslPhyDP83865GetCapabilities,
+        tmbslPhyDP83865Init,
+        tmbslPhyDP83865Deinit,
+        tmbslPhyDP83865SetPowerState,
+        tmbslPhyDP83865GetPowerState,
+        tmbslPhyDP83865GetBasicModeControl,
+        tmbslPhyDP83865SetBasicModeControl,
+        tmbslPhyDP83865GetBasicModeStatus,
+        tmbslPhyDP83865AutoNegotiate,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        tmbslPhyDP83865LoopBack,
+        tmbslPhyDP83865SoftReset,
+        tmbslPhyDP83865GetLinkStatus
+    }
+
+};
+
+#endif
+
+#ifdef __USING_MYSTIPHY110_PHY__
+#include "tmbslPhyMYSTI110E.h"
+/* PHY interface structure to store PHY register access functions */
+ tmbslPhyConfig_t gtmbslPhyInterface[TMHWLIPP6100ETH_NUM_UNITS] =
+{
+    {  "MYSTI",
+        LAN_CLK_SEL,
+        LAN_CLK_SPEED_SEL,
+        tmbslPhyMYSTI110EGetSWVersion,
+        tmbslPhyMYSTI110EGetCapabilities,
+        tmbslPhyMYSTI110EInit,
+        tmbslPhyMYSTI110EDeinit,
+        tmbslPhyMYSTI110ESetPowerState,
+        tmbslPhyMYSTI110EGetPowerState,
+        tmbslPhyMYSTI110EGetBasicModeControl,
+        tmbslPhyMYSTI110ESetBasicModeControl,
+        tmbslPhyMYSTI110EGetBasicModeStatus,
+        tmbslPhyMYSTI110EAutoNegotiate,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        tmbslPhyMYSTI110ELoopBack,
+        tmbslPhyMYSTI110ESoftReset,
+        tmbslPhyMYSTI110EGetLinkStatus
+    }
+};
+#endif
+
+#ifdef __USING_RTL8211_PHY__
+//#include "tmbslPhyRTL8211BN.h"
+/* PHY interface structure to store PHY register access functions */
+ tmbslPhyConfig_t gtmbslPhyInterface[TMHWLIPP6100ETH_NUM_UNITS] =
+{
+    {  "REALTEK",
+        LAN_CLK_SEL,
+        LAN_CLK_SPEED_SEL,
+        tmbslPhyRTL8211BNGetSWVersion,
+        tmbslPhyRTL8211BNGetCapabilities,
+        tmbslPhyRTL8211BNInit,
+        tmbslPhyRTL8211BNDeinit,
+        tmbslPhyRTL8211BNSetPowerState,
+        tmbslPhyRTL8211BNGetPowerState,
+        tmbslPhyRTL8211BNGetBasicModeControl,
+        tmbslPhyRTL8211BNSetBasicModeControl,
+        tmbslPhyRTL8211BNGetBasicModeStatus,
+        tmbslPhyRTL8211BNAutoNegotiate,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        tmbslPhyRTL8211BNLoopBack,
+        tmbslPhyRTL8211BNSoftReset,
+        tmbslPhyRTL8211BNGetLinkStatus
+    }
+};
+#endif
+
+#ifdef __USING_APOLLO_EMU_PHY__
+#include "tmbslPhyEmu.h"
+/* PHY interface structure to store PHY register access functions */
+ tmbslPhyConfig_t gtmbslPhyInterface[TMHWLIPP6100ETH_NUM_UNITS] =
+{
+    {  "EMULATOR",
+        LAN_CLK_SEL,
+        LAN_CLK_SPEED_SEL,
+        tmbslPhyEmuGetSWVersion,
+        tmbslPhyEmuGetCapabilities,
+        tmbslPhyEmuInit,
+        tmbslPhyEmuDeinit,
+        tmbslPhyEmuSetPowerState,
+        tmbslPhyEmuGetPowerState,
+        tmbslPhyEmuGetBasicModeControl,
+        tmbslPhyEmuSetBasicModeControl,
+        tmbslPhyEmuGetBasicModeStatus,
+        tmbslPhyEmuAutoNegotiate,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        tmbslPhyEmuLoopBack,
+        tmbslPhyEmuSoftReset,
+        tmbslPhyEmuGetLinkStatus
+    },
+	{  "EMULATOR",
+        LAN_CLK_SEL,
+        LAN_CLK_SPEED_SEL,
+        tmbslPhyEmuGetSWVersion,
+        tmbslPhyEmuGetCapabilities,
+        tmbslPhyEmuInit,
+        tmbslPhyEmuDeinit,
+        tmbslPhyEmuSetPowerState,
+        tmbslPhyEmuGetPowerState,
+        tmbslPhyEmuGetBasicModeControl,
+        tmbslPhyEmuSetBasicModeControl,
+        tmbslPhyEmuGetBasicModeStatus,
+        tmbslPhyEmuAutoNegotiate,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        tmbslPhyEmuLoopBack,
+        tmbslPhyEmuSoftReset,
+        tmbslPhyEmuGetLinkStatus
+    }
+
+};
+#endif
+
+#ifdef __USING_EMU_PHY__
+#include "tmbslPhyEmu.h"
+/* PHY interface structure to store PHY register access functions */
+ tmbslPhyConfig_t gtmbslPhyInterface[TMHWLIPP6100ETH_NUM_UNITS] =
+{
+    {  "EMULATOR",
+        LAN_CLK_SEL,
+        LAN_CLK_SPEED_SEL,
+        tmbslPhyEmuGetSWVersion,
+        tmbslPhyEmuGetCapabilities,
+        tmbslPhyEmuInit,
+        tmbslPhyEmuDeinit,
+        tmbslPhyEmuSetPowerState,
+        tmbslPhyEmuGetPowerState,
+        tmbslPhyEmuGetBasicModeControl,
+        tmbslPhyEmuSetBasicModeControl,
+        tmbslPhyEmuGetBasicModeStatus,
+        tmbslPhyEmuAutoNegotiate,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        Null,
+        tmbslPhyEmuLoopBack,
+        tmbslPhyEmuSoftReset,
+        tmbslPhyEmuGetLinkStatus
+    }
+
+};
+
+#endif
+
+
+void tmbslPhyGetInterface(int unitnumber, tmbslPhyConfig_t ** pPhyInterface)
+{
+     *(pPhyInterface) = &gtmbslPhyInterface[unitnumber];
+}
+
+
diff -Naur u-boot-2009.08/drivers/net/lipp_6300eth/tmbslPhy.c u-boot-2009.08_alpha2/drivers/net/lipp_6300eth/tmbslPhy.c
--- u-boot-2009.08/drivers/net/lipp_6300eth/tmbslPhy.c	2010-01-18 19:09:08.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/net/lipp_6300eth/tmbslPhy.c	2009-12-21 16:05:55.000000000 -0600
@@ -36,6 +36,15 @@
     #include "tmbslPhyEmu.c"    
     #endif
 
+    #ifdef CONFIG_USING_RTL8211_PHY
+    #include "tmbslPhyRTL8211BN.h"        
+    #include "tmbslPhyRTL8211BN.c"    
+    #endif
+
+    #ifdef CONFIG_USING_RTLMYSTI110E_PHY
+    #include "tmbslPhyRTLMYSTI110E.h"        
+    #include "tmbslPhyRTLMYSTI110E.c"    
+    #endif
     /* Files which are must for ethernet driver, utilizing 
     ** macros in config.h, tv55x.h
     */
diff -Naur u-boot-2009.08/drivers/net/lipp_6300eth/tmbslPhyMYSTI110E.c u-boot-2009.08_alpha2/drivers/net/lipp_6300eth/tmbslPhyMYSTI110E.c
--- u-boot-2009.08/drivers/net/lipp_6300eth/tmbslPhyMYSTI110E.c	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/net/lipp_6300eth/tmbslPhyMYSTI110E.c	2009-12-14 18:52:17.000000000 -0600
@@ -0,0 +1,1055 @@
+/*
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ *
+ * Copyright (c) 2009-2010, NXP Semiconductors
+ * All Rights Reserved.
+ *
+ *---------------------------------------------------------------------------
+ * %filename:     tmbslPhyMYSTI110E.c %
+ * %pid_version:           0.1                %
+ *---------------------------------------------------------------------------
+ * DESCRIPTION: API source file for MystiPHY110e PHY
+ *
+ * DOCUMENT REF: MystiPHY110e Core datasheet version 6.00
+ *
+ * NOTES:        None
+ *
+ *-----------------------------------------------------------------------------
+ *
+*/
+
+#include "tmNxTypes.h"
+#include "tmNxCompId.h"
+
+/*  Project include files */
+
+#include "tmbslPhy.h"
+#include "tmbslPhyMYSTI110E.h"
+#include "tmhwLIPP6100Eth_Cfg.h"
+
+/* Timeout in case of linux */
+#ifdef __LIPP_6300ETH__
+#include <linux/delay.h>
+#include "remap.h"
+#include <asm/io.h>
+#define AUTO_NEG_DELAY_MULTIPLIER (800)
+#endif
+
+/* Defines */
+#define PHY_UNIT_ID_COUNT  			1
+
+#define PHY_TIMEOUT                 (100000)
+
+#define ANAR_DEFAULT_VAL (0xDE1)
+
+/* Global Data */
+ /* Initialize with base address of GMAC. This will be used to access MAC Address & MAC data register */
+static tmbslPhyMYSTI110EContext_t gEthContext[PHY_UNIT_ID_COUNT];
+
+typedef	enum	_tmbslPhyMYSTI110EReg_t
+{
+    /* Basic mode control */
+    tmbslPhyMYSTI110EBmcr		      = 0x0,
+    /* Basic mode status */
+    tmbslPhyMYSTI110EBmsr		      =0x1,
+
+    /* PHY ID1 register */
+    tmbslPhyMYSTI110EPhyIdr1		=0x2,
+
+    /* PHY ID2 register */
+    tmbslPhyMYSTI110EPhyIdr2		=0x3,
+
+    /* Auto negotiation advertisement register */
+    tmbslPhyMYSTI110EAnar			=0x4,
+
+    /* Auto negotiation link partner ability register */
+    tmbslPhyMYSTI110EAnlpar		=0x5,
+
+    /* Auto negotiation expansion register */
+    tmbslPhyMYSTI110EAner			=0x6,
+
+    /* Auto negotiation next page transmit register */
+    tmbslPhyMYSTI110EAnnPtr		=0x7,
+
+    tmbslPhyMYSTI110EPhystsr = 0x1F,
+
+    /* 0x11 to 0x13 reserved */
+     /* False carrier sense counter register */
+    tmbslPhyMYSTI110EFcscr  = 0x14,
+
+   /* Receive Error Counter Register  */
+    tmbslPhyMYSTI110ERecr = 0x15,
+
+   /* PCS Sub-Layer Configuration and Status Register */
+    tmbslPhyMYSTI110EPcsr = 0x16,
+
+   /* RMII and Bypass Register */
+    tmbslPhyMYSTI110ERmiir = 0x17,
+
+    /* LED Direct Control Register  */
+    tmbslPhyMYSTI110ELedcr	= 0x18,
+
+    /* BIST Configuration register1 */
+    tmbslPhyMYSTI110EPhycr = 0x19,
+
+    /* 10Base-T Status/Control Register */
+    tmbslPhyMYSTI110E10Btscr = 0x1A,
+
+    tmbslPhyMYSTI110ECdctrl1 = 0x1B,
+
+    /* 0x1C reserved */
+
+    /* Energy detect control register */
+    tmbslPhyMYSTI110EEdcr = 0x1D,
+
+    /* 0x1E to 0x1F reserved*/
+
+} tmbslPhyMYSTI110EReg_t, *ptmbslPhyMYSTI110EReg_t;
+
+
+/* Static functions definition */
+
+static tmErrorCode_t
+tmbslPhyMYSTI110ERead (
+	tmUnitSelect_t				ethUnitId,
+    tmbslPhyMYSTI110EReg_t				reg,
+    pUInt16						pVal
+	);
+
+
+static tmErrorCode_t
+tmbslPhyMYSTI110EWrite (
+    tmUnitSelect_t				ethUnitId,
+    tmbslPhyMYSTI110EReg_t				reg,
+    UInt16						val
+	);
+
+/* Exported functions */
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyMYSTI110EGetSWVersion:
+//
+// DESCRIPTION: This function returns the PHY device interface software version
+//				information
+//
+// RETURN:      TM_OK
+//
+// NOTES:       This API can be called anytime i.e. before initializing the PHY
+//				or in PowerOff state.
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyMYSTI110EGetSWVersion (
+	ptmSWVersion_t					pPhyVersion
+	)
+{
+
+	pPhyVersion->compatibilityNr = TMBSL_PHY_COMPATIBILITY_NR;
+	pPhyVersion->majorVersionNr = TMBSL_PHY_MAJOR_VERSION_NR;
+	pPhyVersion->minorVersionNr = TMBSL_PHY_MINOR_VERSION_NR;
+
+	return TM_OK;
+
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyMYSTI110EGetCapabilities:
+//
+// DESCRIPTION: This function returns the PHY capabilities for the specified PHY
+//				unit. The function is callable at any time to return the unit's
+//				capabilities (PHY unit initialization is not necessary).
+//				Capabilities may be different among multiple PHY units.For completeness,
+//				a PHY BSL user should call this function for each PHY unit to
+//				determine its individual capabilities.
+//
+// RETURN:      TM_OK
+//
+// NOTES:       This API can be called anytime i.e. before initializing the PHY.
+//
+//-----------------------------------------------------------------------------
+
+
+tmErrorCode_t
+tmbslPhyMYSTI110EGetCapabilities (
+    tmUnitSelect_t                			ethUnitId,
+    ptmbslPhyCapabilities_t  				pPhyCaps
+    )
+
+{
+
+    UInt16 bmsr;
+
+    /*  Read the PHY capabilites from the BMSR register */
+    tmbslPhyMYSTI110ERead(ethUnitId, tmbslPhyMYSTI110EBmsr, &bmsr);
+
+
+    pPhyCaps->T4Support100Base =
+        (((bmsr & TMBSL_PHYMYSTI110E_BMSR_T4100BASE) > 0) ? True : False);
+
+    pPhyCaps->Tx_FullDuplexSupport100Base =
+        (((bmsr &TMBSL_PHYMYSTI110E_BMSR_X100BASEFD) > 0) ? True : False);
+
+    pPhyCaps->Tx_HalfDuplexSupport100Base =
+        (((bmsr &TMBSL_PHYMYSTI110E_BMSR_X100BASEHD) > 0) ? True : False);
+
+    pPhyCaps->Tx_FullDuplexSupport10Base =
+        (((bmsr &TMBSL_PHYMYSTI110E_BMSR_10MBPSFD) > 0) ? True : False);
+
+    pPhyCaps->Tx_HalfDuplexSupport10Base =
+        (((bmsr &TMBSL_PHYMYSTI110E_BMSR_10MBPSHD) > 0) ? True : False);
+
+    pPhyCaps->preAmbleSuppresionCapability =
+        (((bmsr &TMBSL_PHYMYSTI110E_BMSR_PREAMBLE_SUP) > 0) ? True : False);
+
+    pPhyCaps->autoNegotiationAbility =
+                (((bmsr &TMBSL_PHYMYSTI110E_BMSR_AN_ABLE) > 0) ? True : False);
+
+    pPhyCaps->ledStatusSupport = True ;
+
+    /* Other capabilites set to False */
+    pPhyCaps->nextPageIndication = False;
+
+    pPhyCaps->force100MbpsTxOff = False;
+
+    pPhyCaps->bypassSymbolAlignment =False;
+
+    pPhyCaps->badSSDDetectionConfig = False;
+
+    return TM_OK;
+
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyMYSTI110EInit:
+//
+// DESCRIPTION: This function initializes the PHY device. It should be called
+//				before any access to the device is made.
+//
+// RETURN:      TM_OK
+//
+// NOTES:       This function initializes the PHY device with the following
+//				default initial configuration.No Autonegotiation is done in the
+//				initialization function
+//-----------------------------------------------------------------------------
+
+
+tmErrorCode_t
+tmbslPhyMYSTI110EInit(
+    tmUnitSelect_t  						ethUnitId
+    )
+{
+
+    tmErrorCode_t       		ethStatus = TM_OK;
+    UInt32                         timeout=0;
+    UInt16 regval=0, id1, id2;
+
+    gEthContext[ethUnitId].pRegs = gtmhwLIPP6100Eth_Base[ethUnitId].baseAddress;
+
+    ethStatus = tmbslPhyMYSTI110ERead(ethUnitId,tmbslPhyMYSTI110ELedcr,&regval);
+
+    regval &= 0xfffe;
+    ethStatus = tmbslPhyMYSTI110EWrite(ethUnitId,tmbslPhyMYSTI110ELedcr,regval);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus;
+    }
+
+    regval = TMBSL_PHYMYSTI110E_BMCR_RST_VAL;
+
+    ethStatus = tmbslPhyMYSTI110EWrite(ethUnitId,tmbslPhyMYSTI110EBmcr,regval);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus;
+    }
+
+    /* Check if PHY is back to normal condition */
+    ethStatus = tmbslPhyMYSTI110ERead(ethUnitId,tmbslPhyMYSTI110EBmcr,&regval);
+
+    while( (regval & TMBSL_PHYMYSTI110E_BMCR_RST_VAL) && (timeout < PHY_TIMEOUT) )
+    {
+        ethStatus = tmbslPhyMYSTI110ERead(ethUnitId,tmbslPhyMYSTI110EBmcr,&regval);
+
+        if(ethStatus != TM_OK)
+        {
+            break;
+        }
+
+        timeout++;
+    }
+
+    if(ethStatus != TM_OK)
+    {
+        return(ethStatus);
+    }
+
+    if( (timeout == PHY_TIMEOUT) && (regval & TMBSL_PHYMYSTI110E_BMCR_RST_VAL) )
+    {
+        return(TMBSL_ERR_PHY_INIT_FAILED);
+    }
+
+    /* Read PHY Identification Register */
+    ethStatus = tmbslPhyMYSTI110ERead(ethUnitId,tmbslPhyMYSTI110EPhyIdr1,&id1);
+
+    if (ethStatus != TM_OK)
+    {
+        return (ethStatus);
+    }
+
+    ethStatus = tmbslPhyMYSTI110ERead(ethUnitId,tmbslPhyMYSTI110EPhyIdr2,&id2);
+
+    if (ethStatus != TM_OK)
+    {
+        return (ethStatus);
+    }
+
+    if( (id1 == 0) && (id2 == 0x0) )
+    {
+        /* IDs are valid. Do Nothing */
+    }
+    else
+    {
+        return(TMBSL_ERR_PHY_NOT_SUPPORTED);
+    }
+
+    regval = 0;
+
+    /* Set the PHY for the 10Mbps and Half Duplex mode */
+    ethStatus = tmbslPhyMYSTI110EWrite(ethUnitId,tmbslPhyMYSTI110EBmcr,regval);
+
+    if(ethStatus != TM_OK)
+    {
+        return (ethStatus);
+    }
+
+    return TM_OK;
+
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyMYSTI110EDeinit:
+//
+// DESCRIPTION: This function de-initializes the PHY device. Once the device is
+//				deinitilized device will no more be available to access
+//
+// RETURN:      TM_OK
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyMYSTI110EDeinit(
+    tmUnitSelect_t  						ethUnitId
+    )
+
+{
+
+    tmErrorCode_t       		ethStatus=TM_OK;
+    UInt16 bmcr =0;
+
+    bmcr |= TMBSL_PHYMYSTI110E_BMCR_RST_VAL;
+
+    /* All the registers will be reset */
+    ethStatus = tmbslPhyMYSTI110EWrite(ethUnitId,tmbslPhyMYSTI110EBmcr,bmcr);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus;
+    }
+    else
+    {
+        return TM_OK;
+    }
+
+}
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyMYSTI110ESetPowerState:
+//
+// DESCRIPTION: This function will set the Power State of the PHY device to specified
+//				power state
+//
+// RETURN:      TM_OK
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyMYSTI110ESetPowerState(
+    tmUnitSelect_t           				ethUnitId ,
+    tmPowerState_t          				phyPowerState
+    )
+
+{
+    tmErrorCode_t ethStatus=TM_OK;
+    UInt16 bmcr = 0;
+
+    ethStatus = tmbslPhyMYSTI110ERead(ethUnitId, tmbslPhyMYSTI110EBmcr, &bmcr);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus;
+    }
+
+    if( (phyPowerState == tmPowerOn) || (phyPowerState == tmPowerOff) )
+    {
+        if(phyPowerState == tmPowerOff)
+        {
+            bmcr |= TMBSL_PHYMYSTI110E_BMCR_PWRDN_EN;
+        }
+        else
+        {
+            bmcr &=TMBSL_PHYMYSTI110E_BMCR_PWRDN_CLR;
+        }
+
+        ethStatus = tmbslPhyMYSTI110EWrite(ethUnitId,tmbslPhyMYSTI110EBmcr,bmcr);
+
+        return ethStatus;
+
+    }
+    else
+    {
+        return TMBSL_ERR_PHY_NOT_SUPPORTED;
+    }
+
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyMYSTI110EGetPowerState:
+//
+// DESCRIPTION: This function will get the preset power state of the PHY device
+//
+// RETURN:      TM_OK
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyMYSTI110EGetPowerState(
+    tmUnitSelect_t                  		ethUnitId ,
+    ptmPowerState_t				phyPowerState
+    )
+
+{
+
+    tmErrorCode_t       		ethStatus=TM_OK;
+    UInt16 regVal=0;
+
+    ethStatus = tmbslPhyMYSTI110ERead(ethUnitId,tmbslPhyMYSTI110EBmcr,&regVal);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus ;
+    }
+
+    *phyPowerState = (((regVal & TMBSL_PHYMYSTI110E_BMCR_PWRDN_EN) > 0) ? tmPowerOff : tmPowerOn);
+
+    return TM_OK;
+
+}
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyMYSTI110EGetBasicModeControl:
+//
+// DESCRIPTION: This function will get the basic configuration of the PHY device.
+//
+// RETURN:      TM_OK
+//
+// NOTES:       See #define for the Basic Mode Control
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyMYSTI110EGetBasicModeControl (
+    tmUnitSelect_t                   		ethUnitId,
+    ptmbslPhyBasicModeControl_t       pPhyBasicModeControl
+    )
+{
+    tmErrorCode_t ethStatus=TM_OK;
+    UInt16 bmcr;
+
+    /* Read the present settings of the BMCR register */
+    ethStatus = tmbslPhyMYSTI110ERead(ethUnitId,tmbslPhyMYSTI110EBmcr,&bmcr);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus;
+    }
+
+    pPhyBasicModeControl->enableCollisionTest =
+                (((bmcr & TMBSL_PHYMYSTI110E_BMCR_COLTEST ) > 0) ? True : False);
+
+    pPhyBasicModeControl->duplexMode =
+                (((bmcr & TMBSL_PHYMYSTI110E_BMCR_FD_EN ) > 0) ? tmbslPhyFullDuplex : tmbslPhyHalfDuplex);
+
+    if(bmcr & TMBSL_PHYMYSTI110E_BMCR_SPEED_MSK)
+    {
+        pPhyBasicModeControl->speed = tmbslPhySpeed100Mbps;
+    }
+    else
+    {
+        pPhyBasicModeControl->speed = tmbslPhySpeed10Mbps;
+    }
+
+    return TM_OK;
+
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyMYSTI110ESetBasicModeControl:
+//
+// DESCRIPTION: This function will configure the PHY device for the Basic Mode.
+//
+// RETURN:      TM_OK
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyMYSTI110ESetBasicModeControl (
+    tmUnitSelect_t                           ethUnitId,
+    ptmbslPhyBasicModeControl_t        pPhyBasicModeControl
+    )
+{
+
+    tmErrorCode_t       		ethStatus=TM_OK;
+    UInt16 bmcr =0;
+
+    if(pPhyBasicModeControl->enableCollisionTest == True)
+    {
+        bmcr |= TMBSL_PHYMYSTI110E_BMCR_COLTEST;
+    }
+
+    if(pPhyBasicModeControl->duplexMode == True)
+    {
+        bmcr |= TMBSL_PHYMYSTI110E_BMCR_FD_EN;
+    }
+
+    switch(pPhyBasicModeControl->speed)
+    {
+
+        case tmbslPhySpeed100Mbps :
+            bmcr |= TMBSL_PHYMYSTI110E_BMCR_SPEED_100;
+            break;
+
+        case tmbslPhySpeed10Mbps :
+            bmcr |= TMBSL_PHYMYSTI110E_BMCR_SPEED_10;
+            break;
+
+        default:
+            break;
+
+    }
+
+    /* Write the result to the BMC register */
+    ethStatus = tmbslPhyMYSTI110EWrite(ethUnitId,tmbslPhyMYSTI110EBmcr,bmcr);
+
+    return ethStatus;
+
+}
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyMYSTI110EGetBasicModeStatus:
+//
+// DESCRIPTION: This function will get the Basic Mode Status of the PHY device
+//				such as the speed, duplex mode and other statuses
+//
+// RETURN:      TM_OK
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyMYSTI110EGetBasicModeStatus (
+    tmUnitSelect_t                  		ethUnitId,
+    ptmbslPhyBasicModeStatus_t    	pPhyBasicModeStatus
+    )
+
+{
+    tmErrorCode_t ethStatus=TM_OK;
+    UInt16           bmsr,bmcr,phySts;
+
+    /* Read the PHY status from the BMSR register */
+    ethStatus = tmbslPhyMYSTI110ERead(ethUnitId, tmbslPhyMYSTI110EBmsr, &bmsr);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus ;
+    }
+
+    /* Read the PHY control register from the BMCR register */
+    ethStatus = tmbslPhyMYSTI110ERead(ethUnitId, tmbslPhyMYSTI110EBmcr, &bmcr);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus ;
+    }
+
+    /* Read the autonegotiation status from PHY status register */
+    ethStatus = tmbslPhyMYSTI110ERead(ethUnitId, tmbslPhyMYSTI110EPhystsr, &phySts);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus ;
+    }
+
+    pPhyBasicModeStatus->jabberDetect = (((bmsr & TMBSL_PHYMYSTI110E_BMSR_JAB_VAL) > 0) ? True : False);
+
+    pPhyBasicModeStatus->remoteFaultDetected = (((bmsr & TMBSL_PHYMYSTI110E_BMSR_RF_VAL) > 0) ? True : False);
+
+    pPhyBasicModeStatus->autoNegotiationComplete = (((bmsr & TMBSL_PHYMYSTI110E_BMSR_AN_VAL) > 0) ? True : False);
+
+    pPhyBasicModeStatus->loopBackEnabled = (((bmcr & TMBSL_PHYMYSTI110E_BMCR_LPBK_VAL) > 0) ? True : False);
+
+    if((bmcr & TMBSL_PHYMYSTI110E_BMCR_AN_EN) == 0)
+    {
+        /* Not an auto negotiation. So read the values from BMCR */
+        pPhyBasicModeStatus->duplexMode =
+                (((bmcr & TMBSL_PHYMYSTI110E_BMCR_FD_EN ) > 0) ? tmbslPhyFullDuplex : tmbslPhyHalfDuplex);
+
+        if(bmcr & TMBSL_PHYMYSTI110E_BMCR_SPEED_MSK)
+        {
+            pPhyBasicModeStatus->speed = tmbslPhySpeed100Mbps;
+        }
+        else
+        {
+            pPhyBasicModeStatus->speed = tmbslPhySpeed10Mbps;
+        }
+
+    }
+    else
+    {
+
+        /* If autonegotiation is enabled, read from PHYSTS register */
+
+        switch(phySts & TMBSL_PHYMYSTI110E_PHYSTS_SPEED_MASK )
+        {
+
+            case TMBSL_PHYMYSTI110E_PHYSTS_SPEED_100_FD:
+                pPhyBasicModeStatus->duplexMode = tmbslPhyFullDuplex;
+                pPhyBasicModeStatus->speed = tmbslPhySpeed100Mbps ;
+                break;
+
+            case TMBSL_PHYMYSTI110E_PHYSTS_SPEED_100_HD:
+                pPhyBasicModeStatus->duplexMode = tmbslPhyHalfDuplex;
+                pPhyBasicModeStatus->speed = tmbslPhySpeed100Mbps;
+                break;
+
+            case TMBSL_PHYMYSTI110E_PHYSTS_SPEED_10_FD:
+                pPhyBasicModeStatus->duplexMode = tmbslPhyFullDuplex;
+                pPhyBasicModeStatus->speed=tmbslPhySpeed10Mbps;
+                break;
+
+            case TMBSL_PHYMYSTI110E_PHYSTS_SPEED_10_HD:
+                pPhyBasicModeStatus->duplexMode = tmbslPhyHalfDuplex;
+                pPhyBasicModeStatus->speed=tmbslPhySpeed10Mbps;
+                break;
+
+            default:
+                break;
+
+        }
+
+    }
+
+    return TM_OK;
+
+}
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyMYSTI110EAutoNegotiate:
+//
+// DESCRIPTION: This function will enable the Auto negotiation of the PHY device
+//				with Link Partner. Best possible performance configuration is
+//				selected automatically during this process
+//
+// RETURN:      TM_OK
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyMYSTI110EAutoNegotiate (
+    tmUnitSelect_t                       	      ethUnitId,
+    ptmbslPhyAutoNegotitationMask_t      	pAutoNegotiationMask
+    )
+{
+
+    tmErrorCode_t   ethStatus=TM_OK;
+    UInt32             timeout=AUTO_NEG_DELAY_MULTIPLIER; /* Timeout of 800*5 msecs = 4 Sec */
+
+    UInt16 regVal = ANAR_DEFAULT_VAL;
+    UInt16 mask =0;
+
+    ethStatus = tmbslPhyMYSTI110EWrite(ethUnitId,tmbslPhyMYSTI110EAnar,regVal);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus ;
+    }
+
+    if(pAutoNegotiationMask->masknextPageDesired == True)
+    {
+        mask |= TMBSL_PHYMYSTI110E_ANAR_NP;
+    }
+
+    if(pAutoNegotiationMask->maskRemoteFault == True)
+    {
+        mask |= TMBSL_PHYMYSTI110E_ANAR_ADV_RF;
+    }
+
+    if(pAutoNegotiationMask->maskAsymmetricPause == True)
+    {
+        mask |= TMBSL_PHYMYSTI110E_ANAR_AP;
+    }
+
+    if(pAutoNegotiationMask->maskPauseFrame == True)
+    {
+        mask |= TMBSL_PHYMYSTI110E_ANAR_PAUSE;
+    }
+
+    if(pAutoNegotiationMask->mask100BaseTxFullDuplexSupport == True)
+    {
+        mask |= TMBSL_PHYMYSTI110E_ANAR_100B_TX_FD;
+    }
+
+    if(pAutoNegotiationMask->mask100BaseTxSupport == True)
+    {
+        mask |= TMBSL_PHYMYSTI110E_ANAR_100B_TX_HD;
+    }
+
+    if(pAutoNegotiationMask->mask10BaseTFullDuplexSupport == True)
+    {
+        mask |= TMBSL_PHYMYSTI110E_ANAR_10B_TX_FD;
+    }
+
+    if(pAutoNegotiationMask->mask10BaseTSupport == True)
+    {
+        mask |= TMBSL_PHYMYSTI110E_ANAR_10B_TX_HD;
+    }
+
+    /* Clear the corresponding bits in the regVal*/
+    regVal &= ~(mask);
+
+    /* Program the Auto negotiation mask */
+    tmbslPhyMYSTI110EWrite(ethUnitId,tmbslPhyMYSTI110EAnar,regVal);
+
+    /* Enable the Auto negotiation in the BMCR register
+    ** First clear the auto negotiate bit and then enable
+    */
+    tmbslPhyMYSTI110ERead(ethUnitId,tmbslPhyMYSTI110EBmcr,&regVal);
+
+    /* Clear autonegotiation bit */
+    regVal &= TMBSL_PHYMYSTI110E_BMCR_AN_CLR;
+
+    regVal |= TMBSL_PHYMYSTI110E_BMCR_AN_EN;
+
+    tmbslPhyMYSTI110EWrite(ethUnitId,tmbslPhyMYSTI110EBmcr,regVal);
+
+    /* Wait till the Auto negotiation is complete Or Do we need to set the Timeout */
+    tmbslPhyMYSTI110ERead(ethUnitId,tmbslPhyMYSTI110EBmsr,&regVal);
+
+    /* While the Autonegotiation is not complete, stay in loop */
+    while(((regVal & TMBSL_PHYMYSTI110E_BMSR_AN_VAL) != TMBSL_PHYMYSTI110E_BMSR_AN_VAL) &&
+           (timeout != 0 ) )
+    {
+        mdelay(5);
+
+        ethStatus = tmbslPhyMYSTI110ERead(ethUnitId,tmbslPhyMYSTI110EBmsr,&regVal);
+
+        if(ethStatus != TM_OK)
+        {
+            return ethStatus;
+        }
+
+        timeout--;
+    }
+
+    if(  (timeout <= 0) &&
+         ( (regVal & TMBSL_PHYMYSTI110E_BMSR_AN_VAL) != TMBSL_PHYMYSTI110E_BMSR_AN_VAL)
+      )
+    {
+        return(-1);
+    }
+
+    return TM_OK;
+
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyMYSTI110ELoopBack:
+//
+// DESCRIPTION: Function will enable or disable the PHY device in the Loopback
+//				mode.
+//
+// RETURN:      TM_OK
+// NOTES:
+//-----------------------------------------------------------------------------
+
+
+tmErrorCode_t
+tmbslPhyMYSTI110ELoopBack (
+    tmUnitSelect_t                  ethUnitId,
+    tmbslPhyEnableDisable_t     loopbackMode
+    )
+{
+
+    tmErrorCode_t ethStatus=TM_OK;
+    UInt16 bmcr;
+
+    /* Read the existing settings of the BMCR register */
+    ethStatus = tmbslPhyMYSTI110ERead(ethUnitId,tmbslPhyMYSTI110EBmcr,&bmcr);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus ;
+    }
+
+    if(tmbslPhyEnable == loopbackMode)
+    {
+        bmcr |= TMBSL_PHYMYSTI110E_BMCR_LPBK_VAL;
+    }
+    else if(tmbslPhyDisable == loopbackMode)
+    {
+        bmcr &= TMBSL_PHYMYSTI110E_BMCR_LPBK_CLR;
+    }
+    else
+    {
+        ethStatus = TMBSL_ERR_PHY_NOT_SUPPORTED;
+    }
+
+    /* Write the Loopback setting to the BMCR register */
+    ethStatus = tmbslPhyMYSTI110EWrite(ethUnitId,tmbslPhyMYSTI110EBmcr,bmcr);
+
+    return ethStatus;
+
+}
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyMYSTI110ESoftReset:
+//
+// DESCRIPTION: Function will do the soft reset of the PHY device
+
+// RETURN:      TM_OK
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyMYSTI110ESoftReset (
+    tmUnitSelect_t                     		ethUnitId
+	)
+
+{
+    tmErrorCode_t       		ethStatus=TM_OK;
+
+    /* All the registers will be reset */
+    ethStatus = tmbslPhyMYSTI110EWrite(ethUnitId,tmbslPhyMYSTI110EBmcr,TMBSL_PHYMYSTI110E_BMCR_RST_VAL);
+
+    return ethStatus;
+
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyMYSTI110EGetLinkStatus:
+//
+// DESCRIPTION: Function will get the link status
+
+// RETURN:      TM_OK
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyMYSTI110EGetLinkStatus (
+    tmUnitSelect_t                          ethUnitId,
+    ptmbslPhyEnableDisable_t            pLinkStatus
+    )
+{
+    tmErrorCode_t ethStatus=TM_OK;
+    UInt16 physts;
+
+    /* Read the BMSR register twice, as per datasheet */
+    ethStatus = tmbslPhyMYSTI110ERead(ethUnitId,tmbslPhyMYSTI110EBmsr,&physts);
+    ethStatus = tmbslPhyMYSTI110ERead(ethUnitId,tmbslPhyMYSTI110EBmsr,&physts);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus ;
+    }
+
+    *pLinkStatus =
+        (((physts & TMBSL_PHYMYSTI110E_BMSR_LINK_STAT) > 0) ? tmbslPhyEnable : tmbslPhyDisable);
+
+    return(TM_OK);
+
+}
+
+//-----------------------------------------------------------------------------
+//	Local static functions
+//-----------------------------------------------------------------------------
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyMYSTI110ERead:
+//
+// DESCRIPTION: Function will read from the Specified PHY register
+
+// RETURN:
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+static tmErrorCode_t
+tmbslPhyMYSTI110ERead (
+    tmUnitSelect_t				ethUnitId,
+    tmbslPhyMYSTI110EReg_t		reg,
+    pUInt16						pVal
+	)
+
+{
+
+    UInt32  timeout=0;
+    UInt32 pEthRegs;
+    volatile UInt32 *pAdrReg;
+    volatile  UInt32 *pDataReg;
+    UInt32 regValue;
+
+    /* get Ethernet Module Reg Pointer  */
+    pEthRegs = gEthContext[ethUnitId].pRegs;
+
+    /* Get the Address register */
+    pAdrReg = (UInt32*)(pEthRegs+TMHW_LIPP6100ETH_ADR_REG_OFFSET) ;
+    pDataReg = (UInt32*)(pEthRegs+TMHW_LIPP6100ETH_DATA_REG_OFFSET) ;
+
+    /* Program the Register address in the MII */
+    regValue = *pAdrReg;
+
+    /* Clear the earlier register value in Address register and write the new value */
+    regValue &= TMHW_LIPP6100ETH_ADR_PHY_REG_CLR;
+    regValue |= reg << TMHW_LIPP6100ETH_ADR_PHY_REG_POS;
+
+    /* Clear the bit GMII write for read operation */
+    regValue &= TMHW_LIPP6100ETH_ADR_PHY_RD_CLR;
+
+    regValue |= TMHW_LIPP6100ETH_ADR_PHY_EN_VAL;
+
+    *pAdrReg = regValue;
+
+    /* Wait till the read operation is complete */
+
+    do
+    {
+        timeout++;
+
+    }while ( ((*pAdrReg & TMHW_LIPP6100ETH_ADR_PHY_EN_VAL) == tmbslPhyEnable) &&
+                   (timeout < PHY_TIMEOUT) );
+
+    if( (timeout == PHY_TIMEOUT) &&
+        ((*pAdrReg & TMHW_LIPP6100ETH_ADR_PHY_EN_VAL) == tmbslPhyEnable) )
+    {
+        return(TMBSL_ERR_PHY_READ_FAILED);
+    }
+
+    /* Read the data from the data register */
+
+    *pVal = (UInt16) *pDataReg;
+
+    return TM_OK;
+
+}
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyMYSTI110EWrite:
+//
+// DESCRIPTION: Function will Write to the Specified PHY register
+
+// RETURN:
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+static tmErrorCode_t
+tmbslPhyMYSTI110EWrite (
+    tmUnitSelect_t				ethUnitId,
+    tmbslPhyMYSTI110EReg_t		reg,
+    UInt16						val
+	)
+
+{
+
+    UInt32 pEthRegs;
+    volatile UInt32 *pAdrReg;
+    volatile  UInt32 *pDataReg;
+    UInt32 regValue;
+
+    UInt32      timeout=0;
+
+    /* Get the Ethernet Module Reg pointer */
+    pEthRegs = gEthContext[ethUnitId].pRegs;
+
+    /* Get the Address register */
+    pAdrReg = (UInt32*)(pEthRegs+TMHW_LIPP6100ETH_ADR_REG_OFFSET) ;
+    pDataReg = (UInt32*)(pEthRegs+TMHW_LIPP6100ETH_DATA_REG_OFFSET) ;
+
+    /* Write the data into data register  */
+    *pDataReg = 0;
+    *pDataReg = val;
+
+    /* Program the Register address */
+    regValue = *pAdrReg;
+
+    /* Clear the earlier register value in Address register */
+    regValue &= TMHW_LIPP6100ETH_ADR_PHY_REG_CLR;
+    regValue |= reg << TMHW_LIPP6100ETH_ADR_PHY_REG_POS;
+
+    /* Set Write operation bit and enable write */
+    regValue |= TMHW_LIPP6100ETH_ADR_PHY_WR_VAL |
+               TMHW_LIPP6100ETH_ADR_PHY_EN_VAL ;
+
+    /* Write the value back to Address register */
+    *pAdrReg = regValue;
+
+    /* wait till the write operation is complete */
+
+    do
+    {
+        timeout++;
+    }while ( ((*pAdrReg & TMHW_LIPP6100ETH_ADR_PHY_EN_VAL) == tmbslPhyEnable) &&
+             (timeout < PHY_TIMEOUT) );
+
+	if( (timeout == PHY_TIMEOUT) &&
+           ((*pAdrReg & TMHW_LIPP6100ETH_ADR_PHY_EN_VAL) == tmbslPhyEnable) )
+	{
+	    return(TMBSL_ERR_PHY_WRITE_FAILED);
+	}
+
+	return TM_OK;
+
+}
+
+//-----------------------------------------------------------------------------
+
+
+
diff -Naur u-boot-2009.08/drivers/net/lipp_6300eth/tmbslPhyMYSTI110E.h u-boot-2009.08_alpha2/drivers/net/lipp_6300eth/tmbslPhyMYSTI110E.h
--- u-boot-2009.08/drivers/net/lipp_6300eth/tmbslPhyMYSTI110E.h	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/net/lipp_6300eth/tmbslPhyMYSTI110E.h	2009-12-14 18:52:16.000000000 -0600
@@ -0,0 +1,503 @@
+/*
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ *
+ * Copyright (c) 2009-2010, NXP Semiconductors 
+ * All Rights Reserved.
+ *
+ *---------------------------------------------------------------------------
+ * %filename:     tmbslPhyMYSTI110E.c %
+ * %pid_version:           0.1                %
+ *---------------------------------------------------------------------------
+ * DESCRIPTION: API source file for MystiPHY110e PHY
+ *
+ * DOCUMENT REF: MystiPHY110e Core datasheet version 6.00
+ *
+ * NOTES:        None
+ *
+ *-----------------------------------------------------------------------------
+ *
+*/
+
+#ifndef _TMBSLPHYMYSTI110E_H_
+#define _TMBSLPHYMYSTI110E_H_
+
+#if        defined(__cplusplus)
+extern "C"
+{
+#endif  // defined(__cplusplus)
+
+
+#include "tmNxTypes.h"
+#include "tmbslPhy.h"
+
+/* Macros */
+
+/* MAC Macros */
+#define TMHW_LIPP6100ETH_ADR_REG_OFFSET (0x010)
+#define TMHW_LIPP6100ETH_DATA_REG_OFFSET (0x014)
+
+#define TMHW_LIPP6100ETH_ADR_PHY_REG_CLR (0xFFFFF83F)
+#define TMHW_LIPP6100ETH_ADR_PHY_REG_POS (6)
+#define TMHW_LIPP6100ETH_ADR_PHY_WR_VAL (0x2)
+#define TMHW_LIPP6100ETH_ADR_PHY_RD_CLR (0xFFFFFFFD)
+#define TMHW_LIPP6100ETH_ADR_PHY_EN_VAL (0x1)
+
+/*PHY Macros */
+/*************** Basic Mode control register ************/
+#define TMBSL_PHYMYSTI110E_BMCR_RST_VAL (0x8000)
+
+/* Enable loopback */
+#define TMBSL_PHYMYSTI110E_BMCR_LPBK_VAL (0x4000)
+#define TMBSL_PHYMYSTI110E_BMCR_LPBK_CLR (0xBFFF)
+
+/* Set Speed to 1Gbps */
+#define TMBSL_PHYMYSTI110E_BMCR_SPEED_1G (0x40)
+
+/* Set Speed to 100Mbps */
+#define TMBSL_PHYMYSTI110E_BMCR_SPEED_100 (0x2000)
+
+/* Set Speed */
+#define TMBSL_PHYMYSTI110E_BMCR_SPEED_10 (0)
+
+/* Speed mask */
+#define TMBSL_PHYMYSTI110E_BMCR_SPEED_MSK (0x2000)
+
+/* Enable autonegotiation */
+#define TMBSL_PHYMYSTI110E_BMCR_AN_EN (0x1000)
+#define TMBSL_PHYMYSTI110E_BMCR_AN_CLR (0xFFFFEFFF)
+
+/* Set power down mode */
+#define TMBSL_PHYMYSTI110E_BMCR_PWRDN_EN (0x800)
+
+/* Disable  power down mode */
+#define TMBSL_PHYMYSTI110E_BMCR_PWRDN_CLR (0xF7FF)
+
+/* Isolate PHY enable */
+#define TMBSL_PHYMYSTI110E_BMCR_ISO_PHY (0x400)
+
+/* Auto negotiation restart */
+#define TMBSL_PHYMYSTI110E_BMCR_AN_RESTART (0x200)
+
+/* Collision Test enable */
+#define TMBSL_PHYMYSTI110E_BMCR_COLTEST (0x80)
+
+/* Full duplex enable */
+#define TMBSL_PHYMYSTI110E_BMCR_FD_EN (0x100)
+
+/****** Basic Mode status Register bits ******/
+
+/* Autonegotiation complete value */
+#define TMBSL_PHYMYSTI110E_BMSR_T4100BASE (0x8000)
+
+#define TMBSL_PHYMYSTI110E_BMSR_X100BASEFD (0x4000)
+
+#define TMBSL_PHYMYSTI110E_BMSR_X100BASEHD (0x2000)
+
+#define TMBSL_PHYMYSTI110E_BMSR_10MBPSFD (0x1000)
+
+#define TMBSL_PHYMYSTI110E_BMSR_10MBPSHD (0x800)
+
+#define TMBSL_PHYMYSTI110E_BMSR_T2100BASEFD (0x400)
+
+#define TMBSL_PHYMYSTI110E_BMSR_T2100BASEHD (0x200)
+
+/* Preamble suppression capability */
+#define TMBSL_PHYMYSTI110E_BMSR_PREAMBLE_SUP (0x40)
+
+#define TMBSL_PHYMYSTI110E_BMSR_AN_VAL (0x20)
+#define TMBSL_PHYMYSTI110E_BMCR_LPBK_VAL (0x4000)
+
+
+/* Remote fault value */
+#define TMBSL_PHYMYSTI110E_BMSR_RF_VAL (0x10)
+
+/* PHY is able to perform auto negotiation */
+#define TMBSL_PHYMYSTI110E_BMSR_AN_ABLE (0x8)
+
+#define TMBSL_PHYMYSTI110E_BMSR_LINK_STAT (0x4)
+
+/* Jabber detected */
+#define TMBSL_PHYMYSTI110E_BMSR_JAB_VAL (0x2)
+
+
+
+/****** Auto Negotiation Advertisement Register bits ******/
+
+/* Advertise Next page desired */
+#define TMBSL_PHYMYSTI110E_ANAR_NP (0x8000)
+
+/* Advertise remote fault */
+#define TMBSL_PHYMYSTI110E_ANAR_ADV_RF (0x2000)
+
+/* Advertise asymmetric pause */
+#define TMBSL_PHYMYSTI110E_ANAR_AP (0x800)
+
+/* Advertise pause frame support */
+#define TMBSL_PHYMYSTI110E_ANAR_PAUSE (0x400)
+
+/* Advertise 100Base-TX full duplex support */
+#define TMBSL_PHYMYSTI110E_ANAR_100B_TX_FD (0x100)
+
+/* Advertise 100Base-TX half duplex support */
+#define TMBSL_PHYMYSTI110E_ANAR_100B_TX_HD (0x80)
+
+/* Advertise 10Base-TX full duplex support */
+#define TMBSL_PHYMYSTI110E_ANAR_10B_TX_FD (0x40)
+
+/* Advertise 10Base-TX half duplex support */
+#define TMBSL_PHYMYSTI110E_ANAR_10B_TX_HD (0x20)
+
+
+/****** 1KTCR : 1000 Base-T Master-Slave Control Register ******/
+
+/* Maser/Slave config enable */
+#define TMBSL_PHYMYSTI110E_1KTCR_MS_CONFIG (0x1000)
+
+/* Set PHY as master */
+#define TMBSL_PHYMYSTI110E_1KTCR_MASTER_EN (0x800)
+
+/* Advertise device as Multiport */
+#define TMBSL_PHYMYSTI110E_1KTCR_MULTIPORT_EN (0x400)
+
+/* 1000 Base-T Full duplex capable */
+#define TMBSL_PHYMYSTI110E_1KTCR_1000BT_FD (0x200)
+
+/* 1000 Base-T Half duplex capable */
+#define TMBSL_PHYMYSTI110E_1KTCR_1000BT_HD (0x100)
+
+/********1KSTSR 1000 BASE-T Master-Slave Status Register *****/
+#define TMBSL_PHYMYSTI110E_1KSTSR_MAN_FAULT (0x8000)
+#define TMBSL_PHYMYSTI110E_1KSTSR_MASTER (0x4000)
+#define TMBSL_PHYMYSTI110E_1KSTSR_LOCAL_RX_STAT (0x2000)
+#define TMBSL_PHYMYSTI110E_1KSTSR_REMOTE_RX_STAT (0x1000)
+#define TMBSL_PHYMYSTI110E_1KSTSR_PART_FD_CAP (0x800)
+#define TMBSL_PHYMYSTI110E_1KSTSR_PART_HD_CAP (0x400)
+
+/********** EXTENDED STATUS REGISTER ******************/
+#define TMBSL_PHYMYSTI110E_1KSCR_1000BASEX_FD (0x8000)
+#define TMBSL_PHYMYSTI110E_1KSCR_1000BASEX_HD (0x4000)
+#define TMBSL_PHYMYSTI110E_1KSCR_1000BASET_FD (0x2000)
+#define TMBSL_PHYMYSTI110E_1KSCR_1000BASET_HD (0x1000)
+
+/**************** VENDOR SPECIFIC REGISTERS **************/
+/****** STRAP options register ******/
+#define TMBSL_PHYMYSTI110E_STRAP_ANE (0x8000)
+#define TMBSL_PHYMYSTI110E_STRAP_DUP (0x4000)
+
+/* Bit 13:12  similar to bits 6:13 in basic mode control register */
+#define TMBSL_PHYMYSTI110E_STRAP_SPD_MSK (0x3000)
+#define TMBSL_PHYMYSTI110E_STRAP_SPD_1G (0x2000)
+#define TMBSL_PHYMYSTI110E_STRAP_SPD_100 (0x1000)
+#define TMBSL_PHYMYSTI110E_STRAP_SPD_10 (0x0)
+
+#define TMBSL_PHYMYSTI110E_PHYSTS_SPEED_MASK (0x1C)
+
+#define TMBSL_PHYMYSTI110E_PHYSTS_SPEED_10_HD (0x4)
+#define TMBSL_PHYMYSTI110E_PHYSTS_SPEED_10_FD (0x14)
+
+#define TMBSL_PHYMYSTI110E_PHYSTS_SPEED_100_HD (0x8)
+#define TMBSL_PHYMYSTI110E_PHYSTS_SPEED_100_FD (0x18)
+
+//Structure Declarations
+//-----------------------------------------------------------------------------
+//	Typedefinition
+//-----------------------------------------------------------------------------
+typedef struct  _tmbslPhyMYSTI110EContext_t
+{
+    UInt32    			pRegs;         // Array ETHERNET Module regs 
+} tmbslPhyMYSTI110EContext_t, *ptmbslPhyMYSTI110EContext_t;
+
+//-----------------------------------------------------------------------------
+// Exported functions:
+//-----------------------------------------------------------------------------
+//
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyGetSWVersion:
+//
+// DESCRIPTION: This function returns the PHY device interface software version 
+//				information
+//
+// RETURN:      TM_OK
+//
+// NOTES:       This API can be called anytime i.e. before initializing the PHY 
+//				or in PowerOff state.
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyMYSTI110EGetSWVersion (
+    ptmSWVersion_t      					pPhyVersion    
+    );
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyGetCapabilities:
+//
+// DESCRIPTION: This function returns the PHY capabilities for the specified PHY
+//				unit. The function is callable at any time to return the unit's 
+//				capabilities (PHY unit initialization is not necessary). 
+//				Capabilities may be different among multiple PHY units.For completeness, 
+//				a PHY BSL user should call this function for each PHY unit to 
+//				determine its individual capabilities. 
+//
+// RETURN:      TM_OK
+//
+// NOTES:       This API can be called anytime i.e. before initializing the PHY 
+//				or in PowerOff state. 
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyMYSTI110EGetCapabilities (
+    tmUnitSelect_t                			phyUnitId,  
+    ptmbslPhyCapabilities_t  				pPhyCaps    
+    );
+
+    
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyInit:
+//
+// DESCRIPTION: This function initializes the PHY device. It should be called
+//				before any access to the device is made. 
+//
+// RETURN:      TM_OK 
+
+//				TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:       This function initializes the PHY device with the following 
+//				default initial configuration.
+//				1. Enable the auto negotiation. In auto-negotiation mode the 
+//				highest possible performance mode is selected automatically 
+//				which the Link Partner also supports. (In auto negotiation mode
+//				speed and duplex mode will be selected by means of auto negotiation. 
+//				Writing to speed and duplex mode does not have meaning in auto 
+//				negotiation mode.)
+//				2. The device abilities are programmed to Auto negotiation advertise 
+//				register. None of the device abilities are masked. If the PHY 
+//				device does not support Auto-negotiation mode, then this function 
+//				will set the PHY to basic capabilities of the device.The function 
+//				tmbslPhyGetBasicModeControl can be called after tmbsPhyInit to 
+//				know what are the default configurations the tmbslPhyInit function 
+//				has set to
+ 
+//-----------------------------------------------------------------------------
+//
+    
+tmErrorCode_t
+tmbslPhyMYSTI110EInit(
+    tmUnitSelect_t  						phyUnitId   
+    );
+
+
+    
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyDeinit:
+//
+// DESCRIPTION: This function de-initializes the PHY device. Once the device is
+//				deinitilized device will no more be available to access 
+//
+// RETURN:      TM_OK
+//				TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:       
+//-----------------------------------------------------------------------------
+//
+tmErrorCode_t
+tmbslPhyMYSTI110EDeinit(
+    tmUnitSelect_t  						phyUnitId   
+    );
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhySetPowerState:
+//
+// DESCRIPTION: This function will set the Power State of the PHY device to specified 
+//				power state
+//
+// RETURN:      TM_OK
+//				TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:       
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyMYSTI110ESetPowerState(
+    tmUnitSelect_t           				phyUnitId ,  
+    tmPowerState_t          				phyPowerState
+    );
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyGetPowerState:
+//
+// DESCRIPTION: This function will get the preset power state of the PHY device
+//
+// RETURN:      TM_OK
+//				TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:       
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyMYSTI110EGetPowerState(
+    tmUnitSelect_t                  		phyUnitId ,  
+    ptmPowerState_t							phyPowerState
+    );
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyGetBasicModeControl:
+//
+// DESCRIPTION: This function will get the basic configuration of the PHY device. 
+//
+// RETURN:      TM_OK
+//				TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:       PHY device is initialized using the function tmbslPhyInit.  
+//				tmbslPhyInit Enable the Auto negotiation mode and will configure 
+//				the PHY device for the maximum performance mode available. After 
+//				the device is initialized this function can be called to know the 
+//				present settings of the PHY device. If application wants to change 
+//				the settings it can call tmbslPhySetBasicModeControl to change 
+//				the configuration after knowing the capabilities of the PHY device 
+//				and Link Partner. #define for the Basic Mode Control 
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t 
+tmbslPhyMYSTI110EGetBasicModeControl (
+    tmUnitSelect_t                   		phyUnitId,   
+    ptmbslPhyBasicModeControl_t      		pPhyBasicModeControl
+    );
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhySetBasicModeControl:
+//
+// DESCRIPTION: This function will configure the PHY device for the Basic Mode. 
+//
+// RETURN:      TM_OK
+//				TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:      
+//-----------------------------------------------------------------------------
+//
+
+
+tmErrorCode_t 
+tmbslPhyMYSTI110ESetBasicModeControl (
+    tmUnitSelect_t                   		phyUnitId,   
+    ptmbslPhyBasicModeControl_t      		pPhyBasicModeControl
+    );
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyGetBasicModeStatus:
+//
+// DESCRIPTION: This function will get the Basic Mode Status of the PHY device 
+//				such as the speed, duplex mode 
+//
+// RETURN:      TM_OK
+//				TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:      
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyMYSTI110EGetBasicModeStatus (
+    tmUnitSelect_t                  		phyUnitId,   
+    ptmbslPhyBasicModeStatus_t    			pPhyBasicModeStatus     
+    );
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyAutoNegotiate:
+//
+// DESCRIPTION: This function will enable the Auto negotiation of the PHY device 
+//				with Link Partner. Best possible performance configuration is 
+//				selected automatically during this process
+//
+// RETURN:      TM_OK
+//				TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:      
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyMYSTI110EAutoNegotiate (
+    tmUnitSelect_t                       	phyUnitId,   
+    ptmbslPhyAutoNegotitationMask_t      	pAutoNegotiationMask
+    );
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyMYSTI110ELoopBack:
+//
+// DESCRIPTION: Function will enable or disable the PHY device in the Loopback mode.
+//
+// RETURN:      TM_OK
+//				TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:      
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyMYSTI110ELoopBack (
+    tmUnitSelect_t                      	phyUnitId,   
+    tmbslPhyEnableDisable_t           		loopbackMode
+	);
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhySoftReset:
+//
+// DESCRIPTION: Function will do the soft reset of the PHY device
+
+// RETURN:      TM_OK
+//				TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:      
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyMYSTI110ESoftReset (
+    tmUnitSelect_t                     		phyUnitId      
+	);
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyGetLinkStatus:
+//
+// DESCRIPTION: Function will get the link status
+
+// RETURN:      TM_OK
+//				TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:      
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyMYSTI110EGetLinkStatus (
+    tmUnitSelect_t                          phyUnitId,   
+    ptmbslPhyEnableDisable_t           		pLinkStatus
+	);
+
+#if        defined(__cplusplus)
+}
+#endif  // defined(__cplusplus)
+
+#endif //_TMBSLPHYMYSTI110E_H_
diff -Naur u-boot-2009.08/drivers/net/lipp_6300eth/tmbslPhyRTL8211BN.c u-boot-2009.08_alpha2/drivers/net/lipp_6300eth/tmbslPhyRTL8211BN.c
--- u-boot-2009.08/drivers/net/lipp_6300eth/tmbslPhyRTL8211BN.c	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/net/lipp_6300eth/tmbslPhyRTL8211BN.c	2009-12-21 21:32:36.000000000 -0600
@@ -0,0 +1,1235 @@
+/*
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ *
+ * Copyright (c) 2006-2007, LIPP Alliance
+ * All Rights Reserved.
+ *
+ *---------------------------------------------------------------------------
+ * %filename:     tmbslPhyRTL8211BN.h %
+ * %pid_version:              1.0 %
+ *---------------------------------------------------------------------------
+ * DESCRIPTION: Macros and function prototypes for RTL8211BN PHY
+ *
+ * DOCUMENT REF: Datasheet Realtek Semiconductor RTL8211BN-GR
+ *               Integrated 10/100/1000 Gigabit Ethernet Transceiver
+ *               Rev. 1.0, April 3, 2008
+ *
+ * NOTES:        None
+ *-----------------------------------------------------------------------------
+ *
+*/
+
+#include "tmNxTypes.h"
+#include "tmNxCompId.h"
+/*  Project include files */
+
+#include "tmbslPhy.h"
+//#include "tmbslPhyRTL8211BN.h"
+#include "tmhwLIPP6100Eth_Cfg.h"
+
+/* Defines */
+
+#define PHY_UNIT_ID_COUNT			1
+
+#define PHY_TIMEOUT				(0x0FFFFFFF)
+
+#define TMBSLPHYRTL8211_PHY_MMIO_ADDRESS0	(0xC0000000)
+
+#define ANAR_DEFAULT_VAL			(0xADE1)
+#define KTCR1_DEFAULT_VAL			(0x300)
+
+/* Global Data */
+ /* Initialize with base address of GMAC. This will be used to access MAC Address & MAC data register */
+
+tmbslPhyRTL8211Context_t gEthContext[PHY_UNIT_ID_COUNT] = {{TMBSLPHYRTL8211_PHY_MMIO_ADDRESS0}};
+
+typedef	enum	_tmbslPhyRTL8211Reg_t
+{
+    /* Basic mode control */
+    tmbslPhyRTL8211Bmcr			= 0x0,
+    /* Basic mode status */
+    tmbslPhyRTL8211Bmsr			= 0x1,
+
+    /* PHY ID1 register */
+    tmbslPhyRTL8211PhyIdr1		= 0x2,
+
+    /* PHY ID2 register */
+    tmbslPhyRTL8211PhyIdr2		= 0x3,
+
+    /* Auto negotiation advertisement register */
+    tmbslPhyRTL8211Anar			= 0x4,
+
+    /* Auto negotiation link partner ability register */
+    tmbslPhyRTL8211Anlpar		= 0x5,
+
+    /* Auto negotiation expansion register */
+    tmbslPhyRTL8211Aner			= 0x6,
+
+    /* Auto negotiation next page transmit register */
+    tmbslPhyRTL8211AnnPtr		= 0x7,
+
+    /* Auto negotiation Link Partner received Next Page */
+    tmbslPhyRTL8211Annprr		= 0x8,
+
+    /* Auto negotiation 1000 Base-T Master-Slave Control register*/
+    tmbslPhyRTL82111ktcr		= 0x9,
+
+    /* Auto negotiation 1000 Base-T Master-Slave status register*/
+    tmbslPhyRTL82111kstsr		= 0xA,
+
+    /* 0xB-1E are reserved */
+
+    /*Extended status register */
+    tmbslPhyRTL82111kscr		= 0xF,
+
+    /**** Vendor Specific Registers *****/
+    /* PHY Specific Control register */
+    tmbslPhyRTL8211Phycr		= 0x10,
+
+   /* PHY Specific Status register */
+    tmbslPhyRTL8211Physr		= 0x11,
+
+   /* Interrupt Enable register */
+    tmbslPhyRTL8211Ier			= 0x12,
+
+   /* Interrupt Status register */
+    tmbslPhyRTL8211Isr  		= 0x13,
+
+   /* Receive Error Counter register */
+    tmbslPhyRTL8211Rxerr		= 0x15,
+
+   /* LED Control register */
+    tmbslPhyRTL8211Ledcr		= 0x18
+
+} tmbslPhyRTL8211Reg_t, *ptmbslPhyRTL8211Reg_t;
+
+
+/* Static functions definition */
+
+static tmErrorCode_t
+tmbslPhyRTL8211Read (
+	tmUnitSelect_t		ethUnitId,
+	tmbslPhyRTL8211Reg_t	reg,
+	pUInt16			pVal
+	);
+
+
+static tmErrorCode_t
+tmbslPhyRTL8211Write (
+    tmUnitSelect_t		ethUnitId,
+    tmbslPhyRTL8211Reg_t	reg,
+    UInt16			val
+	);
+
+/* Exported functions */
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyRTL8211BNGetSWVersion:
+//
+// DESCRIPTION: This function returns the PHY device interface software version
+//		information
+//
+// RETURN:      TM_OK
+//
+// NOTES:       This API can be called anytime i.e. before initializing the PHY
+//		or in PowerOff state.
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyRTL8211BNGetSWVersion (
+	ptmSWVersion_t	pPhyVersion
+	)
+{
+	pPhyVersion->compatibilityNr = TMBSL_PHY_COMPATIBILITY_NR;
+	pPhyVersion->majorVersionNr = TMBSL_PHY_MAJOR_VERSION_NR;
+	pPhyVersion->minorVersionNr = TMBSL_PHY_MINOR_VERSION_NR;
+
+	return TM_OK;
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyRTL8211BNGetCapabilities:
+//
+// DESCRIPTION: This function returns the PHY capabilities for the specified PHY
+//		unit. The function is callable at any time to return the unit's
+//		capabilities (PHY unit initialization is not necessary).
+//		Capabilities may be different among multiple PHY units.For completeness,
+//		a PHY BSL user should call this function for each PHY unit to
+//		determine its individual capabilities.
+//
+// RETURN:      TM_OK
+//
+// NOTES:       This API can be called anytime i.e. before initializing the PHY.
+//
+//-----------------------------------------------------------------------------
+
+
+tmErrorCode_t
+tmbslPhyRTL8211BNGetCapabilities (
+    tmUnitSelect_t		ethUnitId,
+    ptmbslPhyCapabilities_t  	pPhyCaps
+    )
+
+{
+    UInt16 bmsr,extStat;
+
+    /*  Read the PHY capabilites from the BMSR register */
+    tmbslPhyRTL8211Read(ethUnitId, tmbslPhyRTL8211Bmsr, &bmsr);
+
+
+    /*  Read the extended status register */
+    tmbslPhyRTL8211Read(ethUnitId, tmbslPhyRTL82111kstsr, &extStat);
+
+
+    pPhyCaps->T4Support100Base =
+        (((bmsr & TMBSL_PHYRTL8211_BMSR_T4100BASE) > 0) ? True : False);
+
+    pPhyCaps->Tx_FullDuplexSupport100Base =
+        (((bmsr &TMBSL_PHYRTL8211_BMSR_X100BASEFD) > 0) ? True : False);
+
+    pPhyCaps->Tx_HalfDuplexSupport100Base =
+        (((bmsr &TMBSL_PHYRTL8211_BMSR_X100BASEHD) > 0) ? True : False);
+
+    pPhyCaps->Tx_FullDuplexSupport10Base =
+        (((bmsr &TMBSL_PHYRTL8211_BMSR_10MBPSFD) > 0) ? True : False);
+
+    pPhyCaps->Tx_HalfDuplexSupport10Base =
+        (((bmsr &TMBSL_PHYRTL8211_BMSR_10MBPSHD) > 0) ? True : False);
+
+    pPhyCaps->preAmbleSuppresionCapability =
+        (((bmsr &TMBSL_PHYRTL8211_BMSR_PREAMBLE_SUP) > 0) ? True : False);
+
+    pPhyCaps->autoNegotiationAbility =
+                (((bmsr &TMBSL_PHYRTL8211_BMSR_AN_ABLE) > 0) ? True : False);
+
+
+    pPhyCaps->X1000BaseFDSupport =
+                (((extStat &TMBSL_PHYRTL8211_1KSCR_1000BASEX_FD) > 0) ? True : False);
+
+    pPhyCaps->X1000BaseHDSupport =
+                (((extStat &TMBSL_PHYRTL8211_1KSCR_1000BASEX_HD) > 0) ? True : False);
+
+    pPhyCaps->T1000BaseFDSupport =
+                (((extStat &TMBSL_PHYRTL8211_1KSCR_1000BASET_FD) > 0) ? True : False);
+
+    pPhyCaps->T1000BaseHDSupport =
+                (((extStat &TMBSL_PHYRTL8211_1KSCR_1000BASET_HD) > 0) ? True : False);
+
+    pPhyCaps->ledStatusSupport = True ;
+
+    /* Other capabilites set to False */
+    pPhyCaps->nextPageIndication = False;
+
+    pPhyCaps->force100MbpsTxOff = False;
+
+    pPhyCaps->bypassSymbolAlignment =False;
+
+    pPhyCaps->badSSDDetectionConfig = False;
+
+    return TM_OK;
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyRTL8211BNInit:
+//
+// DESCRIPTION: This function initializes the PHY device. It should be called
+//		before any access to the device is made.
+//
+// RETURN:      TM_OK
+//
+// NOTES:       This function initializes the PHY device with the following
+//		default initial configuration.No Autonegotiation is done in the
+//		initialization function
+//-----------------------------------------------------------------------------
+
+
+tmErrorCode_t
+tmbslPhyRTL8211BNInit(
+    tmUnitSelect_t	ethUnitId
+    )
+{
+    tmErrorCode_t	ethStatus = TM_OK;
+    UInt32		timeout = 0;
+    UInt16		regval = 0;
+    UInt16 id1, id2;
+
+    gEthContext[ethUnitId].pRegs = gtmhwLIPP6100Eth_Base[ethUnitId].baseAddress;
+
+    regval = TMBSL_PHYRTL8211_BMCR_RST_VAL;
+
+    ethStatus = tmbslPhyRTL8211Write(ethUnitId,tmbslPhyRTL8211Bmcr,regval);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus;
+    }
+
+    /* Check if PHY is back to normal condition */
+    ethStatus = tmbslPhyRTL8211Read(ethUnitId,tmbslPhyRTL8211Bmcr,&regval);
+
+    while( (regval & TMBSL_PHYRTL8211_BMCR_RST_VAL) && (timeout < PHY_TIMEOUT) )
+    {
+        ethStatus = tmbslPhyRTL8211Read(ethUnitId,tmbslPhyRTL8211Bmcr,&regval);
+
+        if(ethStatus != TM_OK)
+        {
+            break;
+        }
+
+        timeout++;
+    }
+
+    if(ethStatus != TM_OK)
+    {
+        return(ethStatus);
+    }
+
+    if( (timeout == PHY_TIMEOUT) && (regval & TMBSL_PHYRTL8211_BMCR_RST_VAL) )
+    {
+        return(TMBSL_ERR_PHY_INIT_FAILED);
+    }
+
+    /* Read PHY Identification Register */
+    ethStatus = tmbslPhyRTL8211Read(ethUnitId,tmbslPhyRTL8211PhyIdr1,&id1);
+
+    if (ethStatus != TM_OK)
+    {
+        return (ethStatus);
+    }
+
+    ethStatus = tmbslPhyRTL8211Read(ethUnitId,tmbslPhyRTL8211PhyIdr2,&id2);
+
+    if (ethStatus != TM_OK)
+    {
+        return (ethStatus);
+    }
+
+    if( (id1 == 0x1c) && (id2 == 0xC912) )
+    {
+        /* IDs are valid. Do Nothing */
+    }
+    else
+    {
+        return(TMBSL_ERR_PHY_NOT_SUPPORTED);
+    }
+
+    regval = 0;
+
+    /* Set the PHY for the 10Mbps and Half Duplex mode */
+    ethStatus = tmbslPhyRTL8211Write(ethUnitId,tmbslPhyRTL8211Bmcr,regval);
+
+    if(ethStatus != TM_OK)
+    {
+        return (ethStatus);
+    }
+
+    return TM_OK;
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyRTL8211BNDeinit:
+//
+// DESCRIPTION: This function de-initializes the PHY device. Once the device is
+//		deinitilized device will no more be available to access
+//
+// RETURN:      TM_OK
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNDeinit(
+    tmUnitSelect_t	ethUnitId
+    )
+
+{
+    tmErrorCode_t	ethStatus = TM_OK;
+    UInt16		bmcr = 0;
+
+    bmcr |= TMBSL_PHYRTL8211_BMCR_RST_VAL;
+
+    /* All the registers will be reset */
+    ethStatus = tmbslPhyRTL8211Write(ethUnitId,tmbslPhyRTL8211Bmcr,bmcr);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus;
+    }
+    else
+    {
+        return TM_OK;
+    }
+}
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyRTL8211BNSetPowerState:
+//
+// DESCRIPTION: This function will set the Power State of the PHY device to specified
+//		power state
+//
+// RETURN:      TM_OK
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyRTL8211BNSetPowerState(
+    tmUnitSelect_t	ethUnitId ,
+    tmPowerState_t	phyPowerState
+    )
+
+{
+    tmErrorCode_t	ethStatus = TM_OK;
+    UInt16		bmcr = 0;
+
+    ethStatus = tmbslPhyRTL8211Read(ethUnitId, tmbslPhyRTL8211Bmcr, &bmcr);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus;
+    }
+
+    if( (phyPowerState == tmPowerOn) || (phyPowerState == tmPowerOff) )
+    {
+        if(phyPowerState == tmPowerOff)
+        {
+            bmcr |= TMBSL_PHYRTL8211_BMCR_PWRDN_EN;
+        }
+        else
+        {
+            bmcr &=TMBSL_PHYRTL8211_BMCR_PWRDN_CLR;
+        }
+
+        ethStatus = tmbslPhyRTL8211Write(ethUnitId,tmbslPhyRTL8211Bmcr,bmcr);
+
+        return ethStatus;
+
+    }
+    else
+    {
+        return TMBSL_ERR_PHY_NOT_SUPPORTED;
+    }
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyRTL8211BNGetPowerState:
+//
+// DESCRIPTION: This function will get the preset power state of the PHY device
+//
+// RETURN:      TM_OK
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyRTL8211BNGetPowerState(
+    tmUnitSelect_t	ethUnitId ,
+    ptmPowerState_t	phyPowerState
+    )
+
+{
+    tmErrorCode_t	ethStatus = TM_OK;
+    UInt16		regVal = 0;
+
+    ethStatus = tmbslPhyRTL8211Read(ethUnitId,tmbslPhyRTL8211Bmcr,&regVal);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus ;
+    }
+
+    *phyPowerState = (((regVal & TMBSL_PHYRTL8211_BMCR_PWRDN_EN) > 0) ? tmPowerOff : tmPowerOn);
+
+    return TM_OK;
+}
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyRTL8211BNGetBasicModeControl:
+//
+// DESCRIPTION: This function will get the basic configuration of the PHY device.
+//
+// RETURN:      TM_OK
+//
+// NOTES:       See #define for the Basic Mode Control
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyRTL8211BNGetBasicModeControl (
+    tmUnitSelect_t			ethUnitId,
+    ptmbslPhyBasicModeControl_t		pPhyBasicModeControl
+    )
+{
+    tmErrorCode_t	ethStatus = TM_OK;
+    UInt16		bmcr;
+
+    /* Read the present settings of the BMCR register */
+    ethStatus = tmbslPhyRTL8211Read(ethUnitId,tmbslPhyRTL8211Bmcr,&bmcr);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus;
+    }
+
+    pPhyBasicModeControl->enableCollisionTest =
+                (((bmcr & TMBSL_PHYRTL8211_BMCR_COLTEST ) > 0) ? True : False);
+
+    pPhyBasicModeControl->duplexMode =
+                (((bmcr & TMBSL_PHYRTL8211_BMCR_FD_EN ) > 0) ? tmbslPhyFullDuplex : tmbslPhyHalfDuplex);
+
+    switch(bmcr & TMBSL_PHYRTL8211_BMCR_SPEED_MSK)
+    {
+        case TMBSL_PHYRTL8211_BMCR_SPEED_1G:
+            pPhyBasicModeControl->speed = tmbslPhySpeed1Gbps;
+            break;
+
+        case TMBSL_PHYRTL8211_BMCR_SPEED_100:
+            pPhyBasicModeControl->speed = tmbslPhySpeed100Mbps;
+            break;
+
+        case TMBSL_PHYRTL8211_BMCR_SPEED_10:
+            pPhyBasicModeControl->speed = tmbslPhySpeed10Mbps;
+            break;
+
+        default:
+            break;
+    }
+
+    return TM_OK;
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyRTL8211BNSetBasicModeControl:
+//
+// DESCRIPTION: This function will configure the PHY device for the Basic Mode.
+//
+// RETURN:      TM_OK
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyRTL8211BNSetBasicModeControl (
+    tmUnitSelect_t			ethUnitId,
+    ptmbslPhyBasicModeControl_t		pPhyBasicModeControl
+    )
+{
+    tmErrorCode_t	ethStatus = TM_OK;
+    UInt16		bmcr = 0;
+
+    if(pPhyBasicModeControl->enableCollisionTest == True)
+    {
+        bmcr |= TMBSL_PHYRTL8211_BMCR_COLTEST;
+    }
+
+    if(pPhyBasicModeControl->duplexMode == True)
+    {
+        bmcr |= TMBSL_PHYRTL8211_BMCR_FD_EN;
+    }
+
+    switch(pPhyBasicModeControl->speed)
+    {
+
+        case tmbslPhySpeed1Gbps :
+            bmcr |= TMBSL_PHYRTL8211_BMCR_SPEED_1G;
+            break;
+
+        case tmbslPhySpeed100Mbps :
+            bmcr |= TMBSL_PHYRTL8211_BMCR_SPEED_100;
+            break;
+
+        case tmbslPhySpeed10Mbps :
+            bmcr |= TMBSL_PHYRTL8211_BMCR_SPEED_10;
+            break;
+
+        default:
+            break;
+
+    }
+
+    /* Write the result to the BMC register */
+    ethStatus = tmbslPhyRTL8211Write(ethUnitId,tmbslPhyRTL8211Bmcr,bmcr);
+
+    return ethStatus;
+}
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyRTL8211BNGetBasicModeStatus:
+//
+// DESCRIPTION: This function will get the Basic Mode Status of the PHY device
+//		such as the speed, duplex mode and other statuses
+//
+// RETURN:      TM_OK
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyRTL8211BNGetBasicModeStatus (
+    tmUnitSelect_t		ethUnitId,
+    ptmbslPhyBasicModeStatus_t	pPhyBasicModeStatus
+    )
+
+{
+    tmErrorCode_t	ethStatus = TM_OK;
+    UInt16		bmsr,bmcr,linkan;
+    UInt16		speedVal;
+
+    /* Read the PHY status from the BMSR register */
+    ethStatus = tmbslPhyRTL8211Read(ethUnitId, tmbslPhyRTL8211Bmsr, &bmsr);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus ;
+    }
+
+    /* Read the PHY control register from the BMCR register */
+    ethStatus = tmbslPhyRTL8211Read(ethUnitId, tmbslPhyRTL8211Bmcr, &bmcr);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus ;
+    }
+
+    /* Read the autonegotiation status from Link and Autonegotiation register*/
+    ethStatus = tmbslPhyRTL8211Read(ethUnitId, tmbslPhyRTL8211Physr, &linkan);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus ;
+    }
+
+    pPhyBasicModeStatus->jabberDetect = (((bmsr & TMBSL_PHYRTL8211_BMSR_JAB_VAL) > 0) ? True : False);
+
+    pPhyBasicModeStatus->remoteFaultDetected = (((bmsr & TMBSL_PHYRTL8211_BMSR_RF_VAL) > 0) ? True : False);
+
+    pPhyBasicModeStatus->autoNegotiationComplete = (((bmsr & TMBSL_PHYRTL8211_BMSR_AN_VAL) > 0) ? True : False);
+
+    pPhyBasicModeStatus->loopBackEnabled = (((bmcr & TMBSL_PHYRTL8211_BMCR_LPBK_VAL) > 0) ? True : False);
+
+    if((bmcr & TMBSL_PHYRTL8211_BMCR_AN_EN) == 0)
+    {
+        /* Not an auto negotiation. So read the values from BMCR */
+        pPhyBasicModeStatus->duplexMode =
+                (((bmcr & TMBSL_PHYRTL8211_BMCR_FD_EN ) > 0) ? tmbslPhyFullDuplex : tmbslPhyHalfDuplex);
+
+        switch(bmcr & TMBSL_PHYRTL8211_BMCR_SPEED_MSK)
+        {
+            case TMBSL_PHYRTL8211_BMCR_SPEED_1G:
+                pPhyBasicModeStatus->speed = tmbslPhySpeed1Gbps;
+                break;
+
+            case TMBSL_PHYRTL8211_BMCR_SPEED_100:
+                pPhyBasicModeStatus->speed = tmbslPhySpeed100Mbps;
+                break;
+
+            case TMBSL_PHYRTL8211_BMCR_SPEED_10:
+                pPhyBasicModeStatus->speed = tmbslPhySpeed10Mbps;
+                break;
+
+            default:
+                break;
+        }
+
+    }
+    else
+    {
+        /* If autonegotiation is enabled, read from LINK_AN register */
+        pPhyBasicModeStatus->duplexMode =
+                (((linkan & TMBSL_PHYRTL8211_PHYSTAT_DUPLEX) > 0) ? tmbslPhyFullDuplex : tmbslPhyHalfDuplex);
+
+        speedVal = TMBSL_PHYRTL8211_PHYSTAT_SPEED_MSK & linkan;
+
+        switch(speedVal)
+        {
+            case TMBSL_PHYRTL8211_PHYSTAT_SPEED_1000 :
+                pPhyBasicModeStatus->speed = tmbslPhySpeed1Gbps;
+                break;
+            case TMBSL_PHYRTL8211_PHYSTAT_SPEED_100 :
+                pPhyBasicModeStatus->speed = tmbslPhySpeed100Mbps;
+                break;
+            case TMBSL_PHYRTL8211_PHYSTAT_SPEED_10 :
+                pPhyBasicModeStatus->speed = tmbslPhySpeed10Mbps ;
+                break;
+            default:
+                break;
+        }
+
+    }
+
+    return TM_OK;
+}
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyRTL8211BNAutoNegotiate:
+//
+// DESCRIPTION: This function will enable the Auto negotiation of the PHY device
+//		with Link Partner. Best possible performance configuration is
+//		selected automatically during this process
+//
+// RETURN:      TM_OK
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyRTL8211BNAutoNegotiate (
+    tmUnitSelect_t			ethUnitId,
+    ptmbslPhyAutoNegotitationMask_t	pAutoNegotiationMask
+    )
+{
+    tmErrorCode_t	ethStatus = TM_OK;
+    UInt32		timeout = 0;
+
+    UInt16 regVal = ANAR_DEFAULT_VAL;
+    UInt16 mask =0;
+
+    ethStatus = tmbslPhyRTL8211Write(ethUnitId,tmbslPhyRTL8211Anar,regVal);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus ;
+    }
+
+    if(pAutoNegotiationMask->masknextPageDesired == True)
+    {
+        mask |= TMBSL_PHYRTL8211_ANAR_NP;
+    }
+
+    if(pAutoNegotiationMask->maskRemoteFault == True)
+    {
+        mask |= TMBSL_PHYRTL8211_ANAR_ADV_RF;
+    }
+
+    if(pAutoNegotiationMask->maskAsymmetricPause == True)
+    {
+        mask |= TMBSL_PHYRTL8211_ANAR_AP;
+    }
+
+    if(pAutoNegotiationMask->maskPauseFrame == True)
+    {
+        mask |= TMBSL_PHYRTL8211_ANAR_PAUSE;
+    }
+
+    if(pAutoNegotiationMask->mask100BaseTxFullDuplexSupport == True)
+    {
+        mask |= TMBSL_PHYRTL8211_ANAR_100B_TX_FD;
+    }
+
+    if(pAutoNegotiationMask->mask100BaseTxSupport == True)
+    {
+        mask |= TMBSL_PHYRTL8211_ANAR_100B_TX_HD;
+    }
+
+    if(pAutoNegotiationMask->mask10BaseTFullDuplexSupport == True)
+    {
+        mask |= TMBSL_PHYRTL8211_ANAR_10B_TX_FD;
+    }
+
+    if(pAutoNegotiationMask->mask10BaseTSupport == True)
+    {
+        mask |= TMBSL_PHYRTL8211_ANAR_10B_TX_HD;
+    }
+
+    /* Clear the corresponding bits in the regVal*/
+    regVal &= ~(mask);
+
+    /* Program the Auto negotiation mask */
+    tmbslPhyRTL8211Write(ethUnitId,tmbslPhyRTL8211Anar,regVal);
+
+    /* For 1G configuration */
+    regVal = KTCR1_DEFAULT_VAL;
+
+    mask =0;
+
+    ethStatus = tmbslPhyRTL8211Write(ethUnitId,tmbslPhyRTL82111ktcr,regVal);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus ;
+    }
+
+    if(pAutoNegotiationMask->maskMSConfigEn == True)
+    {
+        mask |= TMBSL_PHYRTL8211_1KTCR_MS_CONFIG;
+    }
+
+    if(pAutoNegotiationMask->maskMasterEn == True)
+    {
+        mask |= TMBSL_PHYRTL8211_1KTCR_MASTER_EN;
+    }
+
+    if(pAutoNegotiationMask->maskMultiPortEn == True)
+    {
+        mask |= TMBSL_PHYRTL8211_1KTCR_MULTIPORT_EN;
+    }
+
+    if(pAutoNegotiationMask->mask1000BaseTFullDuplexSupport == True)
+    {
+        mask |= TMBSL_PHYRTL8211_1KTCR_1000BT_FD;
+    }
+
+    if(pAutoNegotiationMask->mask1000BaseTHalfDuplexSupport == True)
+    {
+        mask |= TMBSL_PHYRTL8211_1KTCR_1000BT_HD;
+    }
+
+    /* Clear the corresponding bits in the regVal*/
+    regVal &= ~(mask);
+
+    /* Program the master/Slave config register 1KTCR */
+    tmbslPhyRTL8211Write(ethUnitId,tmbslPhyRTL82111ktcr,regVal);
+
+    /* 1G config ends */
+
+    /* Enable the Auto negotiation in the BMCR register
+    ** First clear the auto negotiate bit and then enable
+    */
+    tmbslPhyRTL8211Read(ethUnitId,tmbslPhyRTL8211Bmcr,&regVal);
+
+    /* Clear autonegotiation bit */
+    regVal &= TMBSL_PHYRTL8211_BMCR_AN_CLR;
+
+    regVal |= TMBSL_PHYRTL8211_BMCR_AN_EN;
+
+    tmbslPhyRTL8211Write(ethUnitId,tmbslPhyRTL8211Bmcr,regVal);
+
+    /* Wait till the Auto negotiation is complete Or Do we need to set the Timeout */
+    tmbslPhyRTL8211Read(ethUnitId,tmbslPhyRTL8211Bmsr,&regVal);
+
+    /* While the Autonegotiation is not complete, stay in loop */
+    while(((regVal & TMBSL_PHYRTL8211_BMSR_AN_VAL) != TMBSL_PHYRTL8211_BMSR_AN_VAL) &&
+            (timeout < PHY_TIMEOUT) )
+    {
+        ethStatus = tmbslPhyRTL8211Read(ethUnitId,tmbslPhyRTL8211Bmsr,&regVal);
+
+        if(ethStatus != TM_OK)
+        {
+            break;
+        }
+
+        timeout++;
+    }
+
+    if(ethStatus != TM_OK)
+    {
+        return(ethStatus);
+    }
+
+    return TM_OK;
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyRTL8211BNLoopBack:
+//
+// DESCRIPTION: Function will enable or disable the PHY device in the Loopback
+//		mode.
+//
+// RETURN:      TM_OK
+// NOTES:
+//-----------------------------------------------------------------------------
+
+
+tmErrorCode_t
+tmbslPhyRTL8211BNLoopBack (
+    tmUnitSelect_t		ethUnitId,
+    tmbslPhyEnableDisable_t	loopbackMode
+    )
+{
+    tmErrorCode_t	ethStatus = TM_OK;
+    UInt16		bmcr;
+
+    /* Read the existing settings of the BMCR register */
+    ethStatus = tmbslPhyRTL8211Read(ethUnitId,tmbslPhyRTL8211Bmcr,&bmcr);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus ;
+    }
+
+    if(tmbslPhyEnable == loopbackMode)
+    {
+        bmcr |= TMBSL_PHYRTL8211_BMCR_LPBK_VAL;
+    }
+    else if(tmbslPhyDisable == loopbackMode)
+    {
+        bmcr &= TMBSL_PHYRTL8211_BMCR_LPBK_CLR;
+    }
+    else
+    {
+        ethStatus = TMBSL_ERR_PHY_NOT_SUPPORTED;
+    }
+
+    /* Write the Loopback setting to the BMCR register */
+    ethStatus = tmbslPhyRTL8211Write(ethUnitId,tmbslPhyRTL8211Bmcr,bmcr);
+
+    return ethStatus;
+}
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyRTL8211BNSoftReset:
+//
+// DESCRIPTION: Function will do the soft reset of the PHY device
+
+// RETURN:      TM_OK
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNSoftReset (
+    tmUnitSelect_t	ethUnitId
+	)
+
+{
+    tmErrorCode_t	ethStatus = TM_OK;
+
+    /* All the registers will be reset */
+    ethStatus = tmbslPhyRTL8211Write(ethUnitId,tmbslPhyRTL8211Bmcr,TMBSL_PHYRTL8211_BMCR_RST_VAL);
+
+    return ethStatus;
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyRTL8211BNGetLinkStatus:
+//
+// DESCRIPTION: Function will get the link status
+
+// RETURN:      TM_OK
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyRTL8211BNGetLinkStatus (
+    tmUnitSelect_t		ethUnitId,
+    ptmbslPhyEnableDisable_t	pLinkStatus
+    )
+{
+    tmErrorCode_t	ethStatus = TM_OK;
+    UInt16		ansr;
+
+    /* Read the ANSR register */
+    ethStatus = tmbslPhyRTL8211Read(ethUnitId,tmbslPhyRTL8211Physr,&ansr);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus ;
+    }
+
+    *pLinkStatus =
+    (((ansr & TMBSL_PHYRTL8211_PHYSTAT_LINK_RT) > 0) ? tmbslPhyEnable : tmbslPhyDisable);
+
+    return(TM_OK);
+}
+
+//-----------------------------------------------------------------------------
+//	Local static functions
+//-----------------------------------------------------------------------------
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyRTL8211Read:
+//
+// DESCRIPTION: Function will read from the Specified PHY register
+
+// RETURN:
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+static tmErrorCode_t
+tmbslPhyRTL8211Read (
+    tmUnitSelect_t		ethUnitId,
+    tmbslPhyRTL8211Reg_t	reg,
+    pUInt16			pVal
+	)
+
+{
+    UInt32		timeout = 0;
+    UInt32 		pEthRegs;
+    volatile UInt32	*pAdrReg;
+    volatile UInt32	*pDataReg;
+    UInt32		regValue;
+
+    /* get Ethernet Module Reg Pointer  */
+    pEthRegs = gEthContext[ethUnitId].pRegs;
+
+    /* Get the Address register */
+    pAdrReg = (UInt32*)(pEthRegs+TMHW_LIPP6100ETH_ADR_REG_OFFSET) ;
+    pDataReg = (UInt32*)(pEthRegs+TMHW_LIPP6100ETH_DATA_REG_OFFSET) ;
+
+    /* Program the Register address in the MII */
+    regValue = *pAdrReg;
+
+    /* Clear the earlier register value in Address register and write the new value */
+    regValue &= TMHW_LIPP6100ETH_ADR_PHY_REG_CLR;
+    regValue |= reg << TMHW_LIPP6100ETH_ADR_PHY_REG_POS;
+
+    /* Clear the bit GMII write for read operation */
+    regValue &= TMHW_LIPP6100ETH_ADR_PHY_RD_CLR;
+
+    regValue |= TMHW_LIPP6100ETH_ADR_PHY_EN_VAL;
+
+    *pAdrReg = regValue;
+
+    /* Wait till the read operation is complete */
+
+    do
+    {
+        timeout++;
+
+    }while ( ((*pAdrReg & TMHW_LIPP6100ETH_ADR_PHY_EN_VAL) == tmbslPhyEnable) &&
+                   (timeout < PHY_TIMEOUT) );
+
+    if( (timeout == PHY_TIMEOUT) &&
+        ((*pAdrReg & TMHW_LIPP6100ETH_ADR_PHY_EN_VAL) == tmbslPhyEnable) )
+    {
+        return(TMBSL_ERR_PHY_READ_FAILED);
+    }
+
+    /* Read the data from the data register */
+
+    *pVal = (UInt16) *pDataReg;
+
+    return TM_OK;
+}
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyRTL8211Write:
+//
+// DESCRIPTION: Function will Write to the Specified PHY register
+
+// RETURN:
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+static tmErrorCode_t
+tmbslPhyRTL8211Write (
+    tmUnitSelect_t		ethUnitId,
+    tmbslPhyRTL8211Reg_t	reg,
+    UInt16			val
+	)
+
+{
+    UInt32		pEthRegs;
+    volatile UInt32	*pAdrReg;
+    volatile UInt32	*pDataReg;
+    UInt32		regValue;
+    UInt32		timeout = 0;
+
+    /* Get the Ethernet Module Reg pointer */
+    pEthRegs = gEthContext[ethUnitId].pRegs;
+
+    /* Get the Address register */
+    pAdrReg = (UInt32*)(pEthRegs+TMHW_LIPP6100ETH_ADR_REG_OFFSET) ;
+    pDataReg = (UInt32*)(pEthRegs+TMHW_LIPP6100ETH_DATA_REG_OFFSET) ;
+
+    /* Write the data into data register  */
+    *pDataReg = 0;
+    *pDataReg = val;
+
+    /* Program the Register address */
+    regValue = *pAdrReg;
+
+    /* Clear the earlier register value in Address register */
+    regValue &= TMHW_LIPP6100ETH_ADR_PHY_REG_CLR;
+    regValue |= reg << TMHW_LIPP6100ETH_ADR_PHY_REG_POS;
+
+    /* Set Write operation bit and enable write */
+    regValue |= TMHW_LIPP6100ETH_ADR_PHY_WR_VAL |
+               TMHW_LIPP6100ETH_ADR_PHY_EN_VAL ;
+
+    /* Write the value back to Address register */
+    *pAdrReg = regValue;
+
+    /* wait till the write operation is complete */
+
+    do
+    {
+        timeout++;
+    }
+    while (((*pAdrReg & TMHW_LIPP6100ETH_ADR_PHY_EN_VAL) == tmbslPhyEnable) &&
+            (timeout < PHY_TIMEOUT));
+
+    if ((timeout == PHY_TIMEOUT) &&
+        ((*pAdrReg & TMHW_LIPP6100ETH_ADR_PHY_EN_VAL) == tmbslPhyEnable) )
+    {
+        return(TMBSL_ERR_PHY_WRITE_FAILED);
+    }
+
+    return TM_OK;
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyRTL8211BNGetIdentifier:
+//
+// DESCRIPTION: This function will get the Phy Identifiers
+//
+// RETURN:      TMBSL_ERR_PHY_NOT_SUPPORTED
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyRTL8211BNGetIdentifier(
+    tmUnitSelect_t		phyUnitId,
+    ptmbslPhyIdentifier_t     	pPhyIdentifier
+    )
+{
+    return (TMBSL_ERR_PHY_NOT_SUPPORTED);
+}
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyRTL8211BNGetLinkPartnerCapabilities:
+//
+// DESCRIPTION: This function will get the Link Partner Capabilities.
+//
+// RETURN:      TMBSL_ERR_PHY_NOT_SUPPORTED
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyRTL8211BNGetLinkPartnerCapabilities (
+    tmUnitSelect_t			ethUnitId,
+    ptmbslPhyLinkPartnerCapabilities_t	pPhyLinkPartnerCapabilities
+    )
+{
+    return (TMBSL_ERR_PHY_NOT_SUPPORTED);
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyGetCounters:
+//
+// DESCRIPTION: This function will get the Phy counters
+//
+// RETURN:      TMBSL_ERR_PHY_NOT_SUPPORTED
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyGetCounters(
+    tmUnitSelect_t		phyUnitId,
+    ptmbslPhyCounters_t     	pPhyCounters
+    )
+{
+    tmErrorCode_t	ethStatus = TM_OK;
+    UInt16		rxerr = 0;
+
+    /* Read the ANSR register */
+    ethStatus = tmbslPhyRTL8211Read(phyUnitId, tmbslPhyRTL8211Rxerr, &rxerr);
+
+    if(ethStatus != TM_OK)
+    {
+        return ethStatus ;
+    }
+
+    pPhyCounters->rxErrorCounter           = rxerr;
+    pPhyCounters->disconnectCounter        = 0;
+    pPhyCounters->falseCarrierEventCounter = 0;
+
+    return(TM_OK);
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyPcsSetConfig:
+//
+// DESCRIPTION: This function will set the pcs configuration
+//
+// RETURN:      TMBSL_ERR_PHY_NOT_SUPPORTED
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyPcsSetConfig(
+    tmUnitSelect_t		phyUnitId,
+    ptmbslPhyPcsConfig_t	pPhyPcsConfig
+    )
+{
+    return (TMBSL_ERR_PHY_NOT_SUPPORTED);
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyPcsGetConfig:
+//
+// DESCRIPTION:
+//
+// RETURN:      TMBSL_ERR_PHY_NOT_SUPPORTED
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyPcsGetConfig (
+    tmUnitSelect_t		phyUnitId,
+    ptmbslPhyPcsConfig_t    	pPhyPcsConfig
+    )
+{
+    return (TMBSL_ERR_PHY_NOT_SUPPORTED);
+}
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyBist:
+//
+// DESCRIPTION:
+//
+// RETURN:      TMBSL_ERR_PHY_NOT_SUPPORTED
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+ tmErrorCode_t
+tmbslPhyBist(
+    tmUnitSelect_t		phyUnitId,
+    tmbslPhyPseudoRandomSeq_t	phyPsedoRandomSeq ,
+    pUInt8                     	pBistState
+)
+{
+    return (TMBSL_ERR_PHY_NOT_SUPPORTED);
+}
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyConfigBypass:
+//
+// DESCRIPTION:
+//
+// RETURN:      TMBSL_ERR_PHY_NOT_SUPPORTED
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyConfigBypass(
+    tmUnitSelect_t	phyUnitId,
+    ptmbslPhyBypass_t	pPhyBypass
+)
+{
+    return (TMBSL_ERR_PHY_NOT_SUPPORTED);
+}
+
diff -Naur u-boot-2009.08/drivers/net/lipp_6300eth/tmbslPhyRTL8211BN.h u-boot-2009.08_alpha2/drivers/net/lipp_6300eth/tmbslPhyRTL8211BN.h
--- u-boot-2009.08/drivers/net/lipp_6300eth/tmbslPhyRTL8211BN.h	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/net/lipp_6300eth/tmbslPhyRTL8211BN.h	2009-12-14 18:52:16.000000000 -0600
@@ -0,0 +1,680 @@
+/*
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ *
+ * Copyright (c) 2006-2007, LIPP Alliance
+ * All Rights Reserved.
+ *
+ *---------------------------------------------------------------------------
+ * %filename:     tmbslPhyRTL8211.h %
+ * %pid_version:              1.0 %
+ *---------------------------------------------------------------------------
+ * DESCRIPTION: Macros and function prototypes for RTL8211 PHY
+ *
+ * DOCUMENT REF: Datasheet Realtek Semiconductor RTL8211BN-GR
+ *               Integrated 10/100/1000 Gigabit Ethernet Transceiver
+ *               Rev. 1.0, April 3, 2008
+ *
+ * NOTES:        None
+ *
+ *-----------------------------------------------------------------------------
+ *
+*/
+
+#ifndef tmbslPhyRTL8211_H_
+#define tmbslPhyRTL8211_H
+
+#if        defined(__cplusplus)
+extern "C"
+{
+#endif  // defined(__cplusplus)
+
+
+#include "tmNxTypes.h"
+#include "tmbslPhy.h"
+
+/* Macros */
+
+/* MAC Macros */
+#define TMHW_LIPP6100ETH_ADR_REG_OFFSET  (0x010)
+#define TMHW_LIPP6100ETH_DATA_REG_OFFSET (0x014)
+
+#define TMHW_LIPP6100ETH_ADR_PHY_REG_CLR (0xFFFFF83F)
+#define TMHW_LIPP6100ETH_ADR_PHY_REG_POS (6)
+#define TMHW_LIPP6100ETH_ADR_PHY_WR_VAL  (0x2)
+#define TMHW_LIPP6100ETH_ADR_PHY_RD_CLR  (0xFFFFFFFD)
+#define TMHW_LIPP6100ETH_ADR_PHY_EN_VAL  (0x1)
+
+/*PHY Macros */
+/*************** Basic Mode control register ************/
+#define TMBSL_PHYRTL8211_BMCR_RST_VAL (0x8000)
+
+/* Enable loopback */
+#define TMBSL_PHYRTL8211_BMCR_LPBK_VAL (0x4000)
+#define TMBSL_PHYRTL8211_BMCR_LPBK_CLR (0xBFFF)
+
+/* Set Speed to 1Gbps */
+#define TMBSL_PHYRTL8211_BMCR_SPEED_1G (0x40)
+
+/* Set Speed to 100Mbps */
+#define TMBSL_PHYRTL8211_BMCR_SPEED_100 (0x2000)
+
+/* Set Speed */
+#define TMBSL_PHYRTL8211_BMCR_SPEED_10 (0)
+
+/* Speed mask */
+#define TMBSL_PHYRTL8211_BMCR_SPEED_MSK (0x2040)
+
+/* Enable autonegotiation */
+#define TMBSL_PHYRTL8211_BMCR_AN_EN (0x1000)
+#define TMBSL_PHYRTL8211_BMCR_AN_CLR (0xFFFFEFFF)
+
+/* Set power down mode */
+#define TMBSL_PHYRTL8211_BMCR_PWRDN_EN (0x800)
+
+/* Disable  power down mode */
+#define TMBSL_PHYRTL8211_BMCR_PWRDN_CLR (0xF7FF)
+
+/* Isolate PHY enable */
+#define TMBSL_PHYRTL8211_BMCR_ISO_PHY (0x400)
+
+/* Auto negotiation restart */
+#define TMBSL_PHYRTL8211_BMCR_AN_RESTART (0x200)
+
+/* Collision Test enable */
+#define TMBSL_PHYRTL8211_BMCR_COLTEST (0x80)
+
+/* Full duplex enable */
+#define TMBSL_PHYRTL8211_BMCR_FD_EN (0x100)
+
+/****** Basic Mode status Register bits ******/
+
+/* Autonegotiation complete value */
+#define TMBSL_PHYRTL8211_BMSR_T4100BASE (0x8000)
+
+#define TMBSL_PHYRTL8211_BMSR_X100BASEFD (0x4000)
+
+#define TMBSL_PHYRTL8211_BMSR_X100BASEHD (0x2000)
+
+#define TMBSL_PHYRTL8211_BMSR_10MBPSFD (0x1000)
+
+#define TMBSL_PHYRTL8211_BMSR_10MBPSHD (0x800)
+
+#define TMBSL_PHYRTL8211_BMSR_T2100BASEFD (0x400)
+
+#define TMBSL_PHYRTL8211_BMSR_T2100BASEHD (0x200)
+
+/* Preamble suppression capability */
+#define TMBSL_PHYRTL8211_BMSR_PREAMBLE_SUP (0x40)
+
+#define TMBSL_PHYRTL8211_BMSR_AN_VAL (0x20)
+
+/* Remote fault value */
+#define TMBSL_PHYRTL8211_BMSR_RF_VAL (0x10)
+
+/* PHY is able to perform auto negotiation */
+#define TMBSL_PHYRTL8211_BMSR_AN_ABLE (0x8)
+
+#define TMBSL_PHYRTL8211_BMSR_LINK_STAT (0x4)
+
+/* Jabber detected */
+#define TMBSL_PHYRTL8211_BMSR_JAB_VAL (0x2)
+
+/****** Auto Negotiation Advertisement Register bits ******/
+
+/* Advertise Next page desired */
+#define TMBSL_PHYRTL8211_ANAR_NP (0x8000)
+
+/* Advertise remote fault */
+#define TMBSL_PHYRTL8211_ANAR_ADV_RF (0x2000)
+
+/* Advertise asymmetric pause */
+#define TMBSL_PHYRTL8211_ANAR_AP (0x800)
+
+/* Advertise pause frame support */
+#define TMBSL_PHYRTL8211_ANAR_PAUSE (0x400)
+
+/* Advertise 100Base-TX full duplex support */
+#define TMBSL_PHYRTL8211_ANAR_100B_TX_FD (0x100)
+
+/* Advertise 100Base-TX half duplex support */
+#define TMBSL_PHYRTL8211_ANAR_100B_TX_HD (0x80)
+
+/* Advertise 10Base-TX full duplex support */
+#define TMBSL_PHYRTL8211_ANAR_10B_TX_FD (0x40)
+
+/* Advertise 10Base-TX half duplex support */
+#define TMBSL_PHYRTL8211_ANAR_10B_TX_HD (0x20)
+
+
+/****** 1KTCR : 1000 Base-T Master-Slave Control Register ******/
+
+/* Maser/Slave config enable */
+#define TMBSL_PHYRTL8211_1KTCR_MS_CONFIG (0x1000)
+
+/* Set PHY as master */
+#define TMBSL_PHYRTL8211_1KTCR_MASTER_EN (0x800)
+
+/* Advertise device as Multiport */
+#define TMBSL_PHYRTL8211_1KTCR_MULTIPORT_EN (0x400)
+
+/* 1000 Base-T Full duplex capable */
+#define TMBSL_PHYRTL8211_1KTCR_1000BT_FD (0x200)
+
+/* 1000 Base-T Half duplex capable */
+#define TMBSL_PHYRTL8211_1KTCR_1000BT_HD (0x100)
+
+/********1KSTSR 1000 BASE-T Master-Slave Status Register *****/
+#define TMBSL_PHYRTL8211_1KSTSR_MAN_FAULT (0x8000)
+#define TMBSL_PHYRTL8211_1KSTSR_MASTER (0x4000)
+#define TMBSL_PHYRTL8211_1KSTSR_LOCAL_RX_STAT (0x2000)
+#define TMBSL_PHYRTL8211_1KSTSR_REMOTE_RX_STAT (0x1000)
+#define TMBSL_PHYRTL8211_1KSTSR_PART_FD_CAP (0x800)
+#define TMBSL_PHYRTL8211_1KSTSR_PART_HD_CAP (0x400)
+
+/********** EXTENDED STATUS REGISTER ******************/
+#define TMBSL_PHYRTL8211_1KSCR_1000BASEX_FD (0x8000)
+#define TMBSL_PHYRTL8211_1KSCR_1000BASEX_HD (0x4000)
+#define TMBSL_PHYRTL8211_1KSCR_1000BASET_FD (0x2000)
+#define TMBSL_PHYRTL8211_1KSCR_1000BASET_HD (0x1000)
+
+/**************** VENDOR SPECIFIC REGISTERS **************/
+/****** PHY Specific Control register ******/
+#define TMBSL_PHYRTL8211_PHYCR_CRS          (0x800)
+#define TMBSL_PHYRTL8211_PHYCR_FORCE_LNK    (0x400)
+#define TMBSL_PHYRTL8211_PHYCR_DIS_CLK125   (0x10)
+#define TMBSL_PHYRTL8211_PHYCR_DIS_JABBER   (0x1)
+
+/* Bit 6:5 MDI Crossover Mode
+ *   00: Manual MDI Crossover configuration
+ *   01: Manual MDI configuration
+ *   10: Default value
+ * Note: Before setting register, address 0xE bit 10 needs to be set to 1.
+ *       After setting register, a PHY reset is required.
+ */
+#define TMBSL_PHYRTL8211_PHYCR_MDI_XOVR_MODE_MSK (0x60)
+#define TMBSL_PHYRTL8211_PHYCR_MAN_MDI_XOVR      (0x0)
+#define TMBSL_PHYRTL8211_PHYCR_MAN_MDI           (0x1)
+#define TMBSL_PHYRTL8211_PHYCR_MDI               (0x2)
+
+/****** PHY Specific Status Register ******/
+/* Bit 15:14 Speed
+ *   00: 10 Mbps
+ *   01: 100 Mbps
+ *   10: 1000 Mbps
+ *   11: Reserved
+ */
+#define TMBSL_PHYRTL8211_PHYSTAT_SPEED_MSK       (0xC000)
+#define TMBSL_PHYRTL8211_PHYSTAT_SPEED_10        (0x0)
+#define TMBSL_PHYRTL8211_PHYSTAT_SPEED_100       (0x1)
+#define TMBSL_PHYRTL8211_PHYSTAT_SPEED_1000      (0x2)
+
+#define TMBSL_PHYRTL8211_PHYSTAT_DUPLEX          (0x2000)
+#define TMBSL_PHYRTL8211_PHYSTAT_PAGE_RX         (0x1000)
+#define TMBSL_PHYRTL8211_PHYSTAT_SPD_DUP_RES     (0x800)
+#define TMBSL_PHYRTL8211_PHYSTAT_LINK_RT         (0x400)
+#define TMBSL_PHYRTL8211_PHYSTAT_MDI_XOVR_STAT   (0x40)
+#define TMBSL_PHYRTL8211_PHYSTAT_JABBER_RT       (0x1)
+
+/****** Interrupt Enable Register ******/
+#define TMBSL_PHYRTL8211_IER_AN_ERR              (0x8000)
+#define TMBSL_PHYRTL8211_IER_SPEED_CHG           (0x4000)
+#define TMBSL_PHYRTL8211_IER_DUPLEX_CHG          (0x2000)
+#define TMBSL_PHYRTL8211_IER_PG_RX               (0x1000)
+#define TMBSL_PHYRTL8211_IER_AN_COMP             (0x800)
+#define TMBSL_PHYRTL8211_IER_LNK_STAT_CHG        (0x400)
+#define TMBSL_PHYRTL8211_IER_SYMBOL_ERR          (0x200)
+#define TMBSL_PHYRTL8211_IER_FALSE_CARRIER       (0x100)
+#define TMBSL_PHYRTL8211_IER_MDI_XOVR_CHG        (0x40)
+#define TMBSL_PHYRTL8211_IER_POLARITY_CHG        (0x2)
+#define TMBSL_PHYRTL8211_IER_JABBER              (0x1)
+
+/****** Interrupt Status Register ******/
+#define TMBSL_PHYRTL8211_ISR_AN_ERR              (0x8000)
+#define TMBSL_PHYRTL8211_ISR_SPEED_CHG           (0x4000)
+#define TMBSL_PHYRTL8211_ISR_DUPLEX_CHG          (0x2000)
+#define TMBSL_PHYRTL8211_ISR_PG_RX               (0x1000)
+#define TMBSL_PHYRTL8211_ISR_AN_COMP             (0x800)
+#define TMBSL_PHYRTL8211_ISR_LNK_STAT_CHG        (0x400)
+#define TMBSL_PHYRTL8211_ISR_SYMBOL_ERR          (0x200)
+#define TMBSL_PHYRTL8211_ISR_FALSE_CARRIER       (0x100)
+#define TMBSL_PHYRTL8211_ISR_MDI_XOVR_CHG        (0x40)
+#define TMBSL_PHYRTL8211_ISR_POLARITY_CHG        (0x2)
+#define TMBSL_PHYRTL8211_ISR_JABBER              (0x1)
+
+/****** LED Control Register ******/
+#define TMBSL_PHYRTL8211_LEDCR_DISABLE_LED        (0x8000)
+#define TMBSL_PHYRTL8211_LEDCR_LINK_CTL           (0x8)
+#define TMBSL_PHYRTL8211_LEDCR_RX_CTL             (0x2)
+#define TMBSL_PHYRTL8211_LEDCR_TX_CTL             (0x1)
+
+//Structure Declarations
+//-----------------------------------------------------------------------------
+//	Typedefinition
+//-----------------------------------------------------------------------------
+typedef struct  _tmbslPhyRTL8211Context_t
+{
+    UInt32	pRegs;         // Array ETHERNET Module regs
+} tmbslPhyRTL8211Context_t, *ptmbslPhyRTL8211Context_t;
+
+//-----------------------------------------------------------------------------
+// Exported functions:
+//-----------------------------------------------------------------------------
+//
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyGetSWVersion:
+//
+// DESCRIPTION: This function returns the PHY device interface software version
+//		information
+//
+// RETURN:      TM_OK
+//
+// NOTES:       This API can be called anytime i.e. before initializing the PHY
+//		or in PowerOff state.
+//-----------------------------------------------------------------------------
+
+tmErrorCode_t
+tmbslPhyRTL8211BNGetSWVersion (
+    ptmSWVersion_t	pPhyVersion
+    );
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyGetCapabilities:
+//
+// DESCRIPTION: This function returns the PHY capabilities for the specified PHY
+//		unit. The function is callable at any time to return the unit's
+//		capabilities (PHY unit initialization is not necessary).
+//		Capabilities may be different among multiple PHY units.For completeness,
+//		a PHY BSL user should call this function for each PHY unit to
+//		determine its individual capabilities.
+//
+// RETURN:      TM_OK
+//
+// NOTES:       This API can be called anytime i.e. before initializing the PHY
+//		or in PowerOff state.
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNGetCapabilities (
+    tmUnitSelect_t		phyUnitId,
+    ptmbslPhyCapabilities_t	pPhyCaps
+    );
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyInit:
+//
+// DESCRIPTION: This function initializes the PHY device. It should be called
+//		before any access to the device is made.
+//
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:       This function initializes the PHY device with the following
+//		default initial configuration.
+//		1. Enable the auto negotiation. In auto-negotiation mode the
+//		highest possible performance mode is selected automatically
+//		which the Link Partner also supports. (In auto negotiation mode
+//		speed and duplex mode will be selected by means of auto negotiation.
+//		Writing to speed and duplex mode does not have meaning in auto
+//		negotiation mode.)
+//		2. The device abilities are programmed to Auto negotiation advertise
+//		register. None of the device abilities are masked. If the PHY
+//		device does not support Auto-negotiation mode, then this function
+//		will set the PHY to basic capabilities of the device.The function
+//		tmbslPhyGetBasicModeControl can be called after tmbsPhyInit to
+//		know what are the default configurations the tmbslPhyInit function
+//		has set to
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNInit(
+    tmUnitSelect_t	phyUnitId
+    );
+
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyDeinit:
+//
+// DESCRIPTION: This function de-initializes the PHY device. Once the device is
+//		deinitilized device will no more be available to access
+//
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+tmErrorCode_t
+tmbslPhyRTL8211BNDeinit(
+    tmUnitSelect_t	phyUnitId
+    );
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhySetPowerState:
+//
+// DESCRIPTION: This function will set the Power State of the PHY device to specified
+//		power state
+//
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNSetPowerState(
+    tmUnitSelect_t	phyUnitId ,
+    tmPowerState_t	phyPowerState
+    );
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyGetPowerState:
+//
+// DESCRIPTION: This function will get the preset power state of the PHY device
+//
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNGetPowerState(
+    tmUnitSelect_t	phyUnitId,
+    ptmPowerState_t	phyPowerState
+    );
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyGetBasicModeControl:
+//
+// DESCRIPTION: This function will get the basic configuration of the PHY device.
+//
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:       PHY device is initialized using the function tmbslPhyInit.
+//		tmbslPhyInit Enable the Auto negotiation mode and will configure
+//		the PHY device for the maximum performance mode available. After
+//		the device is initialized this function can be called to know the
+//		present settings of the PHY device. If application wants to change
+//		the settings it can call tmbslPhySetBasicModeControl to change
+//		the configuration after knowing the capabilities of the PHY device
+//		and Link Partner. #define for the Basic Mode Control
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNGetBasicModeControl (
+    tmUnitSelect_t			phyUnitId,
+    ptmbslPhyBasicModeControl_t      	pPhyBasicModeControl
+    );
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhySetBasicModeControl:
+//
+// DESCRIPTION: This function will configure the PHY device for the Basic Mode.
+//
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+
+tmErrorCode_t
+tmbslPhyRTL8211BNSetBasicModeControl (
+    tmUnitSelect_t			phyUnitId,
+    ptmbslPhyBasicModeControl_t      	pPhyBasicModeControl
+    );
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyGetBasicModeStatus:
+//
+// DESCRIPTION: This function will get the Basic Mode Status of the PHY device
+//		such as the speed, duplex mode
+//
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNGetBasicModeStatus (
+    tmUnitSelect_t			phyUnitId,
+    ptmbslPhyBasicModeStatus_t    	pPhyBasicModeStatus
+    );
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyAutoNegotiate:
+//
+// DESCRIPTION: This function will enable the Auto negotiation of the PHY device
+//		with Link Partner. Best possible performance configuration is
+//		selected automatically during this process
+//
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNAutoNegotiate (
+    tmUnitSelect_t			phyUnitId,
+    ptmbslPhyAutoNegotitationMask_t    	pAutoNegotiationMask
+    );
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyGetIdentifier:
+//
+// DESCRIPTION: This function gets the PHY device Identifier
+//
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNGetIdentifier (
+    tmUnitSelect_t		phyUnitId,
+    ptmbslPhyIdentifier_t     	pPhyIdentifier
+    );
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyGetLinkPartnerCapabilities:
+//
+// DESCRIPTION: This function will get the Link Partner Capabilities.
+//
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNGetLinkPartnerCapabilities (
+    tmUnitSelect_t                         phyUnitId,
+    ptmbslPhyLinkPartnerCapabilities_t     pPhyLinkPartnerCapabilities
+    );
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyGetCounters:
+//
+// DESCRIPTION: This function will get the present counter values of the PHY counters
+//
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNGetCounters (
+    tmUnitSelect_t		phyUnitId,
+    ptmbslPhyCounters_t		pPhyCounters
+    );
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyPcsConfig:
+//
+// DESCRIPTION: This function will configure the Physical layer configurations.
+//
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNPcsConfig (
+    tmUnitSelect_t		phyUnitId,
+    ptmbslPhyPcsConfig_t    	pPhyPcsConfig
+    );
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyPcsGetConfig:
+//
+// DESCRIPTION: This function will get the present PCS configuration
+//
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNPcsGetConfig (
+    tmUnitSelect_t		phyUnitId,
+    ptmbslPhyPcsConfig_t    	pPhyPcsConfig
+    );
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyBist:
+//
+// DESCRIPTION: This function will do the Built In Self Test and the result
+//		will be indicated in the pBistState
+//
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNBist (
+    tmUnitSelect_t		phyUnitId,
+    tmbslPhyPseudoRandomSeq_t  	phyPsedoRandomSeq ,
+    pUInt8			pBistState
+	);
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyConfigBypass:
+//
+// DESCRIPTION: This function will bypass the functional blocks within 100Base-Tx transmitter
+//
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNConfigBypass (
+    tmUnitSelect_t	phyUnitId,
+    ptmbslPhyBypass_t  	pPhyBypass
+	);
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyConfigBypass:
+//
+// DESCRIPTION: Function will enable or disable the PHY device in the Loopback mode.
+//
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNLoopBack (
+    tmUnitSelect_t		phyUnitId,
+    tmbslPhyEnableDisable_t	loopbackMode
+	);
+
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhySoftReset:
+//
+// DESCRIPTION: Function will do the soft reset of the PHY device
+
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNSoftReset (
+    tmUnitSelect_t	phyUnitId
+	);
+
+//-----------------------------------------------------------------------------
+// FUNCTION:    tmbslPhyGetLinkStatus:
+//
+// DESCRIPTION: Function will get the link status
+
+// RETURN:      TM_OK
+//		TM_BSLPHY_ERR_BAD_UNIT_NUM
+//
+// NOTES:
+//-----------------------------------------------------------------------------
+//
+
+tmErrorCode_t
+tmbslPhyRTL8211BNGetLinkStatus (
+    tmUnitSelect_t		phyUnitId,
+    ptmbslPhyEnableDisable_t	pLinkStatus
+	);
+
+#if        defined(__cplusplus)
+}
+#endif  // defined(__cplusplus)
+
+#endif
diff -Naur u-boot-2009.08/drivers/serial/ns16550.c u-boot-2009.08_alpha2/drivers/serial/ns16550.c
--- u-boot-2009.08/drivers/serial/ns16550.c	2010-01-18 19:09:08.000000000 -0600
+++ u-boot-2009.08_alpha2/drivers/serial/ns16550.c	2009-12-17 16:05:45.000000000 -0600
@@ -20,6 +20,7 @@
 #endif
 void NS16550_init (NS16550_t com_port, int baud_divisor)
 {
+#if 1
 	com_port->ier = 0x00;
 #if defined(CONFIG_OMAP) && !defined(CONFIG_OMAP3_ZOOM2)
 	com_port->mdr1 = 0x7;	/* mode select reset TL16C750*/
@@ -44,11 +45,15 @@
 	com_port->mdr1 = 0;	/* /16 is proper to hit 115200 with 48MHz */
 #endif
 #endif /* CONFIG_OMAP */
+#endif
+return ;
+
 }
 
 #ifndef CONFIG_NS16550_MIN_FUNCTIONS
 void NS16550_reinit (NS16550_t com_port, int baud_divisor)
 {
+#if 1
 	com_port->ier = 0x00;
 	com_port->lcr = UART_LCR_BKSE | UART_LCRVAL;
 	com_port->dll = 0;
@@ -60,11 +65,16 @@
 	com_port->dll = baud_divisor & 0xff;
 	com_port->dlm = (baud_divisor >> 8) & 0xff;
 	com_port->lcr = UART_LCRVAL;
+#endif	
 }
 #endif /* CONFIG_NS16550_MIN_FUNCTIONS */
 
 void NS16550_putc (NS16550_t com_port, char c)
 {
+
+	/* To access THR,  set DLAB bit in LCR to 0 */
+	com_port->lcr &= ~((unsigned int)0x00000080);
+
 	while ((com_port->lsr & UART_LSR_THRE) == 0);
 	com_port->thr = c;
 }
@@ -84,8 +94,12 @@
 #ifndef CONFIG_NS16550_MIN_FUNCTIONS
 char NS16550_getc (NS16550_t com_port)
 {
+	/* To access THR,  set DLAB bit in LCR to 0 */
+	com_port->lcr &= ~((unsigned int)0x00000080);
+
 	while ((com_port->lsr & UART_LSR_DR) == 0) {
-#ifdef CONFIG_USB_TTY
+//#ifdef CONFIG_USB_TTY
+#if 0
 		extern void usbtty_poll(void);
 		usbtty_poll();
 #endif
@@ -99,6 +113,9 @@
 
 int NS16550_tstc (NS16550_t com_port)
 {
+	/* To access THR,  set DLAB bit in LCR to 0 */
+	com_port->lcr &= ~((unsigned int)0x00000080);
+
 	return ((com_port->lsr & UART_LSR_DR) != 0);
 }
 
diff -Naur u-boot-2009.08/include/asm-arm/setup.h u-boot-2009.08_alpha2/include/asm-arm/setup.h
--- u-boot-2009.08/include/asm-arm/setup.h	2009-08-31 12:57:42.000000000 -0500
+++ u-boot-2009.08_alpha2/include/asm-arm/setup.h	2010-01-16 01:54:35.000000000 -0600
@@ -184,6 +184,8 @@
 /* command line: \0 terminated string */
 #define ATAG_CMDLINE	0x54410009
 
+#define ATAG_MAC 0x5441000A
+
 struct tag_cmdline {
 	char	cmdline[1];	/* this is the minimum size */
 };
diff -Naur u-boot-2009.08/include/common.h u-boot-2009.08_alpha2/include/common.h
--- u-boot-2009.08/include/common.h	2009-08-31 12:57:42.000000000 -0500
+++ u-boot-2009.08_alpha2/include/common.h	2009-12-17 10:10:29.000000000 -0600
@@ -684,6 +684,16 @@
 #ifdef CONFIG_STATUS_LED
 # include <status_led.h>
 #endif
+
+
+/*
+ * Apollo[CORTEX-A9] Specific
+ */
+#define MACH_TYPE 0x85d
+
+
+
+
 /*
  * Board-specific Platform code can reimplement show_boot_progress () if needed
  */
diff -Naur u-boot-2009.08/include/configs/vpe_apollo.h u-boot-2009.08_alpha2/include/configs/vpe_apollo.h
--- u-boot-2009.08/include/configs/vpe_apollo.h	2010-01-18 19:09:08.000000000 -0600
+++ u-boot-2009.08_alpha2/include/configs/vpe_apollo.h	2010-01-18 19:04:16.000000000 -0600
@@ -66,7 +66,7 @@
 /* input clock of PLL */
 #define	CONFIG_SYS_CLK_FREQ	V_SCLK
 #ifdef CONFIG_PNX_EMU
-#define	CONFIG_SYS_PERICLK_FREQ	25000000
+#define	CONFIG_SYS_PERICLK_FREQ	250000000
 #else
 #define	CONFIG_SYS_PERICLK_FREQ	25000000
 #endif
@@ -105,7 +105,7 @@
  * NS16550 Configuration
  */
 #ifdef CONFIG_PNX_EMU
-#define	V_NS16550_CLK	(76800)	/* 76800 Khz  */
+#define	V_NS16550_CLK	(50000000)	/* 76800 Khz  */
 #else
 #define	V_NS16550_CLK	(25000000)	/* 25MHz  */
 #endif
@@ -131,7 +131,7 @@
 /* allow to overwrite serial and ethaddr */
 #define	CONFIG_ENV_OVERWRITE
 #define	CONFIG_CONS_INDEX	1
-#define	CONFIG_BAUDRATE		4800
+#define	CONFIG_BAUDRATE	115200	
 #define	CONFIG_SYS_BAUDRATE_TABLE	{4800, 9600, 19200, 38400, 57600, 115200}
 
 /* this must be included AFTER the definition of CONFIG_COMMANDS (if any) */
@@ -170,7 +170,10 @@
 	#define CONFIG_CMD_MII		/* MII support			*/
 	#define CONFIG_CMD_MISC		/* Misc functions like sleep etc*/
 	#define CONFIG_CMD_MTDPARTS  /* MTD functions 		*/
-	#define CONFIG_CMD_NAND		/* NAND support			*/
+//	#define CONFIG_CMD_NAND		/* NAND support			*/
+	#define CONFIG_CMD_NOR		/* NOR support			*/
+	#undef CONFIG_CMD_NAND		/* Remove NAND support			*/
+//	#undef CONFIG_CMD_NOR		/* Remove NOR support			*/
 
 	#define CONFIG_NET_MULTI
 	#define CONFIG_BOOTP_SUBNETMASK
@@ -194,8 +197,10 @@
 #ifdef CONFIG_CMD_NET
 
     #define CONFIG_LIPP_6300ETH
-    #define CONFIG_USING_EMU_PHY
-    #define __USING_EMU_PHY__
+//    #define CONFIG_USING_EMU_PHY
+//    #define __USING_EMU_PHY__
+    #define CONFIG_USING_RTL8211_PHY
+    #define __USING_RTL8211_PHY__
     #define TMFL_LIPP6100ETH_GMII_ADDRESS_CSR_VAL 0x4U
     #define TMFL_LIPP6100ETH_GMII_PHY_ADDRESS_VAL 0x0U
     #define __NULL_PHY__
@@ -216,9 +221,15 @@
 /*-----------------------------------------------------------------------
  * Environment configuration
  */
-#define  CONFIG_ENV_IS_NOWHERE
+#if 1
+#define CONFIG_CMD_SAVEENV
+#define CONFIG_ENV_IS_IN_FLASH
+#define CONFIG_ENV_ADDR         0xE0000
+#endif
+
 
 #if (0)        /* TH */
+#define  CONFIG_ENV_IS_NOWHERE
 #if defined(CONFIG_CMD_NAND)
 #undef CONFIG_ENV_IS_NOWHERE
 #define CONFIG_ENV_IS_IN_NAND
@@ -228,17 +239,19 @@
 
 #if defined(CFG_ONENAND)
 #undef  CONFIG_ENV_IS_NOWHERE
-#define	CONFIG_ENV_IS_IN_ONENAND
+#define CONFIG_ENV_IS_IN_ONENAND
 #define CONFIG_ENV_ADDR         0x00120000
 #endif
 
 #define CONFIG_ENV_SIZE		  0x00002000	/* Size of Environment Sector	*/
 
+//#define CONFIG_ENV_SECT_SIZE 0x20000
+
 /*
 #define	CONFIG_BOOTP_MASK	CONFIG_BOOTP_DEFAULT
 */
 
-#define	CONFIG_BOOTDELAY	-1
+#define	CONFIG_BOOTDELAY	3
 
 
 #define CONFIG_SYS_MEM	"mem=64M"
@@ -249,12 +262,31 @@
 #define CONFIG_SYS_UBI ""
 #endif
 
+#if 0
 #define CONFIG_BOOTARGS "root=/dev/nfs rw " CONFIG_SYS_MEM \
 	" console=ttyS0,115200n8" \
 	" ip=192.168.116.25:192.168.116.1:192.168.116.1:255.255.255.0:" \
 	"apollon:eth0:off nfsroot=/tftpboot/nfsroot profile=2 " \
 	CONFIG_SYS_UBI
+#endif
+
+#if 1
+#define CONFIG_BOOTARGS "noinitrd " \
+	"console=ttyS1,115200n8 "\
+	"mtdparts=nx_2016:1m(boot),5m(kernel),32m(root),-(extra) " \
+	"root=/dev/mtdblock2 rw " \
+	"rootfstype=jffs2"
+#endif	
+
+#define	CONFIG_EXTRA_ENV_SETTINGS					\
+	"Image=tftp 0x80008000 Image; go 0x80008000\0"			\
+	"zImage=tftp 0x80180000 zImage; go 0x80180000\0"		\
+	"uImage=tftp 0x80180000 uImage; bootm 0x80180000\0"		\
+	"uboot=tftp 0x80008000 u-boot.bin; go 0x80008000\0"		\
+	"norboot=nor read 0x8000 0x180000 0x400000; go 0x8000\0"	\
+	"bootcmd=run norboot;\0"
 
+#if 0
 #define	CONFIG_EXTRA_ENV_SETTINGS					\
 	"Image=tftp 0x80008000 Image; go 0x80008000\0"			\
 	"zImage=tftp 0x80180000 zImage; go 0x80180000\0"		\
@@ -263,20 +295,26 @@
 	"xloader=tftp 0x80180000 x-load.bin; "				\
 	" cp.w 0x80180000 0x00000400 0x1000; go 0x00000400\0"		\
 	"syncmode50=mw.w 0x1e442 0xc0c4; mw 0x6800a060 0xe30d1201\0"	\
+	"loadaddr=0x8000\0"\
+	"imgaddr=0x180000\0"\
 	"syncmode=mw.w 0x1e442 0xe0f4; mw 0x6800a060 0xe30d1201\0"	\
-	"norboot=cp32 0x18040000 0x80008000 0x200000; go 0x80008000\0"	\
+	"norboot=nor read $loadaddr $imgaddr 0x400000; go $loadaddr\0"	\
 	"oneboot=onenand read 0x80008000 0x40000 0x200000; go 0x80008000\0" \
 	"onesyncboot=run syncmode oneboot\0"				\
 	"updateb=tftp 0x80180000 u-boot-onenand.bin; "			\
 	" onenand erase 0x0 0x20000; onenand write 0x80180000 0x0 0x20000\0" \
 	"ubi=setenv bootargs ${bootargs} ubi.mtd=4 ${mtdparts}; run uImage\0" \
-	"bootcmd=run uboot\0"
-
+	"ubi=setenv bootargs ${bootargs} ubi.mtd=4 ${mtdparts}; run uImage\0" \
+	"bootdelay=5\0" \
+	"bootcmd=run norboot;\0"
+#endif
 /*
  * Miscellaneous configurable options
  */
 #define	V_PROMPT	"Apollo # "
 
+#define CONFIG_APOLLO
+
 #define	CONFIG_SYS_LONGHELP	/* undef to save memory */
 #define	CONFIG_SYS_PROMPT	V_PROMPT
 #define	CONFIG_SYS_CBSIZE	256	/* Console I/O Buffer Size */
diff -Naur u-boot-2009.08/include/configs/vpe_apollo.h~ u-boot-2009.08_alpha2/include/configs/vpe_apollo.h~
--- u-boot-2009.08/include/configs/vpe_apollo.h~	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/include/configs/vpe_apollo.h~	2009-12-17 10:10:29.000000000 -0600
@@ -0,0 +1,406 @@
+/*
+ * (C) Copyright 2005-2009
+ * NXP Semiconuctors,
+ * Tjeu Horsch <tjeu.horsch@nxp.com>
+ *
+ * Configuration settings for the NXP Apollo virtual prototyping environment .
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+#include <asm/sizes.h>
+
+/*
+ * High Level Configuration Options
+ */
+
+#define CONFIG_ARMCORTEXA8	1	/* This is an ARM V7 CPU core */
+#define CONFIG_PNX			1	/* in a NXP nexperia core */
+#define CONFIG_PNX84XX		1	/* which is a APOLLO */
+#define CONFIG_PNX8493		1	/* which is in a pnx8493 */
+
+#if 0     /* 0 is EMU,  1 for VPE */
+#define CONFIG_PNX_VPE		1   /* working with VPE */
+#else
+#define CONFIG_PNX_EMU		1 	/* working on emulator */
+#endif
+
+#include <asm/arch/cpu.h>		/* get chip and board defs */
+#include <asm/arch/pnx84xx.h>
+
+/* Clock config to target*/
+#define PRCM_CONFIG_I		1
+/* #define PRCM_CONFIG_II	1 */
+
+/* Boot method */
+/* uncomment if you use NOR boot */
+/* #define CONFIG_SYS_NOR_BOOT		1  */
+
+/* uncomment if you use NOR */
+/* #define CONFIG_SYS_USE_NOR		1 */
+
+/* uncomment if you want to use UBI */
+/* #define CONFIG_SYS_USE_UBI  */
+
+
+#define	V_SCLK	50000000
+
+/* input clock of PLL */
+#define	CONFIG_SYS_CLK_FREQ	V_SCLK
+#ifdef CONFIG_PNX_EMU
+#define	CONFIG_SYS_PERICLK_FREQ	25000000
+#else
+#define	CONFIG_SYS_PERICLK_FREQ	25000000
+#endif
+#undef	CONFIG_USE_IRQ	/* no support for IRQs */
+#define	CONFIG_MISC_INIT_R
+
+#define	CONFIG_CMDLINE_TAG	1	/* enable passing of ATAGs */
+#define	CONFIG_SETUP_MEMORY_TAGS	1
+#define	CONFIG_INITRD_TAG	1
+#define	CONFIG_REVISION_TAG	1
+
+#define CONFIG_MEMORY_UPPER_CODE
+#define CONFIG_SYS_UBOOT_SIZE		(SZ_4M)
+/*
+ * Size of malloc() pool
+ */
+#define	CONFIG_SYS_MALLOC_LEN	( SZ_2M)
+/* bytes reserved for initial data */
+#define	CONFIG_SYS_GBL_DATA_SIZE	512
+
+/*
+ * Hardware drivers
+ */
+
+/*
+ * SMC91c96 Etherent
+ */
+
+/*
+#define	CONFIG_DRIVER_LAN91C96
+#define	CONFIG_LAN91C96_BASE	(APOLLON_CS1_BASE+0x300)
+#define	CONFIG_LAN91C96_EXT_PHY
+*/
+
+/*
+ * NS16550 Configuration
+ */
+#ifdef CONFIG_PNX_EMU
+#define	V_NS16550_CLK	(76800)	/* 76800 Khz  */
+#else
+#define	V_NS16550_CLK	(25000000)	/* 25MHz  */
+#endif
+
+
+#define	CONFIG_SYS_NS16550
+#define	CONFIG_SYS_NS16550_SERIAL
+#define	CONFIG_SYS_NS16550_REG_SIZE	(-4)
+/*#define	CONFIG_SYS_NS16550_REG_SIZE	(4)  */
+#define	CONFIG_SYS_NS16550_CLK	V_NS16550_CLK	/* 3MHz (1.5MHz*2) */
+#ifdef CONFIG_PNX_EMU
+#define	CONFIG_SYS_NS16550_COM1	PNX84XX_UART3
+#endif
+#ifdef CONFIG_PNX_VPE
+#define	CONFIG_SYS_NS16550_COM1	PNX84XX_UART1
+#endif
+
+/*
+ * select serial console configuration
+ */
+#define	CONFIG_SERIAL1	1	/* UART1 */
+
+/* allow to overwrite serial and ethaddr */
+#define	CONFIG_ENV_OVERWRITE
+#define	CONFIG_CONS_INDEX	1
+#define	CONFIG_BAUDRATE		4800
+#define	CONFIG_SYS_BAUDRATE_TABLE	{4800, 9600, 19200, 38400, 57600, 115200}
+
+/* this must be included AFTER the definition of CONFIG_COMMANDS (if any) */
+#include	<config_cmd_default.h>
+
+/* #define	CONFIG_CMD_DHCP  */
+#undef CONFIG_CMD_NET
+#undef CONFIG_CMD_NFS
+
+#define	CONFIG_CMD_DIAG
+/* #define	CONFIG_CMD_ONENAND  */
+
+#ifdef CONFIG_SYS_USE_UBI
+#define	CONFIG_CMD_JFFS2
+#define	CONFIG_CMD_UBI
+#define	CONFIG_RBTREE
+#define CONFIG_MTD_PARTITIONS
+#endif
+
+#define	CONFIG_CMD_AUTOSCRIPT
+
+
+	#define CONFIG_CMD_BSP		/* Board Specific functions	*/
+/*	#define CONFIG_CMD_CACHE	*//* icache, dcache		*/
+	#define CONFIG_CMD_DHCP		/* DHCP Support			*/
+	#define CONFIG_CMD_DIAG		/* Diagnostics			*/
+	#define CONFIG_CMD_FAT		/* FAT support			*/
+	#define CONFIG_CMD_FLASH	/* flinfo, erase, protect	*/
+/*	#define CONFIG_CMD_I2C		*//* I2C serial bus support	*/
+	#undef  CONFIG_CMD_IMI		/* iminfo			*/
+	#undef  CONFIG_CMD_IMLS		/* List all found images	*/
+/*	#define CONFIG_CMD_JFFS2	*//* JFFS2 Support		*/
+	#define CONFIG_CMD_LOADB	/* loadb			*/
+	#define CONFIG_CMD_LOADS	/* loads			*/
+	#define CONFIG_CMD_MEMORY	/* md mm nm mw cp cmp crc base loop mtest */
+	#define CONFIG_CMD_MII		/* MII support			*/
+	#define CONFIG_CMD_MISC		/* Misc functions like sleep etc*/
+	#define CONFIG_CMD_MTDPARTS  /* MTD functions 		*/
+//	#define CONFIG_CMD_NAND		/* NAND support			*/
+	#define CONFIG_CMD_NOR		/* NOR support			*/
+	#undef CONFIG_CMD_NAND		/* Remove NAND support			*/
+//	#undef CONFIG_CMD_NOR		/* Remove NOR support			*/
+
+	#define CONFIG_NET_MULTI
+	#define CONFIG_BOOTP_SUBNETMASK
+	#define CONFIG_BOOTP_GATEWAY
+	#define CONFIG_BOOTP_DNS
+
+	#define CONFIG_CMD_NFS		/* NFS support		*/
+	#define CONFIG_CMD_NET		/* bootp, tftpboot, rarpboot	*/
+	#undef  CONFIG_CMD_ONENAND	/* OneNAND support		*/
+	#undef  CONFIG_CMD_PCI		/* pciinfo			*/
+/*	#define CONFIG_CMD_PCI		*//* pciinfo			*/
+	#define CONFIG_CMD_PING		/* ping support			*/
+	#define CONFIG_CMD_PORTIO	/* Port I/O			*/
+	#define CONFIG_CMD_REGINFO	/* Register dump		*/
+	#define CONFIG_CMD_RUN		/* run command in env variable	*/
+	#define	CONFIG_CMD_SARI		/* Simple arithmetic operations */
+/*	#define CONFIG_CMD_SDRAM	*//* SDRAM DIMM SPD info printout */
+/*	#define CONFIG_CMD_UBIFS	*//* UBIFS Support		*/
+/*	#define CONFIG_CMD_USB		*//* USB Support			*/\
+
+#ifdef CONFIG_CMD_NET
+
+    #define CONFIG_LIPP_6300ETH
+    #define CONFIG_USING_EMU_PHY
+    #define __USING_EMU_PHY__
+    #define TMFL_LIPP6100ETH_GMII_ADDRESS_CSR_VAL 0x4U
+    #define TMFL_LIPP6100ETH_GMII_PHY_ADDRESS_VAL 0x0U
+    #define __NULL_PHY__
+ //   #define CONFIG_NET_RETRY_COUNT 50
+
+    #define	CONFIG_NETMASK 255.255.255.0
+    #define	CONFIG_IPADDR 192.168.2.5
+    #define	CONFIG_SERVERIP 192.168.2.2
+    #define	CONFIG_BOOTFILE "loadfiles.mi"
+    #define	CONFIG_ETHADDR aa:bb:cc:dd:ee:ff
+
+    #define CONFIG_LOADADDR		0x09F00000
+    #define CONFIG_BOOTP_SERVERIP 10.0.0.9 //dummy
+
+
+#endif
+
+/*-----------------------------------------------------------------------
+ * Environment configuration
+ */
+#define  CONFIG_ENV_IS_NOWHERE
+
+#if (0)        /* TH */
+#if defined(CONFIG_CMD_NAND)
+#undef CONFIG_ENV_IS_NOWHERE
+#define CONFIG_ENV_IS_IN_NAND
+#define CONFIG_ENV_OFFSET		0x0003C000	/* Address of Environment Sector*/
+#endif
+#endif
+
+#if defined(CFG_ONENAND)
+#undef  CONFIG_ENV_IS_NOWHERE
+#define	CONFIG_ENV_IS_IN_ONENAND
+#define CONFIG_ENV_ADDR         0x00120000
+#endif
+
+#define CONFIG_ENV_SIZE		  0x00002000	/* Size of Environment Sector	*/
+
+/*
+#define	CONFIG_BOOTP_MASK	CONFIG_BOOTP_DEFAULT
+*/
+
+#define	CONFIG_BOOTDELAY	-1
+
+
+#define CONFIG_SYS_MEM	"mem=64M"
+
+#ifdef CONFIG_SYS_USE_UBI
+#define CONFIG_SYS_UBI "ubi.mtd=4"
+#else
+#define CONFIG_SYS_UBI ""
+#endif
+
+#define CONFIG_BOOTARGS "root=/dev/nfs rw " CONFIG_SYS_MEM \
+	" console=ttyS0,115200n8" \
+	" ip=192.168.116.25:192.168.116.1:192.168.116.1:255.255.255.0:" \
+	"apollon:eth0:off nfsroot=/tftpboot/nfsroot profile=2 " \
+	CONFIG_SYS_UBI
+
+#define	CONFIG_EXTRA_ENV_SETTINGS					\
+	"Image=tftp 0x80008000 Image; go 0x80008000\0"			\
+	"zImage=tftp 0x80180000 zImage; go 0x80180000\0"		\
+	"uImage=tftp 0x80180000 uImage; bootm 0x80180000\0"		\
+	"uboot=tftp 0x80008000 u-boot.bin; go 0x80008000\0"		\
+	"xloader=tftp 0x80180000 x-load.bin; "				\
+	" cp.w 0x80180000 0x00000400 0x1000; go 0x00000400\0"		\
+	"syncmode50=mw.w 0x1e442 0xc0c4; mw 0x6800a060 0xe30d1201\0"	\
+	"syncmode=mw.w 0x1e442 0xe0f4; mw 0x6800a060 0xe30d1201\0"	\
+	"norboot=cp32 0x18040000 0x80008000 0x200000; go 0x80008000\0"	\
+	"oneboot=onenand read 0x80008000 0x40000 0x200000; go 0x80008000\0" \
+	"onesyncboot=run syncmode oneboot\0"				\
+	"updateb=tftp 0x80180000 u-boot-onenand.bin; "			\
+	" onenand erase 0x0 0x20000; onenand write 0x80180000 0x0 0x20000\0" \
+	"ubi=setenv bootargs ${bootargs} ubi.mtd=4 ${mtdparts}; run uImage\0" \
+	"bootcmd=run uboot\0"
+
+/*
+ * Miscellaneous configurable options
+ */
+#define	V_PROMPT	"Apollo # "
+
+#define	CONFIG_SYS_LONGHELP	/* undef to save memory */
+#define	CONFIG_SYS_PROMPT	V_PROMPT
+#define	CONFIG_SYS_CBSIZE	256	/* Console I/O Buffer Size */
+/* Print Buffer Size */
+#define	CONFIG_SYS_PBSIZE	(CONFIG_SYS_CBSIZE+sizeof(CONFIG_SYS_PROMPT)+16)
+#define	CONFIG_SYS_MAXARGS	16	/* max number of command args */
+/* Boot Argument Buffer Size */
+#define	CONFIG_SYS_BARGSIZE	CONFIG_SYS_CBSIZE
+/* memtest works on */
+#define	CONFIG_SYS_MEMTEST_START	(PNX84XX_SDRC_CS0)
+#define	CONFIG_SYS_MEMTEST_END		(PNX84XX_SDRC_CS0+SZ_32M)
+
+#undef	CONFIG_SYS_CLKS_IN_HZ	/* everything, incl board info, in Hz */
+/* default load address */
+#define	CONFIG_SYS_LOAD_ADDR	(PNX84XX_SDRC_CS0)
+
+/* The PNX84XX uses the timers in the cortex-A9 driven by the SysClk (12/13/19.2)
+ * This rate is divided by a local
+ * divisor.
+ */
+#define	V_PTV	4 	/* TODO: correct value */
+
+#define	CONFIG_SYS_PTV	V_PTV	/* 2^(pvt+1) */
+#define	CONFIG_PERTIMER_CLOCK_HZ (CONFIG_SYS_PERICLK_FREQ)
+#define	CONFIG_SYS_HZ		 1000
+
+/*-----------------------------------------------------------------------
+ * Stack sizes
+ *
+ * The stack sizes are set up in start.S using the settings below
+ */
+#define	CONFIG_STACKSIZE SZ_64K	/* regular stack */
+#ifdef	CONFIG_USE_IRQ
+# define	CONFIG_STACKSIZE_IRQ SZ_4K	/* IRQ stack */
+# define	CONFIG_STACKSIZE_FIQ SZ_4K	/* FIQ stack */
+#endif
+
+/*-----------------------------------------------------------------------
+ * Physical Memory Map
+ */
+#define	CONFIG_NR_DRAM_BANKS	1	/* CS1 may or may not be populated */
+#define	PHYS_SDRAM_1		PNX84XX_SDRC_CS0
+#define	PHYS_SDRAM_1_SIZE	SZ_128M
+#define	PHYS_SDRAM_2		PNX84XX_SDRC_CS1
+
+/*-----------------------------------------------------------------------
+ * FLASH and environment organization
+ */
+#undef	CONFIG_CRAMFS		 /* No CRAM FS support although JFFS2 support */
+#define CONFIG_DOS_PARTITION
+/*-----------------------------------------------------------------------
+ * NOR flash configuration
+ */
+#define CONFIG_SYS_NO_CFI     /* disable nor flash support */
+#ifndef CONFIG_SYS_NO_CFI
+#define CONFIG_SYS_FLASH_CFI
+#define CONFIG_FLASH_CFI_DRIVER
+#define CONFIG_FLASH_CFI_MTD
+#else
+#define CONFIG_SYS_NO_FLASH   /* disable  flash support */
+#undef CONFIG_SYS_FLASH_CFI
+#undef CONFIG_FLASH_CFI_DRIVER
+#undef CONFIG_FLASH_CFI_MTD
+#endif
+
+/*-----------------------------------------------------------------------
+ * NAND flash configuration
+ */
+
+#define CONFIG_SYS_FLASH_BASE		0xc0000000
+#define CONFIG_SYS_MONITOR_BASE		0x0A000000
+
+#undef  CFG_NAND_LEGACY
+#undef  CFG_NAND
+#undef	CONFIG_NAND_NXP_IPA051
+
+#if defined(CONFIG_CMD_NAND)
+#define CONFIG_DMAC_NXP_1902
+#define CONFIG_NAND_NXP_2070
+#define CONFIG_MTD_NX_NAND_HWECC
+#endif
+
+#define CONFIG_SYS_MAX_NAND_DEVICE	4		/* Max number of NAND devices		*/
+#define CONFIG_SYS_NAND_MAX_CHIPS   1       /* TH nuber of chips in a device?)  */
+#define CONFIG_SYS_MAX_FLASH_SECT	(520)
+#define CONFIG_SYS_MAX_FLASH_BANKS 4
+#define CFG_NAND_QUIET			1
+
+/* Note: NAND_BASE refers to the xio profiles, in board_nand_init the correct base
+   values are retreived from the xio profiles
+*/
+#define CONFIG_SYS_NAND_BASE	        0x814, 0x818, 0x81C, 0x834, 0x838
+#define CONFIG_MTD_NAND_VERIFY_WRITE
+#define NAND_MAX_FLOORS 		1
+#define NAND_MAX_CHIPS 			1
+#define NAND_ChipID_UNKNOWN		0x00
+#define SECTORSIZE			512
+
+/* UBIFS support */
+#ifdef CONFIG_CMD_UBIFS
+#define CONFIG_SYS_64BIT_VSPRINTF
+#define CONFIG_LZO
+#endif
+
+#define CONFIG_MTD_DEVICE
+
+#ifdef CONFIG_CMD_UBI
+#define CONFIG_MTD_PARTITIONS
+#define CONFIG_RBTREE
+#else
+#undef  CONFIG_MTD_PARTITIONS
+#undef  CONFIG_RBTREE
+#endif
+
+/* JFFS2 support */
+#ifdef CONFIG_CMD_JFFS2
+#define	CONFIG_JFFS2_CMDLINE		1
+#define	CONFIG_JFFS2_DEV		"nand0"
+#define	CONFIG_JFFS2_NAND
+#define	MTDIDS_DEFAULT			"nand0=sys"
+#define	MTDPARTS_DEFAULT		"mtdparts=sys:11232k@176k(bootfs);sys:4000k@11408k(rootfs)"
+#endif
+
+#endif /* __CONFIG_H */
diff -Naur u-boot-2009.08/include/nor.h u-boot-2009.08_alpha2/include/nor.h
--- u-boot-2009.08/include/nor.h	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/include/nor.h	2010-01-13 20:07:12.000000000 -0600
@@ -0,0 +1,38 @@
+
+/*
+ *
+ * New NOR support -- Makarand Pawagi
+ *
+ */
+
+
+#ifndef _NOR_H_
+#define _NOR_H_
+
+extern void nor_init(void);
+
+
+#include <linux/mtd/compat.h>
+#include <linux/mtd/mtd.h>
+
+typedef struct mtd_info nor_info_t;
+typedef struct erase_info nor_erase_info_t;
+
+extern nor_info_t nor_info;
+extern nor_erase_info_t nor_erase_info;
+
+static inline int nor_read(nor_info_t *info, loff_t ofs, size_t *len, u_char *buf)
+{
+	return info->read(info, ofs, *len, (size_t *)len, (unsigned int)buf);
+}
+
+static inline int nor_write(nor_info_t *info, loff_t ofs, size_t *len, u_char *buf)
+{
+	return info->write(info, ofs, *len, (size_t *)len, (unsigned int)buf);
+}
+
+static inline int nor_erase(nor_info_t *info, nor_erase_info_t *einfo )
+{
+	return info->erase(info, einfo);
+}
+#endif
diff -Naur u-boot-2009.08/lib_arm/board.c u-boot-2009.08_alpha2/lib_arm/board.c
--- u-boot-2009.08/lib_arm/board.c	2010-01-18 19:09:09.000000000 -0600
+++ u-boot-2009.08_alpha2/lib_arm/board.c	2010-01-15 17:38:18.000000000 -0600
@@ -48,6 +48,7 @@
 #include <net.h>
 #include <serial.h>
 #include <nand.h>
+#include <nor.h>
 #include <onenand_uboot.h>
 #include <mmc.h>
 
@@ -271,17 +272,25 @@
 
 init_fnc_t *init_sequence[] = {
 #if defined(CONFIG_ARCH_CPU_INIT)
+#if !defined(CONFIG_APOLLO)
 	arch_cpu_init,		/* basic arch cpu dependent setup */
+#endif	
 #endif
-	board_init,		/* basic board dependent setup */
+#if !defined(CONFIG_APOLLO)
+		board_init,		/* basic board dependent setup */
+#endif
+
 #if defined(CONFIG_USE_IRQ)
 	interrupt_init,		/* set up exceptions */
 #endif
 	timer_init,		/* initialize timer */
-	env_init,		/* initialize environment */
+   env_init,		/* initialize environment */
+#if !defined(CONFIG_APOLLO)	
+	
 	init_baudrate,		/* initialze baudrate settings */
 	serial_init,		/* serial communications setup */
 	console_init_f,		/* stage 1 init of console */
+#endif	
 	display_banner,		/* say that we are here */
 #if defined(CONFIG_DISPLAY_CPUINFO)
 	print_cpuinfo,		/* display cpu info (and speed) */
@@ -292,7 +301,9 @@
 #if defined(CONFIG_HARD_I2C) || defined(CONFIG_SOFT_I2C)
 	init_func_i2c,
 #endif
+#if !defined(CONFIG_APOLLO)
 	dram_init,		/* configure available RAM banks */
+#endif	
 #if defined(CONFIG_CMD_PCI) || defined (CONFIG_PCI)
 	arm_pci_init,
 #endif
@@ -300,8 +311,12 @@
 	NULL,
 };
 
+#define INP32(pReg)             (*(volatile unsigned int *)(pReg))
+#define OUT32(pReg, value)      (*(volatile unsigned int *)(pReg) = (unsigned int)(value))
+
 void start_armboot (void)
 {
+	int i = 0 ;
 	init_fnc_t **init_fnc_ptr;
 	char *s;
 #if defined(CONFIG_VFD) || defined(CONFIG_LCD)
@@ -373,11 +388,17 @@
 	}
 #endif /* CONFIG_LCD */
 
+
 #if defined(CONFIG_CMD_NAND)
 	puts ("NAND:  ");
 	nand_init();		/* go init the NAND */
 #endif
 
+#if defined(CONFIG_CMD_NOR)
+	nor_init();		/* go init the NOR */
+#endif
+
+
 #if defined(CONFIG_CMD_ONENAND)
 	onenand_init();
 #endif
@@ -386,10 +407,9 @@
 	AT91F_DataflashInit();
 	dataflash_print_info();
 #endif
-
 	/* initialize environment */
-	env_relocate ();
-
+  env_relocate ();
+ 
 	puts ("==> Env setup done.\n  ");
 
 #ifdef CONFIG_VFD
diff -Naur u-boot-2009.08/lib_arm/bootm.c u-boot-2009.08_alpha2/lib_arm/bootm.c
--- u-boot-2009.08/lib_arm/bootm.c	2009-08-31 12:57:42.000000000 -0500
+++ u-boot-2009.08_alpha2/lib_arm/bootm.c	2010-01-18 13:26:52.000000000 -0600
@@ -276,4 +276,81 @@
 	params->hdr.size = 0;
 }
 
+void  patch_ataglist( void )
+{
+   int i = 0, cmdline_length, uboot_macaddr=0, uboot_cmdline=0;
+   uchar enetaddr[6];
+   uchar *tmp, *tmp1, *s, *cmdline;   
+   u32 *patch_addr = (u32 *)0x2000, cmdline_words;
+	/* Initialize from environment */
+	if ((s = getenv ("uboot_macaddr")) != NULL) {
+		uboot_macaddr = simple_strtoul (s, NULL, 16);
+	}
+   if ((s = getenv ("uboot_cmdline")) != NULL) {
+		uboot_cmdline = simple_strtoul (s, NULL, 16);
+	}
+   if (uboot_macaddr){
+   
+      if (getenv ("ethaddr")) {
+         eth_getenv_enetaddr("ethaddr", enetaddr);
+         while (*patch_addr)
+         {
+            if (ATAG_MAC == (*(patch_addr + 1)))
+               break;
+            patch_addr += *patch_addr;
+         } 
+    
+         /* Patch The MAC Address along with the MAC TAG Structure */
+         *patch_addr++ = 0x00000004;
+         *patch_addr++ = ATAG_MAC;
+         tmp1 = (uchar *)patch_addr;
+         tmp = enetaddr;
+         for( i = 0; i<6; i ++)
+         {
+            *tmp1++ = *tmp++;
+         }
+         patch_addr++;
+         patch_addr++;
+      }
+   }
+
+   if (uboot_cmdline)
+   {
+      if ((cmdline = getenv ("bootargs")) != NULL) {
+         patch_addr = (u32 *)0x2000;
+         while (*patch_addr)
+         {
+            if (ATAG_CMDLINE == (*(patch_addr + 1)))
+            break;
+            patch_addr += *patch_addr;
+         } 
+      }
+   /* patch command line */
+   
+      cmdline_length = strlen((uchar *)cmdline);
+
+      if ((cmdline_length & 0x3))
+       cmdline_words = (cmdline_length/4) + 1;
+      else
+       cmdline_words = (cmdline_length/4);
+      
+      *patch_addr++ = cmdline_words + 2;
+      *patch_addr++ = ATAG_CMDLINE;
+      tmp1 = (uchar *)patch_addr;
+      tmp = cmdline;
+      for( i = 0; i<cmdline_length; i++)
+      {
+              *tmp1++ = *tmp++;
+  //              *patch_addr++ = *cmdline_ptr++;
+      }
+//      patch_addr +=cmdline_length;
+      if((u32 )tmp1 & 0x3)
+        patch_addr =  ((u32)tmp1 & ~(0x3)) + 4 ;
+      *patch_addr++ = 0x0;
+      *patch_addr++ = 0x0;
+      *patch_addr++ = 0x0;
+   }
+   
+}
+
 #endif /* CONFIG_SETUP_MEMORY_TAGS || CONFIG_CMDLINE_TAG || CONFIG_INITRD_TAG */
diff -Naur u-boot-2009.08/lib_arm/chip.h u-boot-2009.08_alpha2/lib_arm/chip.h
--- u-boot-2009.08/lib_arm/chip.h	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/lib_arm/chip.h	2009-11-21 16:02:24.000000000 -0600
@@ -0,0 +1,35 @@
+/*
+#===========================================================
+#        COPYRIGHT (c) NXP B.V. 2009
+#        All rights are reserved. Reproduction in whole or in part is
+#        prohibited without the written consent of the copyright owner.
+#
+#        Author   : Makarand Pawagi
+#
+#        Filename : chip.h
+#
+#        Purpose  : Generic Chip Definition Header 
+#===========================================================
+*/
+
+#ifndef _CHIP_H_
+#define _CHIP_H_
+
+/****************
+* Include Files *
+*****************/
+
+/**************
+* Definitions *
+***************/
+
+#define REV_A        1
+#define REV_B        2
+#define REV_C        3
+#define REV_D        4
+
+#define SHINER       1
+
+#endif /* _CHIP_H_ */
+
+
diff -Naur u-boot-2009.08/lib_arm/defs.h u-boot-2009.08_alpha2/lib_arm/defs.h
--- u-boot-2009.08/lib_arm/defs.h	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/lib_arm/defs.h	2009-12-14 12:25:04.000000000 -0600
@@ -0,0 +1,141 @@
+#ifndef _DEFS_H
+#define  _DEFS_H
+
+/**********************************/
+/* Additional base types required */
+/**********************************/
+#define voidF void *
+
+/***************************************************************/
+/* Additional labels which may not have been defined elsewhere */
+/***************************************************************/
+#ifndef FALSE
+#define FALSE           0
+#endif
+
+#ifndef TRUE
+#define TRUE            (!FALSE)
+#endif
+
+#ifndef GOOD
+#define GOOD    (0)
+#endif
+
+#ifndef BAD
+#define BAD             (-1)
+#endif
+
+#ifndef SUCCESS
+#define SUCCESS         0
+#endif
+
+#ifndef FAILURE
+#define FAILURE         -1
+#endif
+
+#ifndef YES
+#define YES         1
+#endif
+
+#ifndef NO
+#define NO          0
+#endif
+
+#include "stbcfg.h"
+
+
+#define DOWNLOAD_SERIAL_SUPPORT NO
+#define DOWNLOAD_ETHERNET_SUPPORT NO
+#if SEMIHOSTING_APP == YES
+/* TODO - Include only for SemiHosting */
+#if DOWNLOAD_SERIAL_SUPPORT == NO
+#include <stdio.h>
+#endif
+#endif
+
+#define _MAX_PATH                              260   /* Maximum possible Windows98 path length*/
+#define MAX_NUM_CMDS                       16
+#define EMPTY_BLOCK                           0x00
+#define INUSE_BLOCK                            0x01
+#define MAX_TOTAL_ROM_SIZE             0x40000000 /* 1GB*/
+
+#define MAX_COPY_SIZE                        0x00010000 /* 64K*/
+#define MAX_SECTOR_SIZE                    0x00400000 /* 4MB*/
+
+#define LIBC_BUFF_SIZE                        4096
+
+/*****************************/
+/* Internal Type Definitions */
+/*****************************/
+typedef enum _download_operations
+{
+  OP_DOWNLOAD_BINARY,
+  OP_DOWNLOAD_LIST,
+  OP_SET_ETHERNET,
+  OP_DONE
+} download_op;
+
+typedef enum _cmd_operations
+{
+  OP_ERASE_ALL,
+  OP_ERASE_ALL_EXCEPT_BOOT,
+  OP_ERASE_BOOT,
+  OP_ERASE_BANK,
+  OP_ERASE_AREA,
+  OP_FLASH_BOOT,
+  OP_FLASH_CODE,
+  OP_FLASH_NEXT_CODE,
+  OP_FLASH_NEXT_SECTOR,
+  OP_FLASH_FIXED,
+  OP_PATCH_OTV12SER,
+  OP_PATCH_SSP,
+  OP_SET_HDCP_KEY,
+  OP_EXIT
+} cmd_op;
+
+typedef struct _cmd_info
+{
+  cmd_op       cmd;
+  char            strName[_MAX_PATH+1];
+  u_int8         *ptrFlashAddr;
+  u_int8         block_marker;
+  u_int32       uFileLength;
+  #if SEMIHOSTING_APP == YES
+  FILE           *hHandle;
+  #endif
+  bool           bExists;
+  char           buffer[LIBC_BUFF_SIZE];
+} cmd_info;
+
+
+typedef int (*PFNOPSGET) (void* pParams);   
+typedef void* (*PFNOPS) (void* pParams); 
+typedef bool (*PFNOPSCHECK) (void* pParams);
+
+typedef struct _DOWNLOAD_OPS
+{
+   PFNOPS             fn_ShowContents;
+   PFNOPS             fn_ReadFlashLayout;
+   PFNOPSCHECK   fn_CheckSpecialAreas;
+   PFNOPS             fn_MarkBlocks;
+   PFNOPS             fn_MarkEraseBlocks;
+   PFNOPSGET       fn_GetBankNumber;
+   PFNOPSGET       fn_GetSectorNumber;
+   PFNOPSCHECK   fn_FlashNextSector;
+   PFNOPS             fn_FlashIt;
+   PFNOPS             fn_PatchSSP;
+   PFNOPS             fn_ExecuteCmds;
+   PFNOPS             fn_RangeEmpty;
+}DOWNLOAD_OPS, *PDOWNLOAD_OPS;
+   
+ /* Return codes*/
+#ifndef SUCCESS
+#define SUCCESS 0
+#endif
+
+#ifndef FAILURE
+#define FAILURE -1
+#endif
+
+
+#endif  /* _DEFS_H */
diff -Naur u-boot-2009.08/lib_arm/dmac.c u-boot-2009.08_alpha2/lib_arm/dmac.c
--- u-boot-2009.08/lib_arm/dmac.c	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/lib_arm/dmac.c	2009-12-20 12:40:51.000000000 -0600
@@ -0,0 +1,240 @@
+/*
+#===========================================================
+#        COPYRIGHT (c) NXP B.V. 2009
+#        All rights are reserved. Reproduction in whole or in part is
+#        prohibited without the written consent of the copyright owner.
+#
+#        Author   : Har Yash Bahadur 
+#
+#        Filename : ip1902dmac.c
+#
+#        Purpose  : mini DMA driver
+#===========================================================
+*/
+
+#include "stbcfg.h"
+#include "basetype.h"
+#include "board.h"
+#include "ldr_common.h"
+#include "ldr_types.h"
+#include "dmac.h"
+
+#define DMA_CHAN_0 (0)
+
+#define DMAC_ENB_VAL  (0x0000001)
+#define DMAC_DIS_VAL     (0x0)
+#define DMAC_CHAN_DIS_VAL  (0x0)
+
+
+
+/********************************************************************/
+/*  nx_dmac_trans_comp                                                       */
+/*                                                                  */
+/*  PARAMETERS:                                                     */
+/*                      None         */
+/*                                                                  */
+/*  DESCRIPTION:                                                    */
+/*        Waits of DMA TC interrupt fo channel 0. Also checks the Error INT  */
+/*                                                                  */
+/*  RETURNS:                                                        */
+/*                RETCODE_FAILED                                                  */
+/*                RETCODE_OK                                                  */
+/********************************************************************/
+retcode_t nx_dmac_trans_comp(void)
+{
+   retcode_t ret=RETCODE_OK;
+   u_int32 chanid = DMA_CHAN_0;  /* Use DMA channel 0 */
+   u_int32  int_stat, tc_stat, err_stat;
+
+   /* Wait for completion */
+   while(1)
+   { 
+      /* Read the interrupt status & chan ID */
+      int_stat = readl(IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_REG);
+
+      if(int_stat & (1UL<<chanid)) 
+      {
+         /* Check TC interrupt */
+         tc_stat = readl(IPBGCSFLSHNTWK_DMAC_DMACINTTCSTATUS_REG);
+         if(tc_stat & (1UL<<chanid)) 
+         {
+            writel((1UL<<chanid), IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_REG);
+            break;
+         }
+         /* Check Error interrupt */
+         err_stat = readl(IPBGCSFLSHNTWK_DMAC_DMACINTERRORSTATUS_REG);
+         if(err_stat & (1UL<<chanid)) 
+         {
+            writel((1UL<<chanid), IPBGCSFLSHNTWK_DMAC_DMACINTERRCLR_REG);
+
+            /* Tell the world that an ERROR occured during DMA xfer */
+
+            ret = RETCODE_FAILED;
+            break;
+         }
+      }
+   }
+
+   /* Disable channel */
+   writel(DMAC_CHAN_DIS_VAL, IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_REG);
+
+   /* Disable DMAC */
+   writel(DMAC_DIS_VAL, IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_REG);
+
+   return ret;
+}
+
+
+
+/********************************************************************/
+/*  nx_dmac_trans_start                                                       */
+/*                                                                                     */
+/*  PARAMETERS:                                                                 */
+/*                      dest        -- Dest address                            */
+/*                      src          -- Src address                             */
+/*                      chan_control   -- value to be programmed into channel control reg  */
+/*                      chan_control   -- value to be programmed into channel config  reg  */
+/*                                                                               */
+/*  DESCRIPTION:                                                           */
+/*        Setup the DMA for data xfer. Use channel ZERO (0)    */
+/*                                                                  */
+/*  RETURNS:                                                        */
+/*                None                                                  */
+/********************************************************************/
+void nx_dmac_trans_start(u_int32 dest, u_int32 src, u_int32 chan_control,  u_int32 chan_config)
+{
+	//Prg DMA Src Address
+	writel(src, IPBGCSFLSHNTWK_DMAC_DMACC0SRCADDR_REG); /* 0xe0634100 */
+
+	//Prg DMA Dest Address
+	writel(dest, IPBGCSFLSHNTWK_DMAC_DMACC0DESTADDR_REG); /*0xe0634104*/
+
+	//Prg DMA Channel Control Register
+	writel(chan_control, IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_REG); /*0xe063410C*/
+
+	//Prg DMA Configuration Register to enable the DMAC
+	writel(DMAC_ENB_VAL , IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_REG );  /* 0xe0634030 */
+
+	//Prg DMA Channel Configuration Register and also enable the DMA channel 
+	writel(chan_config, IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_REG);  /* 0xe0634110 */
+
+	return;
+
+}
+
+#if 0  //TEST_SIM_DMA
+   if ( FLASH_TYPE_NAND == eFlashtype )
+   {
+	//###########################################
+	//DMAC Programming for NAND  /* 512 bytes dma xfer*/
+	//###########################################
+
+	//Prg DMA Src Address
+	writel((NX_GCS_NAND_AHB_BUF + src1), 0xe0634100); 
+
+	//Prg DMA Dest Address
+	writel(dest, 0xe0634104);
+
+	//Prg DMA Channel Control Register
+	writel(0x8d4b6080, 0xe063410C); 
+
+	//Prg DMA Configuration Register to enable the DMA
+	writel(0x0000001, 0xe0634030);
+
+	//Prg DMA Channel Configuration Register 
+	writel(0x000C001, 0xe0634110);
+      }
+   else if (FLASH_TYPE_NOR == eFlashtype)
+   {
+	//###########################################
+	//DMAC Programming for NOR      /* 2K dma xfer*/
+	//###########################################
+     
+	//Prg DMA Src Address
+	writel((NX_GCS_NOR_AHB_BUF + src1), 0xe0634100); 
+
+	//Prg DMA Dest Address
+	writel(dest, 0xe0634104);
+
+/*  TBD -  change DMA settign accroding to fuse bits  TBD TBD */
+     
+	//Prg DMA Channel Control Register 
+	writel(0x8d4b6200, 0xe063410C);  
+
+	//Prg DMA Configuration Register to enable the DMA
+	writel(0x0000001, 0xe0634030);
+
+	//Prg DMA Channel Configuration Register
+	writel(0x000C001, 0xe0634110);
+    }
+  else // (sfc == eFlashtype)
+   {
+     /* 4K dma xfer*/
+  	//Prg DMA Src Address
+	writel((NX_GCS_SFC_AHB_BUF + src1/* 0x80000000 */), 0xe0634100); 
+
+	//Prg DMA Dest Address
+	writel(dest, 0xe0634104);
+
+      // Program the DMA channel control reg
+       writel(0x8d4b6400  , 0xe063410C);
+/*
+       writel(IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_I_RW |
+                  IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DI_RW|
+                  IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SI_RW|
+                  (IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_D_VAL0<<IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_D_SHIFT)|
+                  (IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_S_VAL1<<IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_S_SHIFT)|
+                  (IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_VAL2<<IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_SHIFT)|
+                  (IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_VAL2<<IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_SHIFT)|
+                  (IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_RW)|
+                   (IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_RW)|
+                   (0x400<<IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_TRANSFERSIZE_SHIFT),
+                   IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_REG); // TBD -- test if this is ok during testing 
+*/
+
+
+	//Prg DMA Configuration Register to enable the DMA
+	writel(0x0000001, IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_REG);
+
+	//Prg DMA Channel Configuration Register
+	writel(0x000C001, IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_REG);
+   }
+#endif /* TEST_SIM_DMA */
+
+
+#if 0
+void nx_dmac_dma_channal_config_control(u_int32 value_control, u_int32 value_config, u_int32 chan_start)
+{
+      writel(value_control, chan_start+0xC); //DMAC ch0 control
+      writel(0x1, IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_REG); // Global DMAC control
+      writel(value_config, chan_start + 0x10); //DMAC ch0 config
+      return ;
+}
+
+#endif
+#if 0
+
+/**
+* nx_dmac_trans_comp - DMAC transfer complete function 
+* @chanid: Channel id
+*
+* Complete the DMAC transfers. 
+* 
+*/
+
+
+int32 nx_dmac_trans_comp(void)
+{
+      // Add proper code for detecting INT ... erro rinterrupt etc  
+	//wait_on_node(1, DMAC_INTR) // Wait for DMA TC to complete 
+	while (((readl(IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_REG))&0x1) != 0x1);
+
+	//Prg DMAC TC Clear Register 
+	writel(0x0000001, IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_REG);
+
+  return 0;
+
+}
+
+#endif
+
diff -Naur u-boot-2009.08/lib_arm/dmac.h u-boot-2009.08_alpha2/lib_arm/dmac.h
--- u-boot-2009.08/lib_arm/dmac.h	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/lib_arm/dmac.h	2009-12-20 14:41:37.000000000 -0600
@@ -0,0 +1,1268 @@
+/*
+#===========================================================
+#        COPYRIGHT (c) NXP B.V. 2009
+#        All rights are reserved. Reproduction in whole or in part is
+#        prohibited without the written consent of the copyright owner.
+#
+#        Author   : Makarand Pawagi
+#
+#        Filename : ip1902dmac.h
+#
+#        Purpose  : GCS DMAC Drivar Related definitions
+#===========================================================
+*/
+#ifndef __IP1902DMAC_H
+#define __IP1902DMAC_H
+
+/****************
+* Include Files *
+*****************/
+#include "nor.h"
+
+#include "ldr_common.h"
+#if 0
+#include <linux/mtd/mtd.h>
+#include <command.h>
+#include <watchdog.h>
+#include <malloc.h>
+#include <asm/byteorder.h>
+#include <jffs2/jffs2.h>
+#include <nand.h>
+#endif
+
+/**********************
+* Function Prototypes *
+***********************/
+void nx_nand_dmac_init_sg(u_int32 pagesize, u_int32 oobsize, u_int8 * dmabuf) ;
+void nx_dmac_trf_start_sg(u_int32 dest) ;
+//int nx_dmac_trans_comp(void) ;
+retcode_t nx_dmac_trans_comp(void) ;
+
+//void nx_dmac_trans_start(u_int32 dest, u_int32 src1, bool read_page, flashtype_t eFlashtype) ;
+void nx_dmac_trans_start(u_int32 dest, u_int32 src, u_int32 chan_control,  u_int32 chan_config) ;
+
+
+/*************************
+* DMAC Register specific *
+* local defines          *
+**************************/
+#ifdef TEST_VPE
+#define NX_GCS_DMAC_BASE            (0xE0600000 + 0x30000 +0x4000)
+#else
+//#define NX_GCS_DMAC_BASE            IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_REG
+#endif
+
+#define  NX_DMAC_INT_STATUS         (0x000)
+#define  NX_DMAC_INT_TC_STATUS      (0x004)
+#define  NX_DMAC_INT_TC_CLR         (0x008)
+#define  NX_DMAC_INT_ERR_STATUS     (0x00C)
+#define  NX_DMAC_INT_ERR_CLR        (0x010)
+#define  NX_DMAC_INT_RAW_TC_STATUS  (0x014)
+#define  NX_DMAC_INT_RAW_ERR_STATUS (0x018)
+#define  NX_DMAC_ENLD_CHANS         (0x01C)
+#define  NX_DMAC_SOFT_BREQ          (0x020)
+#define  NX_DMAC_SOFT_SREQ          (0x024)
+#define  NX_DMAC_SOFT_LBREQ         (0x028)
+#define  NX_DMAC_SOFT_LSREQ         (0x02C)
+#define  NX_DMAC_CONFIG             (0x030)
+#define  NX_DMAC_SYNC               (0x034)
+#define  NX_DMAC_CHAN0_SRC          (0x100)
+#define  NX_DMAC_CHAN0_DST          (0x104)
+#define  NX_DMAC_CHAN0_LLI          (0x108)
+#define  NX_DMAC_CHAN0_CTRL         (0x10C)
+#define  NX_DMAC_CHAN0_CONFIG       (0x110)
+#define  NX_DMAC_PERI_ID0           (0xFE0)
+#define  NX_DMAC_PERI_ID1           (0xFE4)
+#define  NX_DMAC_PERI_ID2           (0xFE8)
+#define  NX_DMAC_PERI_ID3           (0xFEC)
+#define  NX_DMAC_CELL_ID0           (0xFF0)
+#define  NX_DMAC_CELL_ID1           (0xFF4)
+#define  NX_DMAC_CELL_ID2           (0xFF8)
+#define  NX_DMAC_CELL_ID3           (0xFFC)
+
+/* Channel 0 to use for NAND DMA transfers -- removed from GCS.h to here */
+#define NX_NAND_DMAC_CHANNEL        (0)
+#define  NX_DMAC_CHAN_OFF           (0x020)
+
+
+
+
+
+
+
+
+
+
+#define IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_REG  (IPBGCSFLSHNTWK_BASE + 0x4000)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_INTSTATUS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTSTATUS_INTSTATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCSTATUS_REG  (IPBGCSFLSHNTWK_BASE + 0x4004)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCSTATUS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCSTATUS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCSTATUS_INTTCSTATUS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCSTATUS_INTTCSTATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_REG	(IPBGCSFLSHNTWK_BASE + 0x4008)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_INTTCCLEAR_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTTCCLEAR_INTTCCLEAR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRORSTATUS_REG	(IPBGCSFLSHNTWK_BASE + 0x400c)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRORSTATUS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRORSTATUS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRORSTATUS_INTERRORSTATUS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRORSTATUS_INTERRORSTATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRCLR_REG  (IPBGCSFLSHNTWK_BASE + 0x4010)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRCLR_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRCLR_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRCLR_INTERRCLR_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACINTERRCLR_INTERRCLR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTTCSTATUS_REG	(IPBGCSFLSHNTWK_BASE + 0x4014)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTTCSTATUS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTTCSTATUS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTTCSTATUS_RAWINTTCSTATUS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTTCSTATUS_RAWINTTCSTATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTERRORSTATUS_REG  (IPBGCSFLSHNTWK_BASE + 0x4018)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTERRORSTATUS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTERRORSTATUS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTERRORSTATUS_RAWINTERRORSTATUS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACRAWINTERRORSTATUS_RAWINTERRORSTATUS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACENBLDCHNS_REG  (IPBGCSFLSHNTWK_BASE + 0x401c)
+#define IPBGCSFLSHNTWK_DMAC_DMACENBLDCHNS_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACENBLDCHNS_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACENBLDCHNS_ENABLEDCHANNELS_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACENBLDCHNS_ENABLEDCHANNELS_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTBREQ_REG  (IPBGCSFLSHNTWK_BASE + 0x4020)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTBREQ_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTBREQ_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTBREQ_SOFTBREQ_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTBREQ_SOFTBREQ_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTSREQ_REG  (IPBGCSFLSHNTWK_BASE + 0x4024)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTSREQ_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTSREQ_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTSREQ_SOFTSREQ_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTSREQ_SOFTSREQ_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLBREQ_REG  (IPBGCSFLSHNTWK_BASE + 0x4028)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLBREQ_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLBREQ_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLBREQ_SOFTLBREQ_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLBREQ_SOFTLBREQ_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLSREQ_REG  (IPBGCSFLSHNTWK_BASE + 0x402c)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLSREQ_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLSREQ_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLSREQ_SOFTLSREQ_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACSOFTLSREQ_SOFTLSREQ_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4030)
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_UNDEFINED_RW (0x0fffffff << 3)
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_UNDEFINED_SHIFT 3
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M2_RW (0x01 << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M2_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M2_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M2_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M1_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M1_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M1_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_M1_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACCONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACSYNC_REG  (IPBGCSFLSHNTWK_BASE + 0x4034)
+#define IPBGCSFLSHNTWK_DMAC_DMACSYNC_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACSYNC_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACSYNC_DMACSYNC_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACSYNC_DMACSYNC_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x4100)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x4104)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x4108)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x410c)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4110)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC0CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x4120)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC1DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x4124)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x4128)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x412c)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4130)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC1CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x4140)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC2DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x4144)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x4148)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x414c)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4150)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC2CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x4160)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC3DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x4164)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x4168)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x416c)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4170)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC3CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x4180)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC4DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x4184)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x4188)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x418c)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x4190)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC4CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x41a0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC5DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x41a4)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x41a8)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x41ac)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x41b0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC5CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x41c0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC6DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x41c4)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x41c8)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x41cc)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x41d0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC6CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7SRCADDR_REG  (IPBGCSFLSHNTWK_BASE + 0x41e0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7SRCADDR_SRCADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7SRCADDR_SRCADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC7DESTADDR_REG	(IPBGCSFLSHNTWK_BASE + 0x41e4)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7DESTADDR_DESTADDR_RW (0x07fffffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7DESTADDR_DESTADDR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_REG  (IPBGCSFLSHNTWK_BASE + 0x41e8)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LLI_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LLI_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_UNDEFINED_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_UNDEFINED_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_UNDEFINED_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LM_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LM_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LM_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7LLI_LM_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_REG  (IPBGCSFLSHNTWK_BASE + 0x41ec)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_I_RW (0x01 << 31)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_I_SHIFT 31
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_I_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_I_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_RW (0x03 << 28)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_SHIFT 28
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_PROT_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DI_RW (0x01 << 27)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DI_SHIFT 27
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SI_RW (0x01 << 26)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SI_SHIFT 26
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SI_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SI_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_D_RW (0x01 << 25)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_D_SHIFT 25
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_D_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_D_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_S_RW (0x01 << 24)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_S_SHIFT 24
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_S_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_S_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_RW (0x03 << 21)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_SHIFT 21
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_RW (0x03 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SWIDTH_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_RW (0x03 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_DBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_RW (0x03 << 12)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_SHIFT 12
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_SBSIZE_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_TRANSFERSIZE_RW (0x0fff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONTROL_TRANSFERSIZE_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_REG  (IPBGCSFLSHNTWK_BASE + 0x41f0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_H_RW (0x01 << 18)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_H_SHIFT 18
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_H_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_H_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_A_R (0x01 << 17)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_A_SHIFT 17
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_A_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_A_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_L_RW (0x01 << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_L_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_L_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_L_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_ITC_RW (0x01 << 15)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_ITC_SHIFT 15
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_ITC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_ITC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_IE_RW (0x01 << 14)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_IE_SHIFT 14
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_IE_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_IE_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_RW (0x03 << 11)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_SHIFT 11
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_FLOWCNTRL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_RW (0x07 << 6)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_SHIFT 6
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_DESTPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_RW (0x07 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_SRCPERIPHERAL_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACC7CONFIGURATION_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_REG  (IPBGCSFLSHNTWK_BASE + 0x4500)
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_UNDEFINED_RW (0x03fffffff << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_UNDEFINED_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_T_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_T_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_T_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACITCR_T_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP1_REG  (IPBGCSFLSHNTWK_BASE + 0x4504)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP1_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP1_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP1_DMACCLR_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP1_DMACCLR_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP2_REG  (IPBGCSFLSHNTWK_BASE + 0x4508)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP2_UNDEFINED_RW (0x07fff << 16)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP2_UNDEFINED_SHIFT 16
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP2_DMACCTC_RW (0x0ffff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP2_DMACCTC_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_REG  (IPBGCSFLSHNTWK_BASE + 0x450c)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_UNDEFINED_RW (0x01fffffff << 2)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_UNDEFINED_SHIFT 2
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_TC_RW (0x01 << 1)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_TC_SHIFT 1
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_TC_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_TC_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_E_RW (0x01 << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_E_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_E_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACITOP3_E_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID0_REG  (IPBGCSFLSHNTWK_BASE + 0x4fe0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID0_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID0_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID0_PARTNUMBER0_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID0_PARTNUMBER0_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_REG  (IPBGCSFLSHNTWK_BASE + 0x4fe4)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_R (0x07 << 4)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_SHIFT 4
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_DESIGNER0_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_R (0x0f << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL8 0x08
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL9 0x09
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL10 0x0a
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL11 0x0b
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL12 0x0c
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL13 0x0d
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL14 0x0e
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID1_PARTNUMBER1_VAL15 0x0f
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REG  (IPBGCSFLSHNTWK_BASE + 0x4fe8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_R (0x07 << 4)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_SHIFT 4
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_REVISION_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_R (0x0f << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL2 0x02
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL3 0x03
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL4 0x04
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL5 0x05
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL6 0x06
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL7 0x07
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL8 0x08
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL9 0x09
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL10 0x0a
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL11 0x0b
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL12 0x0c
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL13 0x0d
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL14 0x0e
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID2_DESIGNER1_VAL15 0x0f
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_REG  (IPBGCSFLSHNTWK_BASE + 0x4fec)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_CONFIGURATION_R (0x01 << 7)
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_CONFIGURATION_SHIFT 7
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_CONFIGURATION_VAL0 0x00
+#define IPBGCSFLSHNTWK_DMAC_DMACPERIPHID3_CONFIGURATION_VAL1 0x01
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID0_REG  (IPBGCSFLSHNTWK_BASE + 0x4ff0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID0_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID0_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID0_DMACPCELLID0_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID0_DMACPCELLID0_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID1_REG  (IPBGCSFLSHNTWK_BASE + 0x4ff4)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID1_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID1_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID1_DMACPCELLID1_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID1_DMACPCELLID1_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID2_REG  (IPBGCSFLSHNTWK_BASE + 0x4ff8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID2_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID2_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID2_DMACPCELLID2_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID2_DMACPCELLID2_SHIFT 0
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID3_REG  (IPBGCSFLSHNTWK_BASE + 0x4ffc)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID3_UNDEFINED_R (0x07fffff << 8)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID3_UNDEFINED_SHIFT 8
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID3_DMACPCELLID3_R (0x0ff << 0)
+#define IPBGCSFLSHNTWK_DMAC_DMACPCELLID3_DMACPCELLID3_SHIFT 0
+
+#endif /* __IP1902DMAC_H */
+
diff -Naur u-boot-2009.08/lib_arm/flash.c u-boot-2009.08_alpha2/lib_arm/flash.c
--- u-boot-2009.08/lib_arm/flash.c	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/lib_arm/flash.c	2010-01-15 19:11:52.000000000 -0600
@@ -0,0 +1,176 @@
+/*
+#===========================================================
+#        COPYRIGHT (c) NXP B.V. 2009
+#        All rights are reserved. Reproduction in whole or in part is
+#        prohibited without the written consent of the copyright owner.
+#
+#        Author   : Makarand Pawagi
+#
+#        Filename : nor.c
+#
+#        Purpose  : NOR Support
+#===========================================================
+*/
+
+
+//#include "ip1902dmac.h"
+#include <common.h>
+#include "ip2070gcs.h"
+#include <nor.h>
+#include "board.h"
+
+nor_info_t nor_info;
+nor_erase_info_t nor_erase_info;
+
+typedef struct _nor_global_info {
+	devicetype_t  flashBootDev;
+	flashtype_t  flashtype;
+} nor_global_info ;
+
+nor_global_info gFlashInfo ;
+u_int8 buffer[0x20000];
+
+/********************************************************************/
+/*  find_boot_device                                                       */
+/*                                                                  */
+/*  PARAMETERS:                                                     */
+/*      eBootDev          OUT; flash device as shown by config straps                      */
+/*      eFlashtype        OUT; type of Flash device-- NAND, NOR or SFC                   */
+/*                                                                  */
+/*  DESCRIPTION:                                                    */
+/*      checks the config straps  and fuse bits to indicate boot device -- flash or UART    */
+/*                                                                  */
+/*  RETURNS:                                                        */
+/*                  RETCODE_BOOTDEV_FLASH                   */
+/*                  RETCODE_BOOTDEV_UART                      */
+/*                  RETCODE_BOOTDEV_INVALID                   */
+/********************************************************************/
+
+retcode_t find_boot_device(devicetype_t *eBootDev, flashtype_t *eFlashtype)
+{
+   retcode_t ret = RETCODE_BOOTDEV_FLASH;  /* default booting device is a Flash */
+   u_int32 lconfigstrapReg = INP32(RGU_CNFG_TRAPS_REG);
+
+   /* check config straps to see if UART boot over-ride is enabled  */
+   if (!(lconfigstrapReg & RGU_CNFG_TRAPS_BOOT_UART_SEL) )
+   {
+       /* Throw error and return ---- boot from uart not supported for micro-loader */
+       return RETCODE_BOOTDEV_UART;
+
+   }
+   
+   /* if the UART boot over-ride is NOT set 
+       check config straps and return the Flash type and the actual device type */
+   *eBootDev = (lconfigstrapReg & RGU_CNFG_TRAPS_BOOT_DEV_SEL)>> 1;
+   
+   if ((*eBootDev >NAND_x16_small_4cycle) && (*eBootDev <= NAND_x8_small_3cycle) && 
+       (*eBootDev !=PCI_DEV_BOOT) &&
+       (*eBootDev !=ARM_IN_RESET)
+      )
+   {
+      *eFlashtype = FLASH_TYPE_NAND;
+   }
+   else if ((*eBootDev >=NOR_x8_21bit) && (*eBootDev <= NOR_x16_ADM) && *eBootDev !=ARM_IN_RESET2)
+   {
+      *eFlashtype = FLASH_TYPE_NOR;
+   }
+   else if ((*eBootDev >=SPI_16bit) && (*eBootDev <= SPI_32bit))
+   {
+      *eFlashtype = FLASH_TYPE_SFC;
+   }
+   else
+   {
+       *eFlashtype = FLASH_TYPE_INVALID;
+       ret = RETCODE_BOOTDEV_INVALID;
+   }
+
+   /* So there is a valid flash device indicated by config straps*/
+   if (RETCODE_BOOTDEV_FLASH == ret)
+   {
+      /* Throw info trace: Valid flash device selected */
+   }
+   
+   return ret;
+
+}
+
+
+int mtd_nor_read(struct mtd_info *mtd, loff_t from, size_t len, size_t *retlen, u_char *buf)
+{
+	nx_nor_read((void *)from, (u_int32)len, (void *)buf) ;	
+}
+
+int mtd_nor_write(struct mtd_info *mtd, loff_t to, size_t len, size_t *retlen, u_char *buf)
+{
+	nx_nor_write((void *)to, (u_int32)len, (void *)buf) ;	
+}
+
+int mtd_nor_erase(struct mtd_info *mtd, struct erase_info *einfo)
+{
+	nor_erase_region((u_int32)einfo->addr, (u_int32)einfo->len) ;	
+}
+
+void nor_init(void)
+{
+	devicetype_t  eBootDev;
+	flashtype_t  eFlashtype;
+	retcode_t ret;
+
+	ret = find_boot_device(&eBootDev, &eFlashtype);
+	if (RETCODE_BOOTDEV_UART == ret)
+	{
+	  /* Throw error trace */	  
+	  puts("Invalid Boot Device .....NOR Init faild\r\n") ;	  
+	}
+	if (RETCODE_BOOTDEV_FLASH == ret)
+	{
+		puts("Boot Device NOR Flash\r\n") ;	
+		puts("\r Initializing the GCS\r\n") ;
+		nx_gcs_init(eBootDev, eFlashtype);	/* InitGCS */
+		/* TODO-Set up all the Flashes that are on the board */
+	}
+	
+	gFlashInfo.flashBootDev = eBootDev ;
+	gFlashInfo.flashtype = eFlashtype ;
+   nx_nor_init (gFlashInfo.flashBootDev, gFlashInfo.flashtype) ;
+
+	nor_info.read =  mtd_nor_read ;
+	nor_info.write = mtd_nor_write ;
+   nor_info.erase = mtd_nor_erase ;
+	return ;
+}
+
+void nor_erase_region(u_int32 addr, u_int32 len)
+{
+
+   int32 nblks, i, j, z= 0;
+   u_int32 uErasesize = len;
+   u_int32 blksize = UNIFORM_SECTOR_SIZE;
+   u_int32 uTempflashaddr, uFlashAddr;
+
+   uFlashAddr = addr;
+      nblks = uErasesize/(blksize -1) + 1;
+      uTempflashaddr = uFlashAddr;
+      for (i = 0; i < nblks; i++)
+      {
+         nx_nor_read((void *)uTempflashaddr, 
+                  (int)blksize,
+                  (void *)buffer );
+         for (j = 0; j < blksize; j++)
+         {
+            if (buffer[j] != 0xFF)
+            {
+               nx_nor_block_erase((void *)uTempflashaddr, blksize, NULL);
+               break;
+            }
+         }
+         uTempflashaddr+=blksize;
+         if ((i%8)==0)
+         {
+            printf(".");
+            z++;
+            if ((z%80)==0) printf("\r\n");
+         }
+      }
+   }
+
diff -Naur u-boot-2009.08/lib_arm/ip2070gcs.c u-boot-2009.08_alpha2/lib_arm/ip2070gcs.c
--- u-boot-2009.08/lib_arm/ip2070gcs.c	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/lib_arm/ip2070gcs.c	2009-12-21 10:15:53.000000000 -0600
@@ -0,0 +1,156 @@
+/*
+#=======================================================================
+#        COPYRIGHT (c) NXP B.V. 2009
+#        All rights are reserved. Reproduction in whole or in part is
+#        prohibited without the written consent of the copyright owner.
+#
+#        Author   : Har Yash Bahadur
+# 
+#        Filename : ip2070gcs.c
+#
+#        Purpose  : GCS setup
+#=======================================================================
+*/
+/*! 
+ *  @A9 GCS Flash Network
+ *  @ip2070gcs.c*
+ *  <pre>
+ *  $Author: murthyk $
+ *  $Revision: 131363 $
+ *  $Date: 2009-11-21 16:02:24 -0600 (Sat, 21 Nov 2009) $
+ *
+ *  Revision history
+ *  $Log: $
+ *  
+ *
+ *  $KeysEnd$
+ *  </pre>
+ *
+ */ 
+
+#include "ldr_common.h"
+
+#include "nor.h"
+#include "ip2070gcs.h"
+#include "board.h"
+
+#define GCS_ENABLE_ISA_MODE_MSK            (0)
+#define GCS_ENABLE_PCI_MODE_MSK            (1)
+#define GCS_ENABLE_PCI_HOST_MODE_MSK       (0)
+
+#define PCI_SETUP_VAL_HOST                 (0x0CCE0e03)
+#define PCI_SETUP_VAL_DEVICE               (0x0CCE0e02)
+#define PCI_SYSTEM_ID                      (0x84931131)
+#define PCI_CMD_VAL                        (0x4)
+#define GCS_SFC_CLK_ENABLE                 (0x00000001)
+
+#define GCS_NOR_ADM_ENABLE                 (0x20)
+#define GCS_NOR_16B_ENABLE                 (0x2)     
+#define GCS_NOR_DCSN_ADDR_REMAP_ENABLE     (0x3)
+
+#define GCS_NOR_CSROUTE_CS2                (0x2)
+#define GCS_SPI_CSROUTE_CS2                (0x1)
+
+/********************************************************************/
+/*  download_from_flash                                                       */
+/*                                                                  */
+/*  PARAMETERS:                                                     */
+/*      eBootDev          IN; flash device as shown by config straps                      */
+/*      eFlashtype        IN; type of Flash device-- NAND, NOR or SFC                   */
+/*                                                                  */
+/*  DESCRIPTION:                                                    */
+/*      inits the GCS config registers, as per the Flash device selected    */
+/*                                                                  */
+/*  RETURNS:                                                        */
+/*                  None                                                      */
+/********************************************************************/
+retcode_t nx_gcs_init (devicetype_t eBootDev, flashtype_t eFlashtype)
+{
+
+   /*Before flash specific init, read PCI mode from config straps and program it in GCS mode reg */
+
+      if (  (INP32(RGU_CNFG_TRAPS_REG))&RGU_CNFG_TRAPS_IO_MODE)
+      {
+         writel(GCS_ENABLE_ISA_MODE_MSK, IPBGCSFLSHNTWK_GCS_MODE_REG );  // ISA mode
+         myprint("GCS: Setup In ISA MODE\r\n") ;
+      }
+      else 
+      {   // PCI 
+          
+          writel(GCS_ENABLE_PCI_MODE_MSK, IPBGCSFLSHNTWK_GCS_MODE_REG);
+          myprint("GCS in PCI MODE\n") ;
+          // PCI HOST
+          if ((INP32(RGU_CNFG_TRAPS_REG)) & RGU_CNFG_TRAPS_PCI_HOST)
+          {
+              writel(GCS_ENABLE_PCI_HOST_MODE_MSK, IPBGCSFLSHNTWK_PCI_CONFIG_REG);  
+              writel(PCI_SETUP_VAL_HOST, PCI_REG_SETUP);  
+              myprint("GCS in PCI HOST MODE\n") ;
+          }
+          else  // PCI  DEVICE 
+          {
+             
+             /* By default PCI config register of GCS is in device mode, so need to to program it */
+             writel(PCI_SETUP_VAL_DEVICE, PCI_REG_SETUP);  
+             myprint("GCS in PCI DEVICE MODE\n\r") ;
+           }
+
+           writel(PCI_SYSTEM_ID, PCI_REG_SUBSYSTEM_ID);  //  Dev and VENDOR ID  --value provided by Mark/Ranga
+           writel(PCI_CMD_VAL, PCI_REG_CFG_CMD_STAT);
+       }
+
+      switch ( eFlashtype )
+      {
+         case FLASH_TYPE_NAND:
+                     // Use default settings of AHB DMA base addr reg, aperture reg and CS route reg
+                     writel(0x0, IPBGCSFLSHNTWK_NAND_CS_ROUTE_REG);
+                     myprint("GCS: NAND DEVICE SETUP COMPLETE\r\n") ;
+                     break;
+
+         case FLASH_TYPE_NOR:
+                     // Use default settings of AHB DMA base addr reg, aperture reg and CS route reg
+                     // enable NOR_ADM
+                     writel(ROM_BASE, IPBGCSFLSHNTWK_AHB_DSCN_NOR_BASE_ADDR_REG);
+                     
+                     if (eBootDev == NOR_x16_ADM)
+                     {
+                        writel(GCS_NOR_ADM_ENABLE, IPBGCSFLSHNTWK_FLASH_CONFIG_REG); 
+                        myprint("GCS: NOR 16b ADM DEVICE SETUP\r\n") ;
+                     }
+
+                     if (eBootDev >= NOR_x16_21bit && eBootDev <= NOR_x16_27bit)
+                     {
+                        writel(GCS_NOR_16B_ENABLE|GCS_NOR_DCSN_ADDR_REMAP_ENABLE
+                               , IPBGCSFLSHNTWK_FLASH_CONFIG_REG); 
+/*                        writel(GCS_NOR_DCSN_ADDR_REMAP_ENABLE
+                               , IPBGCSFLSHNTWK_FLASH_CONFIG_REG); */
+                        myprint("GCS: NOR 16b DEVICE SETUP\r\n") ;
+                     }
+
+#ifdef NOR_CS2
+                     writel(GCS_NOR_CSROUTE_CS2, IPBGCSFLSHNTWK_NOR_CS_ROUTE_REG);
+#endif
+                     myprint("GCS: NOR DEVICE SETUP COMPLETE\r\n");
+                     
+                     break;
+
+              case FLASH_TYPE_SFC:
+                     writel(GCS_SFC_CLK_ENABLE, IPBGCSFLSHNTWK_GCS_CLOCK_MUX_REG);	
+                      // remap SFC  to NOR base and vice versa, cannot go with default, as we need support for 32b SFC device
+                     //writel(NX_GCS_NOR_AHB_BUF, IPBGCSFLSHNTWK_AHB_DMA_SFC_BASE_ADDR_REG);
+                   //  writel(NX_GCS_SFC_AHB_BUF, IPBGCSFLSHNTWK_AHB_DMA_NOR_BASE_ADDR_REG);
+
+#ifdef SPI_CS2
+                     writel(GCS_SPI_CSROUTE_CS2, IPBGCSFLSHNTWK_NOR_CS_ROUTE_REG);
+#endif
+                     myprint("GCS: SFC DEVICE SETUP COMPLETE\r\n") ;
+                     break;
+
+              default:
+                   /* Code will not reach here*/
+                     myprint("GCS: ERROR: HOW DID THE CODE COME HERE!!!\n") ;
+                     break;
+      }
+
+   return RETCODE_OK ;
+}
+
diff -Naur u-boot-2009.08/lib_arm/ip2070gcs.h u-boot-2009.08_alpha2/lib_arm/ip2070gcs.h
--- u-boot-2009.08/lib_arm/ip2070gcs.h	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/lib_arm/ip2070gcs.h	2009-12-18 19:14:41.000000000 -0600
@@ -0,0 +1,72 @@
+/*
+#===========================================================
+#        COPYRIGHT (c) NXP B.V. 2009
+#        All rights are reserved. Reproduction in whole or in part is
+#        prohibited without the written consent of the copyright owner.
+#
+#        Author   : Makarand Pawagi
+#
+#        Filename : ip2070gcs.h
+#
+#        Purpose  : GCS Related definitions
+#===========================================================
+*/
+#ifndef __IP2070GCS_H
+#define __IP2070GCS_H
+
+/****************
+* Include Files *
+*****************/
+#include "ldr_common.h"
+#include "ldr_types.h"
+
+
+/**********************
+* Function Prototypes *
+***********************/
+retcode_t nx_gcs_init (devicetype_t eBootDev, flashtype_t eFlashtype);
+void nx_gcs_nand_init ( void ) ;
+void nx_gcs_nor_init ( void ) ;
+
+
+/*************************
+* NAND Register          *
+* specific local defines *
+**************************/
+#ifdef TEST_VPE
+#define NX_GCS_REG_BASE      (0xE0600000 + (0x30000)+ 0x2000)
+#else
+#define NX_GCS_REG_BASE      IPBGCSFLSHNTWK_GCS_MODE_REG
+#endif
+
+#define NX_GCS_MODE                 (0x0)
+#define NX_GCS_MODE_PCI             (1<0)
+
+#define NX_GCS_ROUTE_CS0            (7<0)
+#define NX_GCS_ROUTE_CS1            (7<3)
+#define NX_GCS_ROUTE_CS2            (7<6)
+#define NX_GCS_ROUTE_CS3            (7<9)
+
+/* NOR */
+#define NX_GCS_NOR_DMA_BASE_ADDR    (0x30)
+#define NX_GCS_NOR_DMA_APERTURE     (0x34)
+#define NX_GCS_NOR_CS_ROUTE         (0x50)
+
+#define NX_GCS_NOR_AHB_BUF          (NX_NOR_BUF_BASE)
+#define NX_GCS_NOR_APERTURE         (0x3FFFFFFF)
+
+/* NAND */
+#define NX_GCS_NAND_DMA_BASE_ADDR   (0x38)
+#define NX_GCS_NAND_DMA_APERTURE    (0x3C)
+#define NX_GCS_NAND_CS_ROUTE        (0x54)
+
+#define NX_GCS_NAND_AHB_BUF         (NX_NAND_BUF_BASE)
+#define NX_GCS_NAND_APERTURE        (0x3FFFFFFF)
+
+#define NX_GCS_ISA_CS_ROUTE        (0x5C)
+
+/* SFC */
+#define NX_GCS_SFC_AHB_BUF   NX_GCS_NOR_AHB_BUF // (0x80000000) bcoz SFC is remapped to 0x0000
+
+#endif /* __IP2070GCS_H */
+
diff -Naur u-boot-2009.08/lib_arm/ldr_common.h u-boot-2009.08_alpha2/lib_arm/ldr_common.h
--- u-boot-2009.08/lib_arm/ldr_common.h	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/lib_arm/ldr_common.h	2009-12-20 14:38:53.000000000 -0600
@@ -0,0 +1,126 @@
+/*
+#===========================================================
+#        COPYRIGHT (c) NXP B.V. 2009
+#        All rights are reserved. Reproduction in whole or in part is
+#        prohibited without the written consent of the copyright owner.
+#
+#        Author   : Makarand Pawagi
+#
+#        Filename : common.h
+#
+#        Purpose  : Header file containing common data types
+#===========================================================
+*/
+
+#ifndef _LDR_COMMON_H_
+#define _LDR_COMMON_H_
+
+/****************
+* Include Files *
+*****************/
+
+#include "basetype.h"
+#include "ldr_types.h"
+#include "stbcfg.h"
+
+
+
+/****************
+* Externs       *
+*****************/
+
+//extern void myprint(const char* str) ;
+//#define printf myprint
+
+
+/**************************
+* Envoirnment Specific    *
+* Configuration Switches  *
+***************************/
+/* Enable Platform specific Config switch */
+
+//#define TEST_VPE
+#define TEST_EMULATION
+//#define NO_SSP /* To support fuse bit check if SSP ROM is not available in some designs TBD */
+
+#ifdef TEST_VPE
+#define ULDR_UART_CONSOLE
+//#define NO_UART   
+#ifdef NO_UART
+#define UART_BASE 				0xE06E0000
+#endif
+#endif
+
+#ifdef TEST_EMULATION
+#define TEST_SIM  /* TBD- can be removed now */
+#undef TEST_VPE
+#endif
+
+
+#if  0 //CFG_ULDR_SEC_BOOT_IMAGE  ==  CFG_ULDR_SEC_BOOT_IMAGE_KERNEL
+#define NO_UBOOT  /* This is no longer used in code-base now -- can be removed TBD */
+#endif
+
+#define PARSE_TLV_HDR
+
+//#define NOR_CS2
+#define RX_ERRORS_REQD 1
+
+
+/*****************
+* Delay Routiene *
+******************/
+static inline void delay(unsigned long loops)
+{
+	__asm__ volatile ("1:\n" "subs %0, %1, #1\n"
+			  "bne 1b":"=r" (loops):"0"(loops));
+}
+
+/* ATAG List Start Address */
+//#define ATAG_LIST_START_ADDRESS		0x00002000
+#define ATAG_LIST_START_ADDRESS		0x000040000
+
+/* Modeling config Starp Registers as those are not available in VPE */
+#define  SYS_REG_BASE                     	 0xe0000000
+#define RGU_BASE                             (SYS_REG_BASE + 0x06e6000)
+#ifdef TEST_VPE
+#define RGU_CNFG_TRAPS_REG                   0x0  /*(RGU_BASE + 0x30) -- Makarand*/
+#define UART_BASE_ADDR                      0xE06E0000
+#else
+#ifdef TEST_EMULATION
+#define RGU_CNFG_TRAPS_REG                  0xe06e6030
+#define UART_BASE_ADDR                         0xe06e2000
+#endif
+#endif
+#define RGU_CNFG_TRAPS_BOOT_UART_SEL         (BIT_6_MSK)
+#define RGU_CNFG_TRAPS_BOOT_UART_SEL         (BIT_6_MSK)
+#define RGU_CNFG_TRAPS_BOOT_UART_PINS  			 (BIT_7_MSK)
+#define RGU_CNFG_TRAPS_BOOT_DEV_SEL          ((BIT_5_MSK) | (BIT_4_MSK) | (BIT_3_MSK) | (BIT_2_MSK) | (BIT_1_MSK))
+#define RGU_CNFG_TRAPS_IO_MODE               (BIT_16_MSK)
+#define RGU_CNFG_TRAPS_PCI_HOST              (BIT_23_MSK)
+
+
+
+
+
+/* Registers not yet defined on global include files */
+
+
+#define OTP_BOOT_CODE_CFG_REG 0x0
+#define OTP_BOOT_CODE_CFG_SPI_SPEED_CTL_MASK 0x0
+
+#define OTP_FUNC_CTRL3_REG 0x0
+
+#define PCI_REG_SETUP 0x0
+#define PCI_REG_SUBSYSTEM_ID 0x0
+#define PCI_REG_CFG_CMD_STAT 0x0
+
+
+//#define NX_GCS_SFC_AHB_BUF 0x0
+#define SYS_MRAM_SIZE 0x10000
+
+#define SPI_FLASH_BULK_XFER_SIZE 0x0
+#define SFC_SPEED_UP_VAL 0x0
+
+
+#endif /* _LDR_COMMON_H_ */
diff -Naur u-boot-2009.08/lib_arm/ldr_types.h u-boot-2009.08_alpha2/lib_arm/ldr_types.h
--- u-boot-2009.08/lib_arm/ldr_types.h	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/lib_arm/ldr_types.h	2009-12-21 10:20:23.000000000 -0600
@@ -0,0 +1,373 @@
+/*
+#===========================================================
+#        COPYRIGHT (c) NXP B.V. 2009
+#        All rights are reserved. Reproduction in whole or in part is
+#        prohibited without the written consent of the copyright owner.
+#
+#        Author   : Makarand Pawagi
+#
+#        Filename : types.h
+#
+#        Purpose  : Global Types Header
+#===========================================================
+*/
+/*! 
+ *  @A9 Header File
+ *  @Ldr_types.h*
+ *  <pre>
+ *  $Author: murthyk $
+ *  $Revision: 131363 $
+ *  $Date: 2009-11-21 16:02:24 -0600 (Sat, 21 Nov 2009) $
+ *
+ *  Revision history
+ *  $Log: $
+ *  
+ *
+ *  $KeysEnd$
+ *  </pre>
+ *
+ */ 
+
+#ifndef _LDR_TYPES_H_
+#define _LDR_TYPES_H_
+
+#define myprint printf
+
+/****************
+* Include Files *
+*****************/
+#include "chip.h"
+
+
+/*********************
+* Register Operation *
+* related defines    *
+**********************/
+
+#define readb(p)     (*(volatile HW_BYTE *)(p))
+#define writeb(v,p)  ((*(volatile HW_BYTE *)(p)) = (v))
+#define readl(p)     (*(LPREG)(p))
+#define writel(v,p)  ((*(LPREG)(p)) = (v))
+
+#define INP32(pReg)             (*(volatile u_int32 *)(pReg))
+#define OUT32(pReg, value)      (*(volatile u_int32 *)(pReg) = (u_int32)(value))
+
+#define __raw_readl(a)          (*(volatile u_int32 *)(a))
+#define __raw_writel(v,a)       (*(volatile u_int32 *)(a) = (v))
+
+#define  BIT_0_MSK   0x00000001
+#define  BIT_1_MSK   0x00000002
+#define  BIT_2_MSK   0x00000004
+#define  BIT_3_MSK   0x00000008
+#define  BIT_4_MSK   0x00000010
+#define  BIT_5_MSK   0x00000020
+#define  BIT_6_MSK   0x00000040
+#define  BIT_7_MSK   0x00000080
+#define  BIT_8_MSK   0x00000100
+#define  BIT_9_MSK   0x00000200
+#define  BIT_10_MSK  0x00000400
+#define  BIT_11_MSK  0x00000800
+#define  BIT_12_MSK  0x00001000
+#define  BIT_13_MSK  0x00002000
+#define  BIT_14_MSK  0x00004000
+#define  BIT_15_MSK  0x00008000
+#define  BIT_16_MSK  0x00010000
+#define  BIT_17_MSK  0x00020000
+#define  BIT_18_MSK  0x00040000
+#define  BIT_19_MSK  0x00080000
+#define  BIT_20_MSK  0x00100000
+#define  BIT_21_MSK  0x00200000
+#define  BIT_22_MSK  0x00400000
+#define  BIT_23_MSK  0x00800000                     
+#define  BIT_24_MSK  0x01000000
+#define  BIT_25_MSK  0x02000000
+#define  BIT_26_MSK  0x04000000
+#define  BIT_27_MSK  0x08000000
+#define  BIT_28_MSK  0x10000000
+#define  BIT_29_MSK  0x20000000
+#define  BIT_30_MSK  0x40000000
+#define  BIT_31_MSK  0x80000000
+
+/***********
+* Typedefs *
+************/
+
+typedef volatile unsigned long reg_t;
+
+typedef enum _retcode_t_
+{
+   RETCODE_OK = 0,
+   RETCODE_BAD_PARAMETER,
+   RETCODE_MISMATCH,                /* Security violation. */
+   RETCODE_INVALID_FUSE_SETTING,    /* Security violation. */
+   RETCODE_INVALID_FLASH_HEADER,    /* Security violation. */
+   RETCODE_CHAN_BUSY,
+   RETCODE_INVALID_SP,              /* Security violation during boot only. */
+   RETCODE_CRYPT_ERR,               /* Security Violation during boot only. */
+   RETCODE_INVALID_SP_COMMAND,      /* Security Violation during boot only. */
+   RETCODE_RSA_ERROR,               /* Security Violation. */
+   RETCODE_KEY2_MISSING,            /* Security Violation. */
+   RETCODE_NO_VALID_COPY,  
+   RETCODE_INVALID_CMD_CODE,
+   RETCODE_INVALID_IRQ_SOURCE,
+   RETCODE_HDCP_KEY_LOAD_FAILED,
+   RETCODE_FUSE_PROGRAM_FAILED,
+   RETCODE_OVERFLOW,
+   RETCODE_UNDERFLOW,
+   RETCODE_TOO_MANY_PAUSES,
+   RETCODE_FEATURE_DISABLED,
+   RETCODE_NOT_DTCP_REGION,
+   RETCODE_INVALID_SRM,
+   RETCODE_OTP_CTRL_ERR,
+   RETCODE_MC_WAITING,
+   RETCODE_FAILED,
+   RETCODE_BOOTDEV_UART,
+   RETCODE_BOOTDEV_FLASH,
+   RETCODE_BOOTDEV_INVALID,
+   RETCODE_FLASH_DEVICE_NOT_SUPPORTED,
+   RETCODE_FLASH_CTRL_ERROR,
+   RETCODE_FLASH_BAD_BLOCK,
+   RETCODE_FLASH_UNCORRECTABLE_ERROR,
+   RETCODE_UARTBOOT_ERROR,
+   RETCODE_YMODEM_HDR_ERROR,
+   RETCODE_YMODEM_PKT_ERROR,
+   RETCODE_YMODEM_DONE_ERROR,
+   RETCODE_NOT_SUPPORTED,
+   RETCODE_INVALID_BOOT_DEV,
+   /* 
+    * Echostar 07/25/2005 - Addition of a new error used in bkgnd.c
+    */
+   RETCODE_FATAL_PROGRAMMING_ERROR
+} retcode_t;
+
+typedef enum _bus_t_
+{
+   SSP,
+   SSI,
+   PMAN,
+   MMIO,
+   CRYPTO,
+   MAX_BUS_T
+} bus_t;
+
+/* Defines the Flash device use for booting -- maps to config straps */
+typedef enum _devicetype_t
+{
+   NAND_x16_small_4cycle=0,
+   NAND_x16_small_5cycle,
+   NAND_x16_large_4cycle,
+   NAND_x16_large_5cycle,
+   NAND_x8_small_4cycle,
+   NAND_x8_small_5cycle,
+   NAND_x8_large_4cycle,
+   NAND_x8_large_5cycle,
+   PCI_DEV_BOOT,
+   NAND_x16_small_3cycle,
+   ARM_IN_RESET,
+   NAND_x8_small_3cycle,
+   SPI_16bit,
+   SPI_24bit,
+   SPI_32bit,
+   ARM_IN_RESET1,
+   NOR_x8_21bit, /* 16 */
+   NOR_x8_22bit,
+   NOR_x8_23bit,
+   NOR_x8_24bit,
+   NOR_x8_25bit,
+   NOR_x8_26bit,
+   NOR_x8_27bit,
+   ARM_IN_RESET2,
+   NOR_x16_21bit,
+   NOR_x16_22bit,
+   NOR_x16_23bit,
+   NOR_x16_24bit,
+   NOR_x16_25bit,
+   NOR_x16_26bit,
+   NOR_x16_27bit,
+   NOR_x16_ADM,
+   NAND_x8_large4K_4cycle,
+   NAND_x8_large4K_5cycle,
+   NAND_x16_large4K_4cycle,
+   NAND_x16_large4K_5cycle,
+   Invalid_dev_type
+  
+} devicetype_t;
+
+/* Define the class of Flash device used for booting: 
+    IP2017-NAND, IP2016-NOR SFC-SPI Flash
+*/
+/* Define the class of Flash device used for booting: 
+    IP2017-NAND, IP2016-NOR SFC-SPI Flash
+*/
+typedef enum
+{
+  FLASH_TYPE_INVALID,
+  FLASH_TYPE_NAND,
+  FLASH_TYPE_NOR,
+  FLASH_TYPE_SFC
+}flashtype_t;
+
+typedef enum
+{
+   /*   0  0x00  */   CNXT_STATUS_OK = 0,
+   /*   1  0x01  */   CNXT_STATUS_ALREADY_INIT,
+   /*   2  0x02  */   CNXT_STATUS_NOT_INIT,
+   /*   3  0x03  */   CNXT_STATUS_INTERNAL_ERROR,
+   /*   4  0x04  */   CNXT_STATUS_BAD_HANDLE,
+   /*   5  0x05  */   CNXT_STATUS_BAD_PARAMETER,
+   /*   6  0x06  */   CNXT_STATUS_BAD_LENGTH,
+   /*   7  0x07  */   CNXT_STATUS_BAD_UNIT,
+   /*   8  0x08  */   CNXT_STATUS_RESOURCE_ERROR,
+   /*   9  0x09  */   CNXT_STATUS_CLOSED_HANDLE,
+   /*  10  0x0A  */   CNXT_STATUS_TIMEOUT,
+   /*  11  0x0B  */   CNXT_STATUS_NOT_ATTACHED,
+   /*  12  0x0C  */   CNXT_STATUS_NOT_SUPPORTED,
+   /*  13  0x0D  */   CNXT_STATUS_REOPENED_HANDLE,
+   /*  14  0x0E  */   CNXT_STATUS_INVALID,
+   /*  15  0x0F  */   CNXT_STATUS_DESTROYED,
+   /*  16  0x10  */   CNXT_STATUS_DISCONNECTED,
+   /*  17  0x11  */   CNXT_STATUS_BUSY,
+   /*  18  0x12  */   CNXT_STATUS_IN_USE,
+   /*  19  0x13  */   CNXT_STATUS_CANCELLED,
+   /*  20  0x14  */   CNXT_STATUS_UNDEFINED,
+   /*  21  0x15  */   CNXT_STATUS_UNKNOWN,
+   /*  22  0x16  */   CNXT_STATUS_NOT_FOUND,
+   /*  23  0x17  */   CNXT_STATUS_NOT_AVAILABLE,
+   /*  24  0x18  */   CNXT_STATUS_NOT_COMPATIBLE,
+   /*  25  0x19  */   CNXT_STATUS_NOT_IMPLEMENTED,
+   /*  26  0x1A  */   CNXT_STATUS_EMPTY,
+   /*  27  0x1B  */   CNXT_STATUS_FULL,
+   /*  28  0x1C  */   CNXT_STATUS_FAILURE,
+   /*  29  0x1D  */   CNXT_STATUS_ALREADY_ATTACHED,
+   /*  30  0x1E  */   CNXT_STATUS_ALREADY_DONE,
+   /*  31  0x1F  */   CNXT_STATUS_ASLEEP,
+   /*  32  0x20  */   CNXT_STATUS_BAD_ATTACHMENT,
+   /*  33  0x21  */   CNXT_STATUS_BAD_COMMAND,
+   /*  34  0x22  */   CNXT_STATUS_BAD_GPIO,
+   /*  35  0x23  */   CNXT_STATUS_BAD_INDEX,
+   /*  36  0x24  */   CNXT_STATUS_BAD_MODE,
+   /*  37  0x25  */   CNXT_STATUS_BAD_PID,
+   /*  38  0x26  */   CNXT_STATUS_BAD_PLANE,
+   /*  39  0x27  */   CNXT_STATUS_BAD_PTR,
+   /*  40  0x28  */   CNXT_STATUS_BAD_RECT,
+   /*  41  0x29  */   CNXT_STATUS_BAD_RGN_HANDLE,
+   /*  42  0x2A  */   CNXT_STATUS_BAD_SIZE,
+   /*  43  0x2B  */   CNXT_STATUS_INT_HANDLED,
+   /*  44  0x2C  */   CNXT_STATUS_INT_NOT_HANDLED,
+   /*  45  0x2D  */   CNXT_STATUS_NOT_SET,
+   /*  46  0x2E  */   CNXT_STATUS_NOT_HOOKED,
+   /*  47  0x2F  */   CNXT_STATUS_CC_NOT_ENABLED,
+   /*  48  0x30  */   CNXT_STATUS_CLOSED_RGN,
+   /*  49  0x31  */   CNXT_STATUS_COMPLETE,
+   /*  50  0x32  */   CNXT_STATUS_DEMOD_ERROR,
+   /*  51  0x33  */   CNXT_STATUS_INVALID_NODE,
+   /*  52  0x34  */   CNXT_STATUS_DUPLICATE_NODE,
+   /*  53  0x35  */   CNXT_STATUS_HARDWARE_NOT_FOUND,
+   /*  54  0x36  */   CNXT_STATUS_HDCP_AUTH_FAILED,
+   /*  55  0x37  */   CNXT_STATUS_HDCP_BAD_BKSV,
+   /*  56  0x38  */   CNXT_STATUS_ILLEGAL_OPERATION,
+   /*  57  0x39  */   CNXT_STATUS_INCOMPATIBLE_FORMATS,
+   /*  58  0x3A  */   CNXT_STATUS_INVALID_DEVICE,
+   /*  59  0x3B  */   CNXT_STATUS_INVALID_EDGE,
+   /*  60  0x3C  */   CNXT_STATUS_INVALID_NUMBER,
+   /*  61  0x3D  */   CNXT_STATUS_INVALID_STATE,
+   /*  62  0x3E  */   CNXT_STATUS_INVALID_TYPE,
+   /*  63  0x3F  */   CNXT_STATUS_NO_BUFFER,
+   /*  64  0x40  */   CNXT_STATUS_NO_DESTINATION_BUF,
+   /*  65  0x41  */   CNXT_STATUS_NO_OSD,
+   /*  66  0x42  */   CNXT_STATUS_NO_PALETTE,
+   /*  67  0x43  */   CNXT_STATUS_NO_ACK,
+   /*  68  0x44  */   CNXT_STATUS_RECEIVER_HDMI_INCAPABLE,
+   /*  69  0x45  */   CNXT_STATUS_RECEIVER_NOT_ATTACHED,
+   /*  70  0x46  */   CNXT_STATUS_ADJUSTED,
+   /*  71  0x47  */   CNXT_STATUS_CLIPPED,
+   /*  72  0x48  */   CNXT_STATUS_CLIPRECT_ADJUSTED,
+   /*  73  0x49  */   CNXT_STATUS_NOT_ALIGNED,
+   /*  74  0x4A  */   CNXT_STATUS_FIXUP_OK,
+   /*  75  0x4B  */   CNXT_STATUS_FIXUP_OPTION_ERROR,
+   /*  76  0x4C  */   CNXT_STATUS_FIXUP_ZERO_RECT,
+   /*  77  0x4D  */   CNXT_STATUS_UNABLE_TO_FIXUP_AND_PRESERVE,
+   /*  78  0x4E  */   CNXT_STATUS_UNABLE_TO_FIXUP_X,
+   /*  79  0x4F  */   CNXT_STATUS_UNABLE_TO_FIXUP_Y,
+   /*  80  0x50  */   CNXT_STATUS_OUT_OF_BOUNDS,
+   /*  81  0x51  */   CNXT_STATUS_OUTSIDE_CLIP_RECT,
+   /*  82  0x52  */   CNXT_STATUS_RECT_CLIPPED,
+   /*  83  0x53  */   CNXT_STATUS_RECT_ENCLOSED,
+   /*  84  0x54  */   CNXT_STATUS_RECT_FIXED_UP,
+   /*  85  0x55  */   CNXT_STATUS_RECT_INCLUDES,
+   /*  86  0x56  */   CNXT_STATUS_RECT_NO_OVERLAP,
+   /*  87  0x57  */   CNXT_STATUS_RECT_OVERLAP,
+   /*  88  0x58  */   CNXT_STATUS_RECT_ZERO_AREA,
+   /*  89  0x59  */   CNXT_STATUS_SERVICE_LIST_NOT_READY,
+   /*  90  0x5A  */   CNXT_STATUS_SERVICE_LIST_READY,
+   /*  91  0x5B  */   CNXT_STATUS_STOPPED,
+   /*  92  0x5C  */   CNXT_STATUS_SUSPENDED,
+   /*  93  0x5D  */   CNXT_STATUS_TERMINATED,
+   /*  94  0x5E  */   CNXT_STATUS_TOO_MUCH_DATA,
+   /*  95  0x5F  */   CNXT_STATUS_WIPE_NONE,
+   /*  96  0x60  */   CNXT_STATUS_NOT_STOPPED,
+   /*  97  0x61  */   CNXT_STATUS_INT_NOT_COMPLETE,
+   /*  98  0x62  */   CNXT_STATUS_NOT_ALLOWED,
+   /*  99  0x63  */   CNXT_STATUS_DUPLICATE_PID,
+   /* 100  0x64  */   CNXT_STATUS_MAX_FILTERS_ATTACHED,
+   /* 101  0x65  */   CNXT_STATUS_HW_NOT_READY,
+   /* 102  0x66  */   CNXT_STATUS_OUTPUT_BUF_FULL,
+   /* 103  0x67  */   CNXT_STATUS_REJECTED,
+   /* 104  0x68  */   CNXT_STATUS_INVALID_PID,
+   /* 105  0x69  */   CNXT_STATUS_EOF,
+   /* 106  0x6A  */   CNXT_STATUS_BOF,
+   /* 107  0x6B  */   CNXT_STATUS_MISSING_DATA,
+   /* 108  0x6C  */   CNXT_STATUS_PM_ACK,
+   /* 109  0x6D  */   CNXT_STATUS_PM_NAK,
+   /* 110  0x6E  */   CNXT_STATUS_PM_ACCEPTED,
+   /* 111  0x6F  */   CNXT_STATUS_PM_REJECTED,
+   /* 112  0x70  */   CNXT_STATUS_PM_PENDING,
+               CNXT_STATUS_CODE_LAST = CNXT_STATUS_PM_PENDING
+} CNXT_STATUS;
+
+typedef enum 
+{
+   INPUT_PORT_0 = 0,
+   INPUT_PORT_1,
+   OUTPUT_PORT_0,
+   OUTPUT_PORT_1,
+   POLARITY_INV_PORT_0,
+   POLARITY_INV_PORT_1,
+   CONFIGURATION_PORT_0,
+   CONFIGURATION_PORT_1
+} I2C_GPIO_EXP_CMD;
+
+/**************
+* Definitions *
+***************/
+#define TRUE   1
+#define FALSE  0
+//#define NULL   ((void *)0)
+#define true   1
+#define false  0
+/*
+ * Access macros used to get, set, or clear bits within a hardware register.
+ * These macros *do not* perform any automatic shifting of bits and are
+ * meant to be used with bit definitions which include their encoded bit
+ * position within the register definition (e.g. an enable bit).
+ */
+#define GET_REG(reg,mask)       (*(reg_t *)(reg) & (mask))
+#ifdef SRAM_IMAGE
+#define SET_REG(reg,mask,val)   __asm{ nop; nop; nop } ((*(reg_t *)(reg)) = ((*(reg_t *)(reg) & ~(mask)) | ((val) & (mask))))
+#else
+#define SET_REG(reg,mask,val)   ((*(reg_t *)(reg)) = ((*(reg_t *)(reg) & ~(mask)) | ((val) & (mask))))
+#endif /* SRAM_IMAGE */
+
+
+/*********************
+* External Variables *
+**********************/
+
+
+/**********************
+* Function Prototypes *
+***********************/
+
+
+#endif /* _LDR_TYPES_H_ */
+
diff -Naur u-boot-2009.08/lib_arm/libfuncs.h u-boot-2009.08_alpha2/lib_arm/libfuncs.h
--- u-boot-2009.08/lib_arm/libfuncs.h	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/lib_arm/libfuncs.h	2009-11-21 16:02:24.000000000 -0600
@@ -0,0 +1,34 @@
+/****************************************************************************
+ *
+ * Filename:        libfuncs.h
+ *
+ ****************************************************************************/
+/* $Id: libfuncs.h 131363 2009-11-21 22:02:24Z murthyk $
+ ****************************************************************************/
+
+#define _IOFBF           0
+#define SEEK_END         0
+#define SEEK_SET         0
+#define stdout           0
+#define stderr           0
+
+typedef int FILE;
+void printf(char *, ...);
+int scanf(char *, ...);
+FILE* fopen(char* fn, char* mode);
+int fread(void *c, int num, int size, FILE *h);
+int fseek(FILE *h, int offset, int pos);
+int ftell(FILE *h);
+int fflush(FILE *h);
+int fclose(FILE *h);
+int fprintf(FILE *h, char *, ...);
+int setvbuf(FILE *h, void *, int, int);
+int sprintf(char *c, const char *format, ...);
+void ForceQuiet(int);
+char getc(FILE *h);
+
+/*******************************************************************************
+ * Modifications:
+ * $Log$
+ ******************************************************************************/
+
diff -Naur u-boot-2009.08/lib_arm/Makefile u-boot-2009.08_alpha2/lib_arm/Makefile
--- u-boot-2009.08/lib_arm/Makefile	2009-08-31 12:57:42.000000000 -0500
+++ u-boot-2009.08_alpha2/lib_arm/Makefile	2009-12-21 09:58:43.000000000 -0600
@@ -44,6 +44,15 @@
 endif
 COBJS-y	+= interrupts.o
 COBJS-y	+= reset.o
+COBJS-y	+= flash.o
+COBJS-y	+= dmac.o
+COBJS-y	+= ip2070gcs.o
+
+HOSTCFLAGS += -I $(_TMROOT)/inc
+HOSTCFLAGS += -I $(_TMTGTBUILDROOT)/cfgtoh/$(STB_HW_CONFIG)-bare
+HOSTCFLAGS += -D__UBOOT__
+
+CFLAGS += $(HOSTCFLAGS)
 
 SRCS	:= $(GLSOBJS:.o=.S) $(GLCOBJS:.o=.c) \
 	   $(SOBJS-y:.o=.S) $(COBJS-y:.o=.c)
diff -Naur u-boot-2009.08/lib_i386/board.c u-boot-2009.08_alpha2/lib_i386/board.c
--- u-boot-2009.08/lib_i386/board.c	2009-08-31 12:57:42.000000000 -0500
+++ u-boot-2009.08_alpha2/lib_i386/board.c	2009-12-17 10:10:29.000000000 -0600
@@ -422,6 +422,10 @@
 
 unsigned long do_go_exec (ulong (*entry)(int, char *[]), int argc, char *argv[])
 {
+	*((unsigned int*)0xe06ead5c) = 0xAAAA ;
+	puts ("###  ###\n");
+
+
 	/*
 	 * TODO: Test this function - changed to fix compiler error.
 	 * Original code was:
diff -Naur u-boot-2009.08/lib_nios/board.c u-boot-2009.08_alpha2/lib_nios/board.c
--- u-boot-2009.08/lib_nios/board.c	2009-08-31 12:57:42.000000000 -0500
+++ u-boot-2009.08_alpha2/lib_nios/board.c	2009-12-17 10:10:29.000000000 -0600
@@ -190,6 +190,9 @@
 
 unsigned long do_go_exec (ulong (*entry)(int, char *[]), int argc, char *argv[])
 {
+	*((unsigned int*)0xe06ead60) = 0x5555 ;
+	puts ("@@@  @@@\n");
+
 	/*
 	 * x86 does not use a dedicated register to pass the pointer
 	 * to the global_data
diff -Naur u-boot-2009.08/Makefile u-boot-2009.08_alpha2/Makefile
--- u-boot-2009.08/Makefile	2010-01-18 19:09:08.000000000 -0600
+++ u-boot-2009.08_alpha2/Makefile	2009-12-17 10:10:29.000000000 -0600
@@ -213,6 +213,7 @@
 LIBS += drivers/mmc/libmmc.a
 LIBS += drivers/mtd/libmtd.a
 LIBS += drivers/mtd/nand/libnand.a
+LIBS += drivers/mtd/nor/libnor.a
 LIBS += drivers/mtd/onenand/libonenand.a
 LIBS += drivers/mtd/ubi/libubi.a
 LIBS += drivers/mtd/spi/libspi_flash.a
diff -Naur u-boot-2009.08/Makefile~ u-boot-2009.08_alpha2/Makefile~
--- u-boot-2009.08/Makefile~	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08_alpha2/Makefile~	2009-12-17 10:10:29.000000000 -0600
@@ -0,0 +1,3736 @@
+#
+# (C) Copyright 2000-2009
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundatio; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+VERSION = 2009
+PATCHLEVEL = 08
+SUBLEVEL =
+EXTRAVERSION =
+ifneq "$(SUBLEVEL)" ""
+U_BOOT_VERSION = $(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION)
+else
+U_BOOT_VERSION = $(VERSION).$(PATCHLEVEL)$(EXTRAVERSION)
+endif
+TIMESTAMP_FILE = $(obj)include/timestamp_autogenerated.h
+VERSION_FILE = $(obj)include/version_autogenerated.h
+
+HOSTARCH := $(shell uname -m | \
+	sed -e s/i.86/i386/ \
+	    -e s/sun4u/sparc64/ \
+	    -e s/arm.*/arm/ \
+	    -e s/sa110/arm/ \
+	    -e s/powerpc/ppc/ \
+	    -e s/ppc64/ppc/ \
+	    -e s/macppc/ppc/)
+
+HOSTOS := $(shell uname -s | tr '[:upper:]' '[:lower:]' | \
+	    sed -e 's/\(cygwin\).*/cygwin/')
+
+# Set shell to bash if possible, otherwise fall back to sh
+SHELL := $(shell if [ -x "$$BASH" ]; then echo $$BASH; \
+	else if [ -x /bin/bash ]; then echo /bin/bash; \
+	else echo sh; fi; fi)
+
+export	HOSTARCH HOSTOS SHELL
+
+# Deal with colliding definitions from tcsh etc.
+VENDOR=
+
+#########################################################################
+# Allow for silent builds
+ifeq (,$(findstring s,$(MAKEFLAGS)))
+XECHO = echo
+else
+XECHO = :
+endif
+
+#########################################################################
+#
+# U-boot build supports producing a object files to the separate external
+# directory. Two use cases are supported:
+#
+# 1) Add O= to the make command line
+# 'make O=/tmp/build all'
+#
+# 2) Set environement variable BUILD_DIR to point to the desired location
+# 'export BUILD_DIR=/tmp/build'
+# 'make'
+#
+# The second approach can also be used with a MAKEALL script
+# 'export BUILD_DIR=/tmp/build'
+# './MAKEALL'
+#
+# Command line 'O=' setting overrides BUILD_DIR environent variable.
+#
+# When none of the above methods is used the local build is performed and
+# the object files are placed in the source directory.
+#
+
+ifdef O
+ifeq ("$(origin O)", "command line")
+BUILD_DIR := $(O)
+endif
+endif
+
+ifneq ($(BUILD_DIR),)
+saved-output := $(BUILD_DIR)
+
+# Attempt to create a output directory.
+$(shell [ -d ${BUILD_DIR} ] || mkdir -p ${BUILD_DIR})
+
+# Verify if it was successful.
+BUILD_DIR := $(shell cd $(BUILD_DIR) && /bin/pwd)
+$(if $(BUILD_DIR),,$(error output directory "$(saved-output)" does not exist))
+endif # ifneq ($(BUILD_DIR),)
+
+OBJTREE		:= $(if $(BUILD_DIR),$(BUILD_DIR),$(CURDIR))
+SRCTREE		:= $(CURDIR)
+TOPDIR		:= $(SRCTREE)
+LNDIR		:= $(OBJTREE)
+export	TOPDIR SRCTREE OBJTREE
+
+MKCONFIG	:= $(SRCTREE)/mkconfig
+export MKCONFIG
+
+ifneq ($(OBJTREE),$(SRCTREE))
+REMOTE_BUILD	:= 1
+export REMOTE_BUILD
+endif
+
+# $(obj) and (src) are defined in config.mk but here in main Makefile
+# we also need them before config.mk is included which is the case for
+# some targets like unconfig, clean, clobber, distclean, etc.
+ifneq ($(OBJTREE),$(SRCTREE))
+obj := $(OBJTREE)/
+src := $(SRCTREE)/
+else
+obj :=
+src :=
+endif
+export obj src
+
+# Make sure CDPATH settings don't interfere
+unexport CDPATH
+
+#########################################################################
+
+ifeq ($(ARCH),powerpc)
+ARCH = ppc
+endif
+
+# The "tools" are needed early, so put this first
+# Don't include stuff already done in $(LIBS)
+SUBDIRS	= tools \
+	  examples/standalone \
+	  examples/api
+
+.PHONY : $(SUBDIRS)
+
+ifeq ($(obj)include/config.mk,$(wildcard $(obj)include/config.mk))
+
+# Include autoconf.mk before config.mk so that the config options are available
+# to all top level build files.  We need the dummy all: target to prevent the
+# dependency target in autoconf.mk.dep from being the default.
+all:
+sinclude $(obj)include/autoconf.mk.dep
+sinclude $(obj)include/autoconf.mk
+
+# load ARCH, BOARD, and CPU configuration
+include $(obj)include/config.mk
+export	ARCH CPU BOARD VENDOR SOC
+
+# set default to nothing for native builds
+ifeq ($(HOSTARCH),$(ARCH))
+CROSS_COMPILE ?=
+endif
+
+# load other configuration
+include $(TOPDIR)/config.mk
+
+#########################################################################
+# U-Boot objects....order is important (i.e. start must be first)
+
+OBJS  = cpu/$(CPU)/start.o
+ifeq ($(CPU),i386)
+OBJS += cpu/$(CPU)/start16.o
+OBJS += cpu/$(CPU)/resetvec.o
+endif
+ifeq ($(CPU),ppc4xx)
+OBJS += cpu/$(CPU)/resetvec.o
+endif
+ifeq ($(CPU),mpc85xx)
+OBJS += cpu/$(CPU)/resetvec.o
+endif
+
+OBJS := $(addprefix $(obj),$(OBJS))
+
+LIBS  = lib_generic/libgeneric.a
+LIBS += lib_generic/lzma/liblzma.a
+LIBS += lib_generic/lzo/liblzo.a
+LIBS += $(shell if [ -f board/$(VENDOR)/common/Makefile ]; then echo \
+	"board/$(VENDOR)/common/lib$(VENDOR).a"; fi)
+LIBS += cpu/$(CPU)/lib$(CPU).a
+ifdef SOC
+LIBS += cpu/$(CPU)/$(SOC)/lib$(SOC).a
+endif
+ifeq ($(CPU),ixp)
+LIBS += cpu/ixp/npe/libnpe.a
+endif
+LIBS += lib_$(ARCH)/lib$(ARCH).a
+LIBS += fs/cramfs/libcramfs.a fs/fat/libfat.a fs/fdos/libfdos.a fs/jffs2/libjffs2.a \
+	fs/reiserfs/libreiserfs.a fs/ext2/libext2fs.a fs/yaffs2/libyaffs2.a \
+	fs/ubifs/libubifs.a
+LIBS += net/libnet.a
+LIBS += disk/libdisk.a
+LIBS += drivers/bios_emulator/libatibiosemu.a
+LIBS += drivers/block/libblock.a
+LIBS += drivers/dma/libdma.a
+LIBS += drivers/fpga/libfpga.a
+LIBS += drivers/gpio/libgpio.a
+LIBS += drivers/hwmon/libhwmon.a
+LIBS += drivers/i2c/libi2c.a
+LIBS += drivers/input/libinput.a
+LIBS += drivers/misc/libmisc.a
+LIBS += drivers/mmc/libmmc.a
+LIBS += drivers/mtd/libmtd.a
+LIBS += drivers/mtd/nand/libnand.a
+LIBS += drivers/mtd/onenand/libonenand.a
+LIBS += drivers/mtd/ubi/libubi.a
+LIBS += drivers/mtd/spi/libspi_flash.a
+LIBS += drivers/net/libnet.a
+LIBS += drivers/net/phy/libphy.a
+LIBS += drivers/net/sk98lin/libsk98lin.a
+LIBS += drivers/pci/libpci.a
+LIBS += drivers/pcmcia/libpcmcia.a
+LIBS += drivers/power/libpower.a
+LIBS += drivers/spi/libspi.a
+ifeq ($(CPU),mpc83xx)
+LIBS += drivers/qe/qe.a
+endif
+ifeq ($(CPU),mpc85xx)
+LIBS += drivers/qe/qe.a
+LIBS += cpu/mpc8xxx/ddr/libddr.a
+TAG_SUBDIRS += cpu/mpc8xxx
+endif
+ifeq ($(CPU),mpc86xx)
+LIBS += cpu/mpc8xxx/ddr/libddr.a
+TAG_SUBDIRS += cpu/mpc8xxx
+endif
+LIBS += drivers/rtc/librtc.a
+LIBS += drivers/serial/libserial.a
+LIBS += drivers/twserial/libtws.a
+LIBS += drivers/usb/gadget/libusb_gadget.a
+LIBS += drivers/usb/host/libusb_host.a
+LIBS += drivers/usb/musb/libusb_musb.a
+LIBS += drivers/video/libvideo.a
+LIBS += drivers/watchdog/libwatchdog.a
+LIBS += common/libcommon.a
+LIBS += libfdt/libfdt.a
+LIBS += api/libapi.a
+LIBS += post/libpost.a
+
+LIBS := $(addprefix $(obj),$(LIBS))
+.PHONY : $(LIBS) $(TIMESTAMP_FILE) $(VERSION_FILE)
+
+LIBBOARD = board/$(BOARDDIR)/lib$(BOARD).a
+LIBBOARD := $(addprefix $(obj),$(LIBBOARD))
+
+# Add GCC lib
+ifdef USE_PRIVATE_LIBGCC
+ifeq ("$(USE_PRIVATE_LIBGCC)", "yes")
+PLATFORM_LIBGCC = -L $(OBJTREE)/lib_$(ARCH) -lgcc
+else
+PLATFORM_LIBGCC = -L $(USE_PRIVATE_LIBGCC) -lgcc
+endif
+else
+PLATFORM_LIBGCC = -L $(shell dirname `$(CC) $(CFLAGS) -print-libgcc-file-name`) -lgcc
+endif
+PLATFORM_LIBS += $(PLATFORM_LIBGCC)
+export PLATFORM_LIBS
+
+# Special flags for CPP when processing the linker script.
+# Pass the version down so we can handle backwards compatibility
+# on the fly.
+LDPPFLAGS += \
+	-include $(TOPDIR)/include/u-boot/u-boot.lds.h \
+	$(shell $(LD) --version | \
+	  sed -ne 's/GNU ld version \([0-9][0-9]*\)\.\([0-9][0-9]*\).*/-DLD_MAJOR=\1 -DLD_MINOR=\2/p')
+
+ifeq ($(CONFIG_NAND_U_BOOT),y)
+NAND_SPL = nand_spl
+U_BOOT_NAND = $(obj)u-boot-nand.bin
+endif
+
+ifeq ($(CONFIG_ONENAND_U_BOOT),y)
+ONENAND_IPL = onenand_ipl
+U_BOOT_ONENAND = $(obj)u-boot-onenand.bin
+endif
+
+__OBJS := $(subst $(obj),,$(OBJS))
+__LIBS := $(subst $(obj),,$(LIBS)) $(subst $(obj),,$(LIBBOARD))
+
+#########################################################################
+#########################################################################
+
+# Always append ALL so that arch config.mk's can add custom ones
+ALL += $(obj)u-boot.srec $(obj)u-boot.bin $(obj)System.map $(U_BOOT_NAND) $(U_BOOT_ONENAND)
+
+all:		$(ALL)
+
+$(obj)u-boot.hex:	$(obj)u-boot
+		$(OBJCOPY) ${OBJCFLAGS} -O ihex $< $@
+
+$(obj)u-boot.srec:	$(obj)u-boot
+		$(OBJCOPY) -O srec $< $@
+
+$(obj)u-boot.bin:	$(obj)u-boot
+		$(OBJCOPY) ${OBJCFLAGS} -O binary $< $@
+
+$(obj)u-boot.ldr:	$(obj)u-boot
+		$(obj)tools/envcrc --binary > $(obj)env-ldr.o
+		$(LDR) -T $(CONFIG_BFIN_CPU) -c $@ $< $(LDR_FLAGS)
+
+$(obj)u-boot.ldr.hex:	$(obj)u-boot.ldr
+		$(OBJCOPY) ${OBJCFLAGS} -O ihex $< $@ -I binary
+
+$(obj)u-boot.ldr.srec:	$(obj)u-boot.ldr
+		$(OBJCOPY) ${OBJCFLAGS} -O srec $< $@ -I binary
+
+$(obj)u-boot.img:	$(obj)u-boot.bin
+		./tools/mkimage -A $(ARCH) -T firmware -C none \
+		-a $(TEXT_BASE) -e 0 \
+		-n $(shell sed -n -e 's/.*U_BOOT_VERSION//p' $(VERSION_FILE) | \
+			sed -e 's/"[	 ]*$$/ for $(BOARD) board"/') \
+		-d $< $@
+
+$(obj)u-boot.sha1:	$(obj)u-boot.bin
+		$(obj)tools/ubsha1 $(obj)u-boot.bin
+
+$(obj)u-boot.dis:	$(obj)u-boot
+		$(OBJDUMP) -d $< > $@
+
+GEN_UBOOT = \
+		UNDEF_SYM=`$(OBJDUMP) -x $(LIBBOARD) $(LIBS) | \
+		sed  -n -e 's/.*\($(SYM_PREFIX)__u_boot_cmd_.*\)/-u\1/p'|sort|uniq`;\
+		cd $(LNDIR) && $(LD) $(LDFLAGS) $$UNDEF_SYM $(__OBJS) \
+			--start-group $(__LIBS) --end-group $(PLATFORM_LIBS) \
+			-Map u-boot.map -o u-boot
+$(obj)u-boot:	depend $(SUBDIRS) $(OBJS) $(LIBBOARD) $(LIBS) $(LDSCRIPT) $(obj)u-boot.lds
+		$(GEN_UBOOT)
+ifeq ($(CONFIG_KALLSYMS),y)
+		smap=`$(call SYSTEM_MAP,u-boot) | \
+			awk '$$2 ~ /[tTwW]/ {printf $$1 $$3 "\\\\000"}'` ; \
+		$(CC) $(CFLAGS) -DSYSTEM_MAP="\"$${smap}\"" \
+			-c common/system_map.c -o $(obj)common/system_map.o
+		$(GEN_UBOOT) $(obj)common/system_map.o
+endif
+
+$(OBJS):	depend
+		$(MAKE) -C cpu/$(CPU) $(if $(REMOTE_BUILD),$@,$(notdir $@))
+
+$(LIBS):	depend $(SUBDIRS)
+		$(MAKE) -C $(dir $(subst $(obj),,$@))
+
+$(LIBBOARD):	depend $(LIBS)
+		$(MAKE) -C $(dir $(subst $(obj),,$@))
+
+$(SUBDIRS):	depend
+		$(MAKE) -C $@ all
+
+$(LDSCRIPT):	depend
+		$(MAKE) -C $(dir $@) $(notdir $@)
+
+$(obj)u-boot.lds: $(LDSCRIPT)
+		$(CPP) $(CPPFLAGS) $(LDPPFLAGS) -ansi -D__ASSEMBLY__ -P - <$^ >$@
+
+$(NAND_SPL):	$(TIMESTAMP_FILE) $(VERSION_FILE) $(obj)include/autoconf.mk
+		$(MAKE) -C nand_spl/board/$(BOARDDIR) all
+
+$(U_BOOT_NAND):	$(NAND_SPL) $(obj)u-boot.bin
+		cat $(obj)nand_spl/u-boot-spl-16k.bin $(obj)u-boot.bin > $(obj)u-boot-nand.bin
+
+$(ONENAND_IPL):	$(TIMESTAMP_FILE) $(VERSION_FILE) $(obj)include/autoconf.mk
+		$(MAKE) -C onenand_ipl/board/$(BOARDDIR) all
+
+$(U_BOOT_ONENAND):	$(ONENAND_IPL) $(obj)u-boot.bin
+		cat $(obj)onenand_ipl/onenand-ipl-2k.bin $(obj)u-boot.bin > $(obj)u-boot-onenand.bin
+		cat $(obj)onenand_ipl/onenand-ipl-4k.bin $(obj)u-boot.bin > $(obj)u-boot-flexonenand.bin
+
+$(VERSION_FILE):
+		@( printf '#define U_BOOT_VERSION "U-Boot %s%s"\n' "$(U_BOOT_VERSION)" \
+		 '$(shell $(TOPDIR)/tools/setlocalversion $(TOPDIR))' ) > $@.tmp
+		@cmp -s $@ $@.tmp && rm -f $@.tmp || mv -f $@.tmp $@
+
+$(TIMESTAMP_FILE):
+		@date +'#define U_BOOT_DATE "%b %d %C%y"' > $@
+		@date +'#define U_BOOT_TIME "%T"' >> $@
+
+gdbtools:
+		$(MAKE) -C tools/gdb all || exit 1
+
+updater:
+		$(MAKE) -C tools/updater all || exit 1
+
+env:
+		$(MAKE) -C tools/env all MTD_VERSION=${MTD_VERSION} || exit 1
+
+depend dep:	$(TIMESTAMP_FILE) $(VERSION_FILE) $(obj)include/autoconf.mk
+		for dir in $(SUBDIRS) ; do $(MAKE) -C $$dir _depend ; done
+
+TAG_SUBDIRS += include
+TAG_SUBDIRS += lib_generic board/$(BOARDDIR)
+TAG_SUBDIRS += cpu/$(CPU)
+TAG_SUBDIRS += lib_$(ARCH)
+TAG_SUBDIRS += fs/cramfs
+TAG_SUBDIRS += fs/fat
+TAG_SUBDIRS += fs/fdos
+TAG_SUBDIRS += fs/jffs2
+TAG_SUBDIRS += fs/yaffs2
+TAG_SUBDIRS += net
+TAG_SUBDIRS += disk
+TAG_SUBDIRS += common
+TAG_SUBDIRS += drivers/bios_emulator
+TAG_SUBDIRS += drivers/block
+TAG_SUBDIRS += drivers/gpio
+TAG_SUBDIRS += drivers/hwmon
+TAG_SUBDIRS += drivers/i2c
+TAG_SUBDIRS += drivers/input
+TAG_SUBDIRS += drivers/misc
+TAG_SUBDIRS += drivers/mmc
+TAG_SUBDIRS += drivers/mtd
+TAG_SUBDIRS += drivers/mtd/nand
+TAG_SUBDIRS += drivers/mtd/onenand
+TAG_SUBDIRS += drivers/mtd/spi
+TAG_SUBDIRS += drivers/net
+TAG_SUBDIRS += drivers/net/sk98lin
+TAG_SUBDIRS += drivers/pci
+TAG_SUBDIRS += drivers/pcmcia
+TAG_SUBDIRS += drivers/qe
+TAG_SUBDIRS += drivers/rtc
+TAG_SUBDIRS += drivers/serial
+TAG_SUBDIRS += drivers/spi
+TAG_SUBDIRS += drivers/usb
+TAG_SUBDIRS += drivers/video
+
+tags ctags:
+		ctags -w -o $(obj)ctags `find $(SUBDIRS) $(TAG_SUBDIRS) \
+						-name '*.[ch]' -print`
+
+etags:
+		etags -a -o $(obj)etags `find $(SUBDIRS) $(TAG_SUBDIRS) \
+						-name '*.[ch]' -print`
+cscope:
+		find $(SUBDIRS) $(TAG_SUBDIRS) -name '*.[ch]' -print \
+						> cscope.files
+		cscope -b -q -k
+
+SYSTEM_MAP = \
+		$(NM) $1 | \
+		grep -v '\(compiled\)\|\(\.o$$\)\|\( [aUw] \)\|\(\.\.ng$$\)\|\(LASH[RL]DI\)' | \
+		LC_ALL=C sort
+$(obj)System.map:	$(obj)u-boot
+		@$(call SYSTEM_MAP,$<) > $(obj)System.map
+
+#
+# Auto-generate the autoconf.mk file (which is included by all makefiles)
+#
+# This target actually generates 2 files; autoconf.mk and autoconf.mk.dep.
+# the dep file is only include in this top level makefile to determine when
+# to regenerate the autoconf.mk file.
+$(obj)include/autoconf.mk.dep: $(obj)include/config.h include/common.h
+	@$(XECHO) Generating $@ ; \
+	set -e ; \
+	: Generate the dependancies ; \
+	$(CC) -x c -DDO_DEPS_ONLY -M $(HOSTCFLAGS) $(CPPFLAGS) \
+		-MQ $(obj)include/autoconf.mk include/common.h > $@
+
+$(obj)include/autoconf.mk: $(obj)include/config.h
+	@$(XECHO) Generating $@ ; \
+	set -e ; \
+	: Extract the config macros ; \
+	$(CPP) $(CFLAGS) -DDO_DEPS_ONLY -dM include/common.h | \
+		sed -n -f tools/scripts/define2mk.sed > $@.tmp && \
+	mv $@.tmp $@
+
+#########################################################################
+else	# !config.mk
+all $(obj)u-boot.hex $(obj)u-boot.srec $(obj)u-boot.bin \
+$(obj)u-boot.img $(obj)u-boot.dis $(obj)u-boot \
+$(SUBDIRS) $(TIMESTAMP_FILE) $(VERSION_FILE) gdbtools updater env depend \
+dep tags ctags etags cscope $(obj)System.map:
+	@echo "System not configured - see README" >&2
+	@ exit 1
+endif	# config.mk
+
+.PHONY : CHANGELOG
+CHANGELOG:
+	git log --no-merges U-Boot-1_1_5.. | \
+	unexpand -a | sed -e 's/\s\s*$$//' > $@
+
+include/license.h: tools/bin2header COPYING
+	 cat COPYING | gzip -9 -c | ./tools/bin2header license_gzip > include/license.h
+#########################################################################
+
+unconfig:
+	@rm -f $(obj)include/config.h $(obj)include/config.mk \
+		$(obj)board/*/config.tmp $(obj)board/*/*/config.tmp \
+		$(obj)include/autoconf.mk $(obj)include/autoconf.mk.dep
+
+#========================================================================
+# PowerPC
+#========================================================================
+
+#########################################################################
+## MPC5xx Systems
+#########################################################################
+
+canmb_config:	unconfig
+	@$(MKCONFIG) -a canmb ppc mpc5xxx canmb
+
+cmi_mpc5xx_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc5xx cmi
+
+PATI_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc5xx pati mpl
+
+#########################################################################
+## MPC5xxx Systems
+#########################################################################
+
+aev_config: unconfig
+	@$(MKCONFIG) -a aev ppc mpc5xxx tqm5200 tqc
+
+BC3450_config:	unconfig
+	@$(MKCONFIG) -a BC3450 ppc mpc5xxx bc3450
+
+cm5200_config:	unconfig
+	@$(MKCONFIG) -a cm5200 ppc mpc5xxx cm5200
+
+cpci5200_config:  unconfig
+	@$(MKCONFIG) -a cpci5200  ppc mpc5xxx cpci5200 esd
+
+digsy_mtc_config \
+digsy_mtc_LOWBOOT_config	\
+digsy_mtc_RAMBOOT_config:	unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/digsy_mtc
+	@ >$(obj)include/config.h
+	@[ -z "$(findstring LOWBOOT_,$@)" ] || \
+		{ echo "TEXT_BASE = 0xFF000000" >$(obj)board/digsy_mtc/config.tmp ; \
+		  echo "... with LOWBOOT configuration" ; \
+		}
+	@[ -z "$(findstring RAMBOOT_,$@)" ] || \
+		{ echo "TEXT_BASE = 0x00100000" >$(obj)board/digsy_mtc/config.tmp ; \
+		  echo "... with RAMBOOT configuration" ; \
+		}
+	@$(MKCONFIG) -a digsy_mtc  ppc mpc5xxx digsy_mtc
+
+hmi1001_config:	unconfig
+	@$(MKCONFIG) hmi1001 ppc mpc5xxx hmi1001
+
+Lite5200_config				\
+Lite5200_LOWBOOT_config			\
+Lite5200_LOWBOOT08_config		\
+icecube_5200_config			\
+icecube_5200_LOWBOOT_config		\
+icecube_5200_LOWBOOT08_config		\
+icecube_5200_DDR_config			\
+icecube_5200_DDR_LOWBOOT_config		\
+icecube_5200_DDR_LOWBOOT08_config	\
+icecube_5100_config:			unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/icecube
+	@[ -z "$(findstring LOWBOOT_,$@)" ] || \
+		{ if [ "$(findstring DDR,$@)" ] ; \
+			then echo "TEXT_BASE = 0xFF800000" >$(obj)board/icecube/config.tmp ; \
+			else echo "TEXT_BASE = 0xFF000000" >$(obj)board/icecube/config.tmp ; \
+		  fi ; \
+		  $(XECHO) "... with LOWBOOT configuration" ; \
+		}
+	@[ -z "$(findstring LOWBOOT08,$@)" ] || \
+		{ echo "TEXT_BASE = 0xFF800000" >$(obj)board/icecube/config.tmp ; \
+		  echo "... with 8 MB flash only" ; \
+		  $(XECHO) "... with LOWBOOT configuration" ; \
+		}
+	@[ -z "$(findstring DDR,$@)" ] || \
+		{ echo "#define CONFIG_MPC5200_DDR"	>>$(obj)include/config.h ; \
+		  $(XECHO) "... DDR memory revision" ; \
+		}
+	@[ -z "$(findstring 5200,$@)" ] || \
+		{ echo "#define CONFIG_MPC5200"		>>$(obj)include/config.h ; \
+		  $(XECHO) "... with MPC5200 processor" ; \
+		}
+	@[ -z "$(findstring 5100,$@)" ] || \
+		{ echo "#define CONFIG_MGT5100"		>>$(obj)include/config.h ; \
+		  $(XECHO) "... with MGT5100 processor" ; \
+		}
+	@$(MKCONFIG) -a IceCube ppc mpc5xxx icecube
+
+jupiter_config:	unconfig
+	@$(MKCONFIG) jupiter ppc mpc5xxx jupiter
+
+inka4x0_config:	unconfig
+	@$(MKCONFIG) inka4x0 ppc mpc5xxx inka4x0
+
+lite5200b_config	\
+lite5200b_PM_config	\
+lite5200b_LOWBOOT_config:	unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/icecube
+	@ echo "#define CONFIG_MPC5200_DDR"	>>$(obj)include/config.h
+	@ $(XECHO) "... DDR memory revision"
+	@ echo "#define CONFIG_MPC5200"		>>$(obj)include/config.h
+	@ echo "#define CONFIG_LITE5200B"	>>$(obj)include/config.h
+	@[ -z "$(findstring _PM_,$@)" ] || \
+		{ echo "#define CONFIG_LITE5200B_PM"	>>$(obj)include/config.h ; \
+		  $(XECHO) "... with power management (low-power mode) support" ; \
+		}
+	@[ -z "$(findstring LOWBOOT_,$@)" ] || \
+		{ echo "TEXT_BASE = 0xFF000000" >$(obj)board/icecube/config.tmp ; \
+		  $(XECHO) "... with LOWBOOT configuration" ; \
+		}
+	@ $(XECHO) "... with MPC5200B processor"
+	@$(MKCONFIG) -a IceCube  ppc mpc5xxx icecube
+
+mcc200_config	\
+mcc200_SDRAM_config	\
+mcc200_highboot_config	\
+mcc200_COM12_config	\
+mcc200_COM12_SDRAM_config	\
+mcc200_COM12_highboot_config	\
+mcc200_COM12_highboot_SDRAM_config	\
+mcc200_highboot_SDRAM_config	\
+prs200_config	\
+prs200_DDR_config	\
+prs200_highboot_config	\
+prs200_highboot_DDR_config:	unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/mcc200
+	@[ -n "$(findstring highboot,$@)" ] || \
+		{ $(XECHO) "... with lowboot configuration" ; \
+		}
+	@[ -z "$(findstring highboot,$@)" ] || \
+		{ echo "TEXT_BASE = 0xFFF00000" >$(obj)board/mcc200/config.tmp ; \
+		  $(XECHO) "... with highboot configuration" ; \
+		}
+	@[ -n "$(findstring _SDRAM,$@)" ] || \
+		{ if [ -n "$(findstring mcc200,$@)" ]; \
+		  then \
+			$(XECHO) "... with DDR" ; \
+		  else \
+			if [ -n "$(findstring _DDR,$@)" ];\
+			then \
+				$(XECHO) "... with DDR" ; \
+			else \
+				echo "#define CONFIG_MCC200_SDRAM" >>$(obj)include/config.h ;\
+				$(XECHO) "... with SDRAM" ; \
+			fi; \
+		  fi; \
+		}
+	@[ -z "$(findstring _SDRAM,$@)" ] || \
+		{ echo "#define CONFIG_MCC200_SDRAM"	>>$(obj)include/config.h ; \
+		  $(XECHO) "... with SDRAM" ; \
+		}
+	@[ -z "$(findstring COM12,$@)" ] || \
+		{ echo "#define CONFIG_CONSOLE_COM12"	>>$(obj)include/config.h ; \
+		  $(XECHO) "... with console on COM12" ; \
+		}
+	@[ -z "$(findstring prs200,$@)" ] || \
+		{ echo "#define CONFIG_PRS200"	>>$(obj)include/config.h ;\
+		}
+	@$(MKCONFIG) -n $@ -a mcc200 ppc mpc5xxx mcc200
+
+mecp5200_config:  unconfig
+	@$(MKCONFIG) mecp5200  ppc mpc5xxx mecp5200 esd
+
+motionpro_config:	unconfig
+	@$(MKCONFIG) motionpro ppc mpc5xxx motionpro
+
+mucmc52_config:		unconfig
+	@$(MKCONFIG) mucmc52 ppc mpc5xxx mucmc52
+
+munices_config:	unconfig
+	@$(MKCONFIG) munices ppc mpc5xxx munices
+
+MVBC_P_config: unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/mvbc_p
+	@ >$(obj)include/config.h
+	@[ -z "$(findstring MVBC_P,$@)" ] || \
+	{   	echo "#define CONFIG_MVBC_P" 	>>$(obj)include/config.h; }
+	@$(MKCONFIG) -n $@ -a MVBC_P ppc mpc5xxx mvbc_p matrix_vision
+
+o2dnt_config:	unconfig
+	@$(MKCONFIG) o2dnt ppc mpc5xxx o2dnt
+
+pcm030_config \
+pcm030_LOWBOOT_config:	unconfig
+	@mkdir -p $(obj)include $(obj)board/phytec/pcm030
+	@ >$(obj)include/config.h
+	@[ -z "$(findstring LOWBOOT_,$@)" ] || \
+		{ echo "TEXT_BASE = 0xFF000000"	>$(obj)board/phytec/pcm030/config.tmp ; \
+		  echo "... with LOWBOOT configuration" ; \
+		}
+	@$(MKCONFIG) -a pcm030 ppc mpc5xxx pcm030 phytec
+
+pf5200_config:	unconfig
+	@$(MKCONFIG) pf5200  ppc mpc5xxx pf5200 esd
+
+PM520_config \
+PM520_DDR_config \
+PM520_ROMBOOT_config \
+PM520_ROMBOOT_DDR_config:	unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring DDR,$@)" ] || \
+		{ echo "#define CONFIG_MPC5200_DDR"	>>$(obj)include/config.h ; \
+		  $(XECHO) "... DDR memory revision" ; \
+		}
+	@[ -z "$(findstring ROMBOOT,$@)" ] || \
+		{ echo "#define CONFIG_BOOT_ROM" >>$(obj)include/config.h ; \
+		  $(XECHO) "... booting from 8-bit flash" ; \
+		}
+	@$(MKCONFIG) -a PM520 ppc mpc5xxx pm520
+
+smmaco4_config: unconfig
+	@$(MKCONFIG) -a smmaco4 ppc mpc5xxx tqm5200 tqc
+
+spieval_config:	unconfig
+	@$(MKCONFIG) -a spieval ppc mpc5xxx tqm5200 tqc
+
+TB5200_B_config \
+TB5200_config:	unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring _B,$@)" ] || \
+		{ echo "#define CONFIG_TQM5200_B"	>>$(obj)include/config.h ; \
+		  $(XECHO) "... with MPC5200B processor" ; \
+		}
+	@$(MKCONFIG) -n $@ -a TB5200 ppc mpc5xxx tqm5200 tqc
+
+MINI5200_config	\
+EVAL5200_config	\
+TOP5200_config:	unconfig
+	@mkdir -p $(obj)include
+	@ echo "#define CONFIG_$(@:_config=) 1"	>$(obj)include/config.h
+	@$(MKCONFIG) -n $@ -a TOP5200 ppc mpc5xxx top5200 emk
+
+Total5100_config		\
+Total5200_config		\
+Total5200_lowboot_config	\
+Total5200_Rev2_config		\
+Total5200_Rev2_lowboot_config:	unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/total5200
+	@[ -z "$(findstring 5100,$@)" ] || \
+		{ echo "#define CONFIG_MGT5100"		>>$(obj)include/config.h ; \
+		  $(XECHO) "... with MGT5100 processor" ; \
+		}
+	@[ -z "$(findstring 5200,$@)" ] || \
+		{ echo "#define CONFIG_MPC5200"		>>$(obj)include/config.h ; \
+		  $(XECHO) "... with MPC5200 processor" ; \
+		}
+	@[ -n "$(findstring Rev,$@)" ] || \
+		{ echo "#define CONFIG_TOTAL5200_REV 1"	>>$(obj)include/config.h ; \
+		  $(XECHO) "... revision 1 board" ; \
+		}
+	@[ -z "$(findstring Rev2_,$@)" ] || \
+		{ echo "#define CONFIG_TOTAL5200_REV 2"	>>$(obj)include/config.h ; \
+		  $(XECHO) "... revision 2 board" ; \
+		}
+	@[ -z "$(findstring lowboot_,$@)" ] || \
+		{ echo "TEXT_BASE = 0xFE000000" >$(obj)board/total5200/config.tmp ; \
+		  $(XECHO) "... with lowboot configuration" ; \
+		}
+	@$(MKCONFIG) -a Total5200 ppc mpc5xxx total5200
+
+cam5200_config \
+cam5200_niosflash_config \
+fo300_config \
+MiniFAP_config \
+TQM5200S_config \
+TQM5200S_HIGHBOOT_config \
+TQM5200_B_config \
+TQM5200_B_HIGHBOOT_config \
+TQM5200_config	\
+TQM5200_STK100_config:	unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/tqc/tqm5200
+	@[ -z "$(findstring cam5200,$@)" ] || \
+		{ echo "#define CONFIG_CAM5200"	>>$(obj)include/config.h ; \
+		  echo "#define CONFIG_TQM5200S"	>>$(obj)include/config.h ; \
+		  echo "#define CONFIG_TQM5200_B"	>>$(obj)include/config.h ; \
+		  $(XECHO) "... TQM5200S on Cam5200" ; \
+		}
+	@[ -z "$(findstring niosflash,$@)" ] || \
+		{ echo "#define CONFIG_CAM5200_NIOSFLASH"	>>$(obj)include/config.h ; \
+		  $(XECHO) "... with NIOS flash driver" ; \
+		}
+	@[ -z "$(findstring fo300,$@)" ] || \
+		{ echo "#define CONFIG_FO300"	>>$(obj)include/config.h ; \
+		  $(XECHO) "... TQM5200 on FO300" ; \
+		}
+	@[ -z "$(findstring MiniFAP,$@)" ] || \
+		{ echo "#define CONFIG_MINIFAP"	>>$(obj)include/config.h ; \
+		  $(XECHO) "... TQM5200_AC on MiniFAP" ; \
+		}
+	@[ -z "$(findstring STK100,$@)" ] || \
+		{ echo "#define CONFIG_STK52XX_REV100"	>>$(obj)include/config.h ; \
+		  $(XECHO) "... on a STK52XX.100 base board" ; \
+		}
+	@[ -z "$(findstring TQM5200_B,$@)" ] || \
+		{ echo "#define CONFIG_TQM5200_B"	>>$(obj)include/config.h ; \
+		}
+	@[ -z "$(findstring TQM5200S,$@)" ] || \
+		{ echo "#define CONFIG_TQM5200S"	>>$(obj)include/config.h ; \
+		  echo "#define CONFIG_TQM5200_B"	>>$(obj)include/config.h ; \
+		}
+	@[ -z "$(findstring HIGHBOOT,$@)" ] || \
+		{ echo "TEXT_BASE = 0xFFF00000" >$(obj)board/tqm5200/config.tmp ; \
+		}
+	@$(MKCONFIG) -n $@ -a TQM5200 ppc mpc5xxx tqm5200 tqc
+
+uc101_config:		unconfig
+	@$(MKCONFIG) uc101 ppc mpc5xxx uc101
+
+v38b_config: unconfig
+	@$(MKCONFIG) -a v38b ppc mpc5xxx v38b
+
+#########################################################################
+## MPC512x Systems
+#########################################################################
+
+aria_config:	unconfig
+	@$(MKCONFIG) -a aria ppc mpc512x aria davedenx
+
+mecp5123_config:	unconfig
+	@$(MKCONFIG) -a mecp5123 ppc mpc512x mecp5123 esd
+
+mpc5121ads_config \
+mpc5121ads_rev2_config	\
+	: unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring rev2,$@)" ] ; then \
+		echo "#define CONFIG_ADS5121_REV2 1" > $(obj)include/config.h; \
+	fi
+	@$(MKCONFIG) -a mpc5121ads ppc mpc512x mpc5121ads freescale
+
+#########################################################################
+## MPC8xx Systems
+#########################################################################
+
+Adder_config	\
+Adder87x_config \
+AdderII_config	\
+	:		unconfig
+	@mkdir -p $(obj)include
+	$(if $(findstring AdderII,$@), \
+	@echo "#define CONFIG_MPC852T" > $(obj)include/config.h)
+	@$(MKCONFIG) -a Adder ppc mpc8xx adder
+
+AdderUSB_config:	unconfig
+	@$(MKCONFIG) -a AdderUSB ppc mpc8xx adder
+
+ADS860_config	  \
+FADS823_config	  \
+FADS850SAR_config \
+MPC86xADS_config  \
+MPC885ADS_config  \
+FADS860T_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx fads
+
+AMX860_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx amx860 westel
+
+c2mon_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx c2mon
+
+CCM_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx CCM siemens
+
+cogent_mpc8xx_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx cogent
+
+ELPT860_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx elpt860 LEOX
+
+EP88x_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx ep88x
+
+ESTEEM192E_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx esteem192e
+
+ETX094_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx etx094
+
+FLAGADM_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx flagadm
+
+xtract_GEN860T = $(subst _SC,,$(subst _config,,$1))
+
+GEN860T_SC_config	\
+GEN860T_config: unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring _SC,$@)" ] || \
+		{ echo "#define CONFIG_SC" >>$(obj)include/config.h ; \
+		  $(XECHO) "With reduced H/W feature set (SC)..." ; \
+		}
+	@$(MKCONFIG) -a $(call xtract_GEN860T,$@) ppc mpc8xx gen860t
+
+GENIETV_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx genietv
+
+GTH_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx gth
+
+hermes_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx hermes
+
+HMI10_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx tqm8xx tqc
+
+IAD210_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx IAD210 siemens
+
+xtract_ICU862 = $(subst _100MHz,,$(subst _config,,$1))
+
+ICU862_100MHz_config	\
+ICU862_config: unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring _100MHz,$@)" ] || \
+		{ echo "#define CONFIG_100MHz"	>>$(obj)include/config.h ; \
+		  $(XECHO) "... with 100MHz system clock" ; \
+		}
+	@$(MKCONFIG) -a $(call xtract_ICU862,$@) ppc mpc8xx icu862
+
+IP860_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx ip860
+
+IVML24_256_config \
+IVML24_128_config \
+IVML24_config:	unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring IVML24_config,$@)" ] || \
+		 { echo "#define CONFIG_IVML24_16M"	>>$(obj)include/config.h ; \
+		 }
+	@[ -z "$(findstring IVML24_128_config,$@)" ] || \
+		 { echo "#define CONFIG_IVML24_32M"	>>$(obj)include/config.h ; \
+		 }
+	@[ -z "$(findstring IVML24_256_config,$@)" ] || \
+		 { echo "#define CONFIG_IVML24_64M"	>>$(obj)include/config.h ; \
+		 }
+	@$(MKCONFIG) -a IVML24 ppc mpc8xx ivm
+
+IVMS8_256_config \
+IVMS8_128_config \
+IVMS8_config:	unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring IVMS8_config,$@)" ] || \
+		 { echo "#define CONFIG_IVMS8_16M"	>>$(obj)include/config.h ; \
+		 }
+	@[ -z "$(findstring IVMS8_128_config,$@)" ] || \
+		 { echo "#define CONFIG_IVMS8_32M"	>>$(obj)include/config.h ; \
+		 }
+	@[ -z "$(findstring IVMS8_256_config,$@)" ] || \
+		 { echo "#define CONFIG_IVMS8_64M"	>>$(obj)include/config.h ; \
+		 }
+	@$(MKCONFIG) -a IVMS8 ppc mpc8xx ivm
+
+kmsupx4_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx km8xx keymile
+
+KUP4K_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx kup4k kup
+
+KUP4X_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx kup4x kup
+
+LANTEC_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx lantec
+
+lwmon_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx lwmon
+
+MBX_config	\
+MBX860T_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx mbx8xx
+
+mgsuvd_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx km8xx keymile
+
+MHPC_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx mhpc eltec
+
+xtract_NETVIA = $(subst _V2,,$(subst _config,,$1))
+
+NETVIA_V2_config \
+NETVIA_config:		unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring NETVIA_config,$@)" ] || \
+		 { echo "#define CONFIG_NETVIA_VERSION 1" >>$(obj)include/config.h ; \
+		  $(XECHO) "... Version 1" ; \
+		 }
+	@[ -z "$(findstring NETVIA_V2_config,$@)" ] || \
+		 { echo "#define CONFIG_NETVIA_VERSION 2" >>$(obj)include/config.h ; \
+		  $(XECHO) "... Version 2" ; \
+		 }
+	@$(MKCONFIG) -a $(call xtract_NETVIA,$@) ppc mpc8xx netvia
+
+xtract_NETPHONE = $(subst _V2,,$(subst _config,,$1))
+
+NETPHONE_V2_config \
+NETPHONE_config:	unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring NETPHONE_config,$@)" ] || \
+		 { echo "#define CONFIG_NETPHONE_VERSION 1" >>$(obj)include/config.h ; \
+		 }
+	@[ -z "$(findstring NETPHONE_V2_config,$@)" ] || \
+		 { echo "#define CONFIG_NETPHONE_VERSION 2" >>$(obj)include/config.h ; \
+		 }
+	@$(MKCONFIG) -a $(call xtract_NETPHONE,$@) ppc mpc8xx netphone
+
+xtract_NETTA = $(subst _SWAPHOOK,,$(subst _6412,,$(subst _ISDN,,$(subst _config,,$1))))
+
+NETTA_ISDN_6412_SWAPHOOK_config \
+NETTA_ISDN_SWAPHOOK_config \
+NETTA_6412_SWAPHOOK_config \
+NETTA_SWAPHOOK_config \
+NETTA_ISDN_6412_config \
+NETTA_ISDN_config \
+NETTA_6412_config \
+NETTA_config:		unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring ISDN_,$@)" ] || \
+		 { echo "#define CONFIG_NETTA_ISDN 1" >>$(obj)include/config.h ; \
+		 }
+	@[ -n "$(findstring ISDN_,$@)" ] || \
+		 { echo "#undef CONFIG_NETTA_ISDN" >>$(obj)include/config.h ; \
+		 }
+	@[ -z "$(findstring 6412_,$@)" ] || \
+		 { echo "#define CONFIG_NETTA_6412 1" >>$(obj)include/config.h ; \
+		 }
+	@[ -n "$(findstring 6412_,$@)" ] || \
+		 { echo "#undef CONFIG_NETTA_6412" >>$(obj)include/config.h ; \
+		 }
+	@[ -z "$(findstring SWAPHOOK_,$@)" ] || \
+		 { echo "#define CONFIG_NETTA_SWAPHOOK 1" >>$(obj)include/config.h ; \
+		 }
+	@[ -n "$(findstring SWAPHOOK_,$@)" ] || \
+		 { echo "#undef CONFIG_NETTA_SWAPHOOK" >>$(obj)include/config.h ; \
+		 }
+	@$(MKCONFIG) -a $(call xtract_NETTA,$@) ppc mpc8xx netta
+
+xtract_NETTA2 = $(subst _V2,,$(subst _config,,$1))
+
+NETTA2_V2_config \
+NETTA2_config:		unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring NETTA2_config,$@)" ] || \
+		 { echo "#define CONFIG_NETTA2_VERSION 1" >>$(obj)include/config.h ; \
+		 }
+	@[ -z "$(findstring NETTA2_V2_config,$@)" ] || \
+		 { echo "#define CONFIG_NETTA2_VERSION 2" >>$(obj)include/config.h ; \
+		 }
+	@$(MKCONFIG) -a $(call xtract_NETTA2,$@) ppc mpc8xx netta2
+
+NC650_Rev1_config \
+NC650_Rev2_config \
+CP850_config:	unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring CP850,$@)" ] || \
+		 { echo "#define CONFIG_CP850 1" >>$(obj)include/config.h ; \
+		   echo "#define CONFIG_IDS852_REV2 1" >>$(obj)include/config.h ; \
+		 }
+	@[ -z "$(findstring Rev1,$@)" ] || \
+		 { echo "#define CONFIG_IDS852_REV1 1" >>$(obj)include/config.h ; \
+		 }
+	@[ -z "$(findstring Rev2,$@)" ] || \
+		 { echo "#define CONFIG_IDS852_REV2 1" >>$(obj)include/config.h ; \
+		 }
+	@$(MKCONFIG) -a NC650 ppc mpc8xx nc650
+
+NX823_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx nx823
+
+pcu_e_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx pcu_e siemens
+
+QS850_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx qs850 snmc
+
+QS823_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx qs850 snmc
+
+QS860T_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx qs860t snmc
+
+quantum_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx quantum
+
+R360MPI_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx r360mpi
+
+RBC823_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx rbc823
+
+RPXClassic_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx RPXClassic
+
+RPXlite_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx RPXlite
+
+RPXlite_DW_64_config		\
+RPXlite_DW_LCD_config		\
+RPXlite_DW_64_LCD_config	\
+RPXlite_DW_NVRAM_config		\
+RPXlite_DW_NVRAM_64_config	\
+RPXlite_DW_NVRAM_LCD_config	\
+RPXlite_DW_NVRAM_64_LCD_config	\
+RPXlite_DW_config:	unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring _64,$@)" ] || \
+		{ echo "#define RPXlite_64MHz"		>>$(obj)include/config.h ; \
+		  $(XECHO) "... with 64MHz system clock ..."; \
+		}
+	@[ -z "$(findstring _LCD,$@)" ] || \
+		{ echo "#define CONFIG_LCD"		>>$(obj)include/config.h ; \
+		  echo "#define CONFIG_NEC_NL6448BC20"	>>$(obj)include/config.h ; \
+		  $(XECHO) "... with LCD display ..."; \
+		}
+	@[ -z "$(findstring _NVRAM,$@)" ] || \
+		{ echo "#define  CONFIG_ENV_IS_IN_NVRAM"	>>$(obj)include/config.h ; \
+		  $(XECHO) "... with ENV in NVRAM ..."; \
+		}
+	@$(MKCONFIG) -a RPXlite_DW ppc mpc8xx RPXlite_dw
+
+rmu_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx rmu
+
+RRvision_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx RRvision
+
+RRvision_LCD_config:	unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_LCD" >$(obj)include/config.h
+	@echo "#define CONFIG_SHARP_LQ104V7DS01" >>$(obj)include/config.h
+	@$(MKCONFIG) -a RRvision ppc mpc8xx RRvision
+
+SM850_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx tqm8xx tqc
+
+spc1920_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx spc1920
+
+SPD823TS_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx spd8xx
+
+stxxtc_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx stxxtc
+
+svm_sc8xx_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx svm_sc8xx
+
+SXNI855T_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx sixnet
+
+# EMK MPC8xx based modules
+TOP860_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx top860 emk
+
+# Play some tricks for configuration selection
+# Only 855 and 860 boards may come with FEC
+# and only 823 boards may have LCD support
+xtract_8xx = $(subst _LCD,,$(subst _config,,$1))
+
+FPS850L_config		\
+FPS860L_config		\
+NSCU_config		\
+TQM823L_config		\
+TQM823L_LCD_config	\
+TQM850L_config		\
+TQM855L_config		\
+TQM860L_config		\
+TQM862L_config		\
+TQM823M_config		\
+TQM850M_config		\
+TQM855M_config		\
+TQM860M_config		\
+TQM862M_config		\
+TQM866M_config		\
+TQM885D_config		\
+TK885D_config		\
+virtlab2_config:	unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring _LCD,$@)" ] || \
+		{ echo "#define CONFIG_LCD"		>>$(obj)include/config.h ; \
+		  echo "#define CONFIG_NEC_NL6448BC20"	>>$(obj)include/config.h ; \
+		  $(XECHO) "... with LCD display" ; \
+		}
+	@$(MKCONFIG) -a $(call xtract_8xx,$@) ppc mpc8xx tqm8xx tqc
+
+TTTech_config:	unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_LCD" >$(obj)include/config.h
+	@echo "#define CONFIG_SHARP_LQ104V7DS01" >>$(obj)include/config.h
+	@$(MKCONFIG) -a TQM823L ppc mpc8xx tqm8xx tqc
+
+uc100_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx uc100
+
+v37_config:	unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_LCD" >$(obj)include/config.h
+	@echo "#define CONFIG_SHARP_LQ084V1DG21" >>$(obj)include/config.h
+	@$(MKCONFIG) $(@:_config=) ppc mpc8xx v37
+
+wtk_config:	unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_LCD" >$(obj)include/config.h
+	@echo "#define CONFIG_SHARP_LQ065T9DR51U" >>$(obj)include/config.h
+	@$(MKCONFIG) -a TQM823L ppc mpc8xx tqm8xx tqc
+
+#########################################################################
+## PPC4xx Systems
+#########################################################################
+xtract_4xx = $(subst _25,,$(subst _33,,$(subst _BA,,$(subst _ME,,$(subst _HI,,$(subst _config,,$1))))))
+
+acadia_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx acadia amcc
+
+acadia_nand_config:	unconfig
+	@mkdir -p $(obj)include $(obj)board/amcc/acadia
+	@mkdir -p $(obj)nand_spl/board/amcc/acadia
+	@echo "#define CONFIG_NAND_U_BOOT" > $(obj)include/config.h
+	@$(MKCONFIG) -n $@ -a acadia ppc ppc4xx acadia amcc
+	@echo "TEXT_BASE = 0x01000000" > $(obj)board/amcc/acadia/config.tmp
+	@echo "CONFIG_NAND_U_BOOT = y" >> $(obj)include/config.mk
+
+ADCIOP_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx adciop esd
+
+alpr_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx alpr prodrive
+
+AP1000_config:unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx ap1000 amirix
+
+APC405_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx apc405 esd
+
+AR405_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx ar405 esd
+
+ASH405_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx ash405 esd
+
+bamboo_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx bamboo amcc
+
+bamboo_nand_config:	unconfig
+	@mkdir -p $(obj)include $(obj)board/amcc/bamboo
+	@mkdir -p $(obj)nand_spl/board/amcc/bamboo
+	@echo "#define CONFIG_NAND_U_BOOT" > $(obj)include/config.h
+	@$(MKCONFIG) -n $@ -a bamboo ppc ppc4xx bamboo amcc
+	@echo "TEXT_BASE = 0x01000000" > $(obj)board/amcc/bamboo/config.tmp
+	@echo "CONFIG_NAND_U_BOOT = y" >> $(obj)include/config.mk
+
+bubinga_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx bubinga amcc
+
+CANBT_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx canbt esd
+
+# Arches, Canyonlands & Glacier use different U-Boot images
+arches_config \
+canyonlands_config \
+glacier_config:	unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_$$(echo $(subst ,,$(@:_config=)) | \
+		tr '[:lower:]' '[:upper:]')" >$(obj)include/config.h
+	@$(MKCONFIG) -n $@ -a canyonlands ppc ppc4xx canyonlands amcc
+
+canyonlands_nand_config \
+glacier_nand_config:	unconfig
+	@mkdir -p $(obj)include $(obj)board/amcc/canyonlands
+	@mkdir -p $(obj)nand_spl/board/amcc/canyonlands
+	@echo "#define CONFIG_NAND_U_BOOT" > $(obj)include/config.h
+	@echo "#define CONFIG_$$(echo $(subst ,,$(@:_nand_config=)) | \
+		tr '[:lower:]' '[:upper:]')" >> $(obj)include/config.h
+	@$(MKCONFIG) -n $@ -a canyonlands ppc ppc4xx canyonlands amcc
+	@echo "TEXT_BASE = 0x01000000" > $(obj)board/amcc/canyonlands/config.tmp
+	@echo "CONFIG_NAND_U_BOOT = y" >> $(obj)include/config.mk
+
+CATcenter_config	\
+CATcenter_25_config	\
+CATcenter_33_config:	unconfig
+	@mkdir -p $(obj)include
+	@ echo "/* CATcenter uses PPChameleon Model ME */"  > $(obj)include/config.h
+	@ echo "#define CONFIG_PPCHAMELEON_MODULE_MODEL 1" >> $(obj)include/config.h
+	@[ -z "$(findstring _25,$@)" ] || \
+		{ echo "#define CONFIG_PPCHAMELEON_CLK_25" >> $(obj)include/config.h ; \
+		  $(XECHO) "SysClk = 25MHz" ; \
+		}
+	@[ -z "$(findstring _33,$@)" ] || \
+		{ echo "#define CONFIG_PPCHAMELEON_CLK_33" >> $(obj)include/config.h ; \
+		  $(XECHO) "SysClk = 33MHz" ; \
+		}
+	@$(MKCONFIG) -a $(call xtract_4xx,$@) ppc ppc4xx PPChameleonEVB dave
+
+CMS700_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx cms700 esd
+
+# Compact-Center & DevCon-Center use different U-Boot images
+compactcenter_config \
+devconcenter_config:	unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_$$(echo $(subst ,,$(@:_config=)) | \
+		tr '[:lower:]' '[:upper:]')" >$(obj)include/config.h
+	@$(MKCONFIG) -n $@ -a compactcenter ppc ppc4xx compactcenter gdsys
+
+CPCI2DP_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx cpci2dp esd
+
+CPCI405_config		\
+CPCI4052_config		\
+CPCI405DT_config	\
+CPCI405AB_config:	unconfig
+	@mkdir -p $(obj)board/esd/cpci405
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx cpci405 esd
+
+CPCIISER4_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx cpciiser4 esd
+
+CRAYL1_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx L1 cray
+
+csb272_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx csb272
+
+csb472_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx csb472
+
+DASA_SIM_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx dasa_sim esd
+
+dlvision_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx dlvision gdsys
+
+DP405_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx dp405 esd
+
+DU405_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx du405 esd
+
+DU440_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx du440 esd
+
+ebony_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx ebony amcc
+
+ERIC_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx eric
+
+EXBITGEN_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx exbitgen
+
+fx12mm_flash_config: unconfig
+	@mkdir -p $(obj)include $(obj)board/xilinx/ppc405-generic
+	@mkdir -p $(obj)include $(obj)board/avnet/fx12mm
+	@echo "LDSCRIPT:=$(SRCTREE)/board/xilinx/ppc405-generic/u-boot-rom.lds"\
+		> $(obj)board/avnet/fx12mm/config.tmp
+	@echo "TEXT_BASE := 0xFFCB0000" \
+		>> $(obj)board/avnet/fx12mm/config.tmp
+	@$(MKCONFIG) fx12mm ppc ppc4xx fx12mm avnet
+
+fx12mm_config: unconfig
+	@mkdir -p $(obj)include $(obj)board/xilinx/ppc405-generic
+	@mkdir -p $(obj)include $(obj)board/avnet/fx12mm
+	@echo "LDSCRIPT:=$(SRCTREE)/board/xilinx/ppc405-generic/u-boot-ram.lds"\
+		> $(obj)board/avnet/fx12mm/config.tmp
+	@echo "TEXT_BASE := 0x03000000" \
+		>> $(obj)board/avnet/fx12mm/config.tmp
+	@$(MKCONFIG) fx12mm ppc ppc4xx fx12mm avnet
+
+G2000_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx g2000
+
+gdppc440etx_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx gdppc440etx gdsys
+
+hcu4_config:	unconfig
+	@mkdir -p $(obj)board/netstal/common
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx hcu4 netstal
+
+hcu5_config:	unconfig
+	@mkdir -p $(obj)board/netstal/common
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx hcu5 netstal
+
+HH405_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx hh405 esd
+
+HUB405_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx hub405 esd
+
+JSE_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx jse
+
+KAREF_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx karef sandburst
+
+katmai_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx katmai amcc
+
+# Kilauea & Haleakala images are identical (recognized via PVR)
+kilauea_config \
+haleakala_config: unconfig
+	@$(MKCONFIG) -n $@ -a kilauea ppc ppc4xx kilauea amcc
+
+kilauea_nand_config \
+haleakala_nand_config: unconfig
+	@mkdir -p $(obj)include $(obj)board/amcc/kilauea
+	@mkdir -p $(obj)nand_spl/board/amcc/kilauea
+	@echo "#define CONFIG_NAND_U_BOOT" > $(obj)include/config.h
+	@$(MKCONFIG) -n $@ -a kilauea ppc ppc4xx kilauea amcc
+	@echo "TEXT_BASE = 0x01000000" > $(obj)board/amcc/kilauea/config.tmp
+	@echo "CONFIG_NAND_U_BOOT = y" >> $(obj)include/config.mk
+
+korat_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx korat
+
+luan_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx luan amcc
+
+lwmon5_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx lwmon5
+
+makalu_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx makalu amcc
+
+mcu25_config:  unconfig
+	@mkdir -p $(obj)board/netstal/common
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx mcu25 netstal
+
+METROBOX_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx metrobox sandburst
+
+MIP405_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx mip405 mpl
+
+MIP405T_config:	unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_MIP405T" >$(obj)include/config.h
+	@$(XECHO) "Enable subset config for MIP405T"
+	@$(MKCONFIG) -a MIP405 ppc ppc4xx mip405 mpl
+
+ML2_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx ml2
+
+ml300_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx ml300 xilinx
+
+ml507_flash_config: unconfig
+	@mkdir -p $(obj)include $(obj)board/xilinx/ppc440-generic
+	@mkdir -p $(obj)include $(obj)board/xilinx/ml507
+	@echo "LDSCRIPT:=$(SRCTREE)/board/xilinx/ppc440-generic/u-boot-rom.lds"\
+		> $(obj)board/xilinx/ml507/config.tmp
+	@echo "TEXT_BASE := 0xFE360000" \
+		>> $(obj)board/xilinx/ml507/config.tmp
+	@$(MKCONFIG) ml507 ppc ppc4xx ml507 xilinx
+
+ml507_config: unconfig
+	@mkdir -p $(obj)include $(obj)board/xilinx/ppc440-generic
+	@mkdir -p $(obj)include $(obj)board/xilinx/ml507
+	@echo "LDSCRIPT:=$(SRCTREE)/board/xilinx/ppc440-generic/u-boot-ram.lds"\
+		> $(obj)board/xilinx/ml507/config.tmp
+	@echo "TEXT_BASE := 0x04000000"  \
+		>> $(obj)board/xilinx/ml507/config.tmp
+	@$(MKCONFIG) ml507 ppc ppc4xx ml507 xilinx
+
+neo_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx neo gdsys
+
+ocotea_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx ocotea amcc
+
+OCRTC_config		\
+ORSG_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx ocrtc esd
+
+p3p440_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx p3p440 prodrive
+
+PCI405_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx pci405 esd
+
+pcs440ep_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx pcs440ep
+
+PIP405_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx pip405 mpl
+
+PLU405_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx plu405 esd
+
+PMC405_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx pmc405 esd
+
+PMC405DE_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx pmc405de esd
+
+PMC440_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx pmc440 esd
+
+PPChameleonEVB_config		\
+PPChameleonEVB_BA_25_config	\
+PPChameleonEVB_ME_25_config	\
+PPChameleonEVB_HI_25_config	\
+PPChameleonEVB_BA_33_config	\
+PPChameleonEVB_ME_33_config	\
+PPChameleonEVB_HI_33_config:	unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring EVB_BA,$@)" ] || \
+		{ echo "#define CONFIG_PPCHAMELEON_MODULE_MODEL 0" >>$(obj)include/config.h ; \
+		  $(XECHO) "... BASIC model" ; \
+		}
+	@[ -z "$(findstring EVB_ME,$@)" ] || \
+		{ echo "#define CONFIG_PPCHAMELEON_MODULE_MODEL 1" >>$(obj)include/config.h ; \
+		  $(XECHO) "... MEDIUM model" ; \
+		}
+	@[ -z "$(findstring EVB_HI,$@)" ] || \
+		{ echo "#define CONFIG_PPCHAMELEON_MODULE_MODEL 2" >>$(obj)include/config.h ; \
+		  $(XECHO) "... HIGH-END model" ; \
+		}
+	@[ -z "$(findstring _25,$@)" ] || \
+		{ echo "#define CONFIG_PPCHAMELEON_CLK_25" >>$(obj)include/config.h ; \
+		  $(XECHO) "SysClk = 25MHz" ; \
+		}
+	@[ -z "$(findstring _33,$@)" ] || \
+		{ echo "#define CONFIG_PPCHAMELEON_CLK_33" >>$(obj)include/config.h ; \
+		  $(XECHO) "SysClk = 33MHz" ; \
+		}
+	@$(MKCONFIG) -a $(call xtract_4xx,$@) ppc ppc4xx PPChameleonEVB dave
+
+quad100hd_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx quad100hd
+
+redwood_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx redwood amcc
+
+sbc405_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx sbc405
+
+sc3_config:unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx sc3
+
+sequoia_config \
+rainier_config: unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_$$(echo $(subst ,,$(@:_config=)) | \
+		tr '[:lower:]' '[:upper:]')" >$(obj)include/config.h
+	@$(MKCONFIG) -n $@ -a sequoia ppc ppc4xx sequoia amcc
+
+sequoia_nand_config \
+rainier_nand_config: unconfig
+	@mkdir -p $(obj)include $(obj)board/amcc/sequoia
+	@mkdir -p $(obj)nand_spl/board/amcc/sequoia
+	@echo "#define CONFIG_NAND_U_BOOT" > $(obj)include/config.h
+	@echo "#define CONFIG_$$(echo $(subst ,,$(@:_config=)) | \
+		tr '[:lower:]' '[:upper:]')" >> $(obj)include/config.h
+	@$(MKCONFIG) -n $@ -a sequoia ppc ppc4xx sequoia amcc
+	@echo "TEXT_BASE = 0x01000000" > $(obj)board/amcc/sequoia/config.tmp
+	@echo "CONFIG_NAND_U_BOOT = y" >> $(obj)include/config.mk
+
+sequoia_ramboot_config \
+rainier_ramboot_config: unconfig
+	@mkdir -p $(obj)include $(obj)board/amcc/sequoia
+	@echo "#define CONFIG_SYS_RAMBOOT" > $(obj)include/config.h
+	@echo "#define CONFIG_$$(echo $(subst ,,$(@:_config=)) | \
+		tr '[:lower:]' '[:upper:]')" >> $(obj)include/config.h
+	@$(MKCONFIG) -n $@ -a sequoia ppc ppc4xx sequoia amcc
+	@echo "TEXT_BASE = 0x01000000" > $(obj)board/amcc/sequoia/config.tmp
+	@echo "LDSCRIPT = board/amcc/sequoia/u-boot-ram.lds" >> \
+		$(obj)board/amcc/sequoia/config.tmp
+
+taihu_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx taihu amcc
+
+taishan_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx taishan amcc
+
+v5fx30teval_config: unconfig
+	@mkdir -p $(obj)include $(obj)board/xilinx/ppc440-generic
+	@mkdir -p $(obj)include $(obj)board/avnet/v5fx30teval
+	@echo "LDSCRIPT:=$(SRCTREE)/board/xilinx/ppc440-generic/u-boot-ram.lds"\
+		> $(obj)board/avnet/v5fx30teval/config.tmp
+	@echo "TEXT_BASE := 0x03000000" \
+		>> $(obj)board/avnet/v5fx30teval/config.tmp
+	@$(MKCONFIG) v5fx30teval ppc ppc4xx v5fx30teval avnet
+
+v5fx30teval_flash_config: unconfig
+	@mkdir -p $(obj)include $(obj)board/xilinx/ppc440-generic
+	@mkdir -p $(obj)include $(obj)board/avnet/v5fx30teval
+	@echo "LDSCRIPT:=$(SRCTREE)/board/xilinx/ppc440-generic/u-boot-rom.lds"\
+		> $(obj)board/avnet/v5fx30teval/config.tmp
+	@echo "TEXT_BASE := 0xFF1C0000" \
+		>> $(obj)board/avnet/v5fx30teval/config.tmp
+	@$(MKCONFIG) v5fx30teval ppc ppc4xx v5fx30teval avnet
+
+VOH405_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx voh405 esd
+
+VOM405_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx vom405 esd
+
+W7OLMC_config	\
+W7OLMG_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx w7o
+
+# Walnut & Sycamore images are identical (recognized via PVR)
+walnut_config \
+sycamore_config: unconfig
+	@$(MKCONFIG) -n $@ -a walnut ppc ppc4xx walnut amcc
+
+WUH405_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx wuh405 esd
+
+xilinx-ppc405-generic_flash_config: unconfig
+	@mkdir -p $(obj)include $(obj)board/xilinx/ppc405-generic
+	@echo "LDSCRIPT:=$(SRCTREE)/board/xilinx/ppc405-generic/u-boot-rom.lds"\
+		> $(obj)board/xilinx/ppc405-generic/config.tmp
+	@echo "TEXT_BASE := 0xFE360000" \
+		>> $(obj)board/xilinx/ppc405-generic/config.tmp
+	@$(MKCONFIG) xilinx-ppc405-generic ppc ppc4xx ppc405-generic xilinx
+
+xilinx-ppc405-generic_config: unconfig
+	@mkdir -p $(obj)include $(obj)board/xilinx/ppc405-generic
+	@echo "LDSCRIPT:=$(SRCTREE)/board/xilinx/ppc405-generic/u-boot-ram.lds"\
+		> $(obj)board/xilinx/ppc405-generic/config.tmp
+	@echo "TEXT_BASE := 0x04000000" \
+		>> $(obj)board/xilinx/ppc405-generic/config.tmp
+	@$(MKCONFIG) xilinx-ppc405-generic ppc ppc4xx ppc405-generic xilinx
+
+xilinx-ppc440-generic_flash_config: unconfig
+	@mkdir -p $(obj)include $(obj)board/xilinx/ppc440-generic
+	@echo "LDSCRIPT:=$(SRCTREE)/board/xilinx/ppc440-generic/u-boot-rom.lds"\
+		> $(obj)board/xilinx/ppc440-generic/config.tmp
+	@echo "TEXT_BASE := 0xFE360000" \
+		>> $(obj)board/xilinx/ppc440-generic/config.tmp
+	@$(MKCONFIG) xilinx-ppc440-generic ppc ppc4xx ppc440-generic xilinx
+
+xilinx-ppc440-generic_config: unconfig
+	@mkdir -p $(obj)include $(obj)board/xilinx/ppc440-generic
+	@echo "LDSCRIPT:=$(SRCTREE)/board/xilinx/ppc440-generic/u-boot-ram.lds"\
+		> $(obj)board/xilinx/ppc440-generic/config.tmp
+	@echo "TEXT_BASE := 0x04000000" \
+		>> $(obj)board/xilinx/ppc440-generic/config.tmp
+	@$(MKCONFIG) xilinx-ppc440-generic ppc ppc4xx ppc440-generic xilinx
+
+XPEDITE1000_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx xpedite1000 xes
+
+yosemite_config \
+yellowstone_config: unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_$$(echo $(subst ,,$(@:_config=)) | \
+		tr '[:lower:]' '[:upper:]')" >$(obj)include/config.h
+	@$(MKCONFIG) -n $@ -a yosemite ppc ppc4xx yosemite amcc
+
+yucca_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx yucca amcc
+
+zeus_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc ppc4xx zeus
+
+#########################################################################
+## MPC8220 Systems
+#########################################################################
+
+Alaska8220_config	\
+Yukon8220_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8220 alaska
+
+sorcery_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8220 sorcery
+
+#########################################################################
+## MPC824x Systems
+#########################################################################
+xtract_82xx = $(subst _BIGFLASH,,$(subst _ROMBOOT,,$(subst _L2,,$(subst _266MHz,,$(subst _300MHz,,$(subst _config,,$1))))))
+
+A3000_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x a3000
+
+barco_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x barco
+
+BMW_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x bmw
+
+CPC45_config	\
+CPC45_ROMBOOT_config:	unconfig
+	@$(MKCONFIG) $(call xtract_82xx,$@) ppc mpc824x cpc45
+	@cd $(obj)include ;				\
+	if [ "$(findstring _ROMBOOT_,$@)" ] ; then \
+		echo "CONFIG_BOOT_ROM = y" >> config.mk ; \
+		$(XECHO) "... booting from 8-bit flash" ; \
+	else \
+		echo "CONFIG_BOOT_ROM = n" >> config.mk ; \
+		$(XECHO) "... booting from 64-bit flash" ; \
+	fi; \
+	echo "export CONFIG_BOOT_ROM" >> config.mk;
+
+CU824_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x cu824
+
+debris_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x debris etin
+
+eXalion_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x eXalion
+
+HIDDEN_DRAGON_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x hidden_dragon
+
+kvme080_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x kvme080 etin
+
+# HDLAN is broken ATM. Should be fixed as soon as hardware is available and as
+# time permits.
+#linkstation_HDLAN_config \
+# Remove this line when HDLAN is fixed
+linkstation_HGLAN_config: unconfig
+	@mkdir -p $(obj)include
+	@case $@ in \
+		*HGLAN*) echo "#define CONFIG_HGLAN 1" >$(obj)include/config.h; ;; \
+		*HDLAN*) echo "#define CONFIG_HLAN 1" >$(obj)include/config.h; ;; \
+	esac
+	@$(MKCONFIG) -n $@ -a linkstation ppc mpc824x linkstation
+
+MOUSSE_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x mousse
+
+MUSENKI_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x musenki
+
+MVBLUE_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x mvblue
+
+OXC_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x oxc
+
+PN62_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x pn62
+
+Sandpoint8240_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x sandpoint
+
+Sandpoint8245_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x sandpoint
+
+sbc8240_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x sbc8240
+
+SL8245_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x sl8245
+
+utx8245_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc824x utx8245
+
+#########################################################################
+## MPC8260 Systems
+#########################################################################
+
+atc_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8260 atc
+
+cogent_mpc8260_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8260 cogent
+
+CPU86_config	\
+CPU86_ROMBOOT_config: unconfig
+	@$(MKCONFIG) $(call xtract_82xx,$@) ppc mpc8260 cpu86
+	@cd $(obj)include ;				\
+	if [ "$(findstring _ROMBOOT_,$@)" ] ; then \
+		echo "CONFIG_BOOT_ROM = y" >> config.mk ; \
+		$(XECHO) "... booting from 8-bit flash" ; \
+	else \
+		echo "CONFIG_BOOT_ROM = n" >> config.mk ; \
+		$(XECHO) "... booting from 64-bit flash" ; \
+	fi; \
+	echo "export CONFIG_BOOT_ROM" >> config.mk;
+
+CPU87_config	\
+CPU87_ROMBOOT_config: unconfig
+	@$(MKCONFIG) $(call xtract_82xx,$@) ppc mpc8260 cpu87
+	@cd $(obj)include ;				\
+	if [ "$(findstring _ROMBOOT_,$@)" ] ; then \
+		echo "CONFIG_BOOT_ROM = y" >> config.mk ; \
+		$(XECHO) "... booting from 8-bit flash" ; \
+	else \
+		echo "CONFIG_BOOT_ROM = n" >> config.mk ; \
+		$(XECHO) "... booting from 64-bit flash" ; \
+	fi; \
+	echo "export CONFIG_BOOT_ROM" >> config.mk;
+
+ep8248_config	\
+ep8248E_config	:	unconfig
+	@$(MKCONFIG) ep8248 ppc mpc8260 ep8248
+
+ep8260_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8260 ep8260
+
+ep82xxm_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8260 ep82xxm
+
+gw8260_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8260 gw8260
+
+hymod_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8260 hymod
+
+IDS8247_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8260 ids8247
+
+IPHASE4539_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8260 iphase4539
+
+ISPAN_config		\
+ISPAN_REVB_config:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _REVB_,$@)" ] ; then \
+		echo "#define CONFIG_SYS_REV_B" > $(obj)include/config.h ; \
+	fi
+	@$(MKCONFIG) -a ISPAN ppc mpc8260 ispan
+
+mgcoge_config	:	unconfig
+	@$(MKCONFIG) mgcoge ppc mpc8260 mgcoge keymile
+
+MPC8260ADS_config	\
+MPC8260ADS_lowboot_config	\
+MPC8260ADS_33MHz_config	\
+MPC8260ADS_33MHz_lowboot_config	\
+MPC8260ADS_40MHz_config	\
+MPC8260ADS_40MHz_lowboot_config	\
+MPC8272ADS_config	\
+MPC8272ADS_lowboot_config	\
+PQ2FADS_config		\
+PQ2FADS_lowboot_config		\
+PQ2FADS-VR_config	\
+PQ2FADS-VR_lowboot_config	\
+PQ2FADS-ZU_config	\
+PQ2FADS-ZU_lowboot_config	\
+PQ2FADS-ZU_66MHz_config	\
+PQ2FADS-ZU_66MHz_lowboot_config	\
+	:		unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/freescale/mpc8260ads
+	$(if $(findstring PQ2FADS,$@), \
+	@echo "#define CONFIG_ADSTYPE CONFIG_SYS_PQ2FADS" > $(obj)include/config.h, \
+	@echo "#define CONFIG_ADSTYPE CONFIG_SYS_"$(subst MPC,,$(word 1,$(subst _, ,$@))) > $(obj)include/config.h)
+	$(if $(findstring MHz,$@), \
+	@echo "#define CONFIG_8260_CLKIN" $(subst MHz,,$(word 2,$(subst _, ,$@)))"000000" >> $(obj)include/config.h, \
+	$(if $(findstring VR,$@), \
+	@echo "#define CONFIG_8260_CLKIN 66000000" >> $(obj)include/config.h))
+	@[ -z "$(findstring lowboot_,$@)" ] || \
+		{ echo "TEXT_BASE = 0xFF800000" >$(obj)board/freescale/mpc8260ads/config.tmp ; \
+		  $(XECHO) "... with lowboot configuration" ; \
+		}
+	@$(MKCONFIG) -a MPC8260ADS ppc mpc8260 mpc8260ads freescale
+
+MPC8266ADS_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8260 mpc8266ads freescale
+
+muas3001_dev_config \
+muas3001_config	:	unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/muas3001
+	@if [ "$(findstring dev,$@)" ] ; then \
+		echo "#define CONFIG_MUAS_DEV_BOARD" > $(obj)include/config.h ; \
+	fi
+	@$(MKCONFIG) -a muas3001 ppc mpc8260 muas3001
+
+# PM825/PM826 default configuration:  small (= 8 MB) Flash / boot from 64-bit flash
+PM825_config	\
+PM825_ROMBOOT_config	\
+PM825_BIGFLASH_config	\
+PM825_ROMBOOT_BIGFLASH_config	\
+PM826_config	\
+PM826_ROMBOOT_config	\
+PM826_BIGFLASH_config	\
+PM826_ROMBOOT_BIGFLASH_config:	unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/pm826
+	@if [ "$(findstring PM825_,$@)" ] ; then \
+		echo "#define CONFIG_PCI"	>$(obj)include/config.h ; \
+	else \
+		>$(obj)include/config.h ; \
+	fi
+	@if [ "$(findstring _ROMBOOT_,$@)" ] ; then \
+		$(XECHO) "... booting from 8-bit flash" ; \
+		echo "#define CONFIG_BOOT_ROM" >>$(obj)include/config.h ; \
+		echo "TEXT_BASE = 0xFF800000" >$(obj)board/pm826/config.tmp ; \
+		if [ "$(findstring _BIGFLASH_,$@)" ] ; then \
+			$(XECHO) "... with 32 MB Flash" ; \
+			echo "#define CONFIG_FLASH_32MB" >>$(obj)include/config.h ; \
+		fi; \
+	else \
+		$(XECHO) "... booting from 64-bit flash" ; \
+		if [ "$(findstring _BIGFLASH_,$@)" ] ; then \
+			$(XECHO) "... with 32 MB Flash" ; \
+			echo "#define CONFIG_FLASH_32MB" >>$(obj)include/config.h ; \
+			echo "TEXT_BASE = 0x40000000" >$(obj)board/pm826/config.tmp ; \
+		else \
+			echo "TEXT_BASE = 0xFF000000" >$(obj)board/pm826/config.tmp ; \
+		fi; \
+	fi
+	@$(MKCONFIG) -a PM826 ppc mpc8260 pm826
+
+PM828_config	\
+PM828_PCI_config	\
+PM828_ROMBOOT_config	\
+PM828_ROMBOOT_PCI_config:	unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/pm826
+	@if [ "$(findstring _PCI_,$@)" ] ; then \
+		echo "#define CONFIG_PCI"  >>$(obj)include/config.h ; \
+		$(XECHO) "... with PCI enabled" ; \
+	fi
+	@if [ "$(findstring _ROMBOOT_,$@)" ] ; then \
+		$(XECHO) "... booting from 8-bit flash" ; \
+		echo "#define CONFIG_BOOT_ROM" >>$(obj)include/config.h ; \
+		echo "TEXT_BASE = 0xFF800000" >$(obj)board/pm826/config.tmp ; \
+	fi
+	@$(MKCONFIG) -a PM828 ppc mpc8260 pm828
+
+ppmc8260_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8260 ppmc8260
+
+Rattler8248_config	\
+Rattler_config:		unconfig
+	@mkdir -p $(obj)include
+	$(if $(findstring 8248,$@), \
+	@echo "#define CONFIG_MPC8248" > $(obj)include/config.h)
+	@$(MKCONFIG) -a Rattler ppc mpc8260 rattler
+
+RPXsuper_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8260 rpxsuper
+
+rsdproto_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8260 rsdproto
+
+sacsng_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8260 sacsng
+
+sbc8260_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8260 sbc8260
+
+SCM_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8260 SCM siemens
+
+TQM8255_AA_config \
+TQM8260_AA_config \
+TQM8260_AB_config \
+TQM8260_AC_config \
+TQM8260_AD_config \
+TQM8260_AE_config \
+TQM8260_AF_config \
+TQM8260_AG_config \
+TQM8260_AH_config \
+TQM8260_AI_config \
+TQM8265_AA_config:  unconfig
+	@mkdir -p $(obj)include
+	@case "$@" in \
+	TQM8255_AA_config) CTYPE=MPC8255; CFREQ=300; CACHE=no;	BMODE=8260;;  \
+	TQM8260_AA_config) CTYPE=MPC8260; CFREQ=200; CACHE=no;	BMODE=8260;; \
+	TQM8260_AB_config) CTYPE=MPC8260; CFREQ=200; CACHE=yes;	BMODE=60x;;  \
+	TQM8260_AC_config) CTYPE=MPC8260; CFREQ=200; CACHE=yes;	BMODE=60x;;  \
+	TQM8260_AD_config) CTYPE=MPC8260; CFREQ=300; CACHE=no;	BMODE=60x;;  \
+	TQM8260_AE_config) CTYPE=MPC8260; CFREQ=266; CACHE=no;	BMODE=8260;; \
+	TQM8260_AF_config) CTYPE=MPC8260; CFREQ=300; CACHE=no;	BMODE=60x;;  \
+	TQM8260_AG_config) CTYPE=MPC8260; CFREQ=300; CACHE=no;	BMODE=8260;; \
+	TQM8260_AH_config) CTYPE=MPC8260; CFREQ=300; CACHE=yes;	BMODE=60x;;  \
+	TQM8260_AI_config) CTYPE=MPC8260; CFREQ=300; CACHE=no;	BMODE=60x;;  \
+	TQM8265_AA_config) CTYPE=MPC8265; CFREQ=300; CACHE=no;	BMODE=60x;;  \
+	esac; \
+	if [ "$${CTYPE}" != "MPC8260" ] ; then \
+		echo "#define CONFIG_$${CTYPE}"	>>$(obj)include/config.h ; \
+	fi; \
+	echo "#define CONFIG_$${CFREQ}MHz"	>>$(obj)include/config.h ; \
+	echo "... with $${CFREQ}MHz system clock" ; \
+	if [ "$${CACHE}" = "yes" ] ; then \
+		echo "#define CONFIG_L2_CACHE"	>>$(obj)include/config.h ; \
+		$(XECHO) "... with L2 Cache support" ; \
+	else \
+		echo "#undef CONFIG_L2_CACHE"	>>$(obj)include/config.h ; \
+		$(XECHO) "... without L2 Cache support" ; \
+	fi; \
+	if [ "$${BMODE}" = "60x" ] ; then \
+		echo "#define CONFIG_BUSMODE_60x" >>$(obj)include/config.h ; \
+		$(XECHO) "... with 60x Bus Mode" ; \
+	else \
+		echo "#undef CONFIG_BUSMODE_60x"  >>$(obj)include/config.h ; \
+		$(XECHO) "... without 60x Bus Mode" ; \
+	fi
+	@$(MKCONFIG) -a TQM8260 ppc mpc8260 tqm8260 tqc
+
+TQM8272_config: unconfig
+	@$(MKCONFIG) TQM8272 ppc mpc8260 tqm8272 tqc
+
+VoVPN-GW_66MHz_config	\
+VoVPN-GW_100MHz_config:		unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_CLKIN_$(word 2,$(subst _, ,$@))" > $(obj)include/config.h
+	@$(MKCONFIG) -a VoVPN-GW ppc mpc8260 vovpn-gw funkwerk
+
+ZPC1900_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc8260 zpc1900
+
+#########################################################################
+## Coldfire
+#########################################################################
+
+M5208EVBE_config :		unconfig
+	@$(MKCONFIG) $(@:_config=) m68k mcf52x2 m5208evbe freescale
+
+M52277EVB_config \
+M52277EVB_spansion_config \
+M52277EVB_stmicro_config :	unconfig
+	@case "$@" in \
+	M52277EVB_config)		FLASH=SPANSION;; \
+	M52277EVB_spansion_config)	FLASH=SPANSION;; \
+	M52277EVB_stmicro_config)	FLASH=STMICRO;; \
+	esac; \
+	if [ "$${FLASH}" = "SPANSION" ] ; then \
+		echo "#define CONFIG_SYS_SPANSION_BOOT"	>> $(obj)include/config.h ; \
+		echo "TEXT_BASE = 0x00000000" > $(obj)board/freescale/m52277evb/config.tmp ; \
+		cp $(obj)board/freescale/m52277evb/u-boot.spa $(obj)board/freescale/m52277evb/u-boot.lds ; \
+		$(XECHO) "... with SPANSION boot..." ; \
+	fi; \
+	if [ "$${FLASH}" = "STMICRO" ] ; then \
+		echo "#define CONFIG_CF_SBF"	>> $(obj)include/config.h ; \
+		echo "#define CONFIG_SYS_STMICRO_BOOT"	>> $(obj)include/config.h ; \
+		echo "TEXT_BASE = 0x43E00000" > $(obj)board/freescale/m52277evb/config.tmp ; \
+		cp $(obj)board/freescale/m52277evb/u-boot.stm $(obj)board/freescale/m52277evb/u-boot.lds ; \
+		$(XECHO) "... with ST Micro boot..." ; \
+	fi
+	@$(MKCONFIG) -a M52277EVB m68k mcf5227x m52277evb freescale
+
+M5235EVB_config \
+M5235EVB_Flash16_config \
+M5235EVB_Flash32_config:	unconfig
+	@case "$@" in \
+	M5235EVB_config)		FLASH=16;; \
+	M5235EVB_Flash16_config)	FLASH=16;; \
+	M5235EVB_Flash32_config)	FLASH=32;; \
+	esac; \
+	if [ "$${FLASH}" != "16" ] ; then \
+		echo "#define NORFLASH_PS32BIT	1" >> $(obj)include/config.h ; \
+		echo "TEXT_BASE = 0xFFC00000" > $(obj)board/freescale/m5235evb/config.tmp ; \
+		cp $(obj)board/freescale/m5235evb/u-boot.32 $(obj)board/freescale/m5235evb/u-boot.lds ; \
+	else \
+		echo "TEXT_BASE = 0xFFE00000" > $(obj)board/freescale/m5235evb/config.tmp ; \
+		cp $(obj)board/freescale/m5235evb/u-boot.16 $(obj)board/freescale/m5235evb/u-boot.lds ; \
+	fi
+	@$(MKCONFIG) -a M5235EVB m68k mcf523x m5235evb freescale
+
+M5249EVB_config :		unconfig
+	@$(MKCONFIG) $(@:_config=) m68k mcf52x2 m5249evb freescale
+
+M5253DEMO_config :		unconfig
+	@$(MKCONFIG) $(@:_config=) m68k mcf52x2 m5253demo freescale
+
+M5253EVBE_config :		unconfig
+	@$(MKCONFIG) $(@:_config=) m68k mcf52x2 m5253evbe freescale
+
+cobra5272_config :		unconfig
+	@$(MKCONFIG) $(@:_config=) m68k mcf52x2 cobra5272
+
+EB+MCF-EV123_config :		unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/BuS/EB+MCF-EV123
+	@echo "TEXT_BASE = 0xFFE00000"|tee $(obj)board/BuS/EB+MCF-EV123/textbase.mk
+	@$(MKCONFIG) EB+MCF-EV123 m68k mcf52x2 EB+MCF-EV123 BuS
+
+EB+MCF-EV123_internal_config :	unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/BuS/EB+MCF-EV123
+	@echo "TEXT_BASE = 0xF0000000"|tee $(obj)board/BuS/EB+MCF-EV123/textbase.mk
+	@$(MKCONFIG) EB+MCF-EV123 m68k mcf52x2 EB+MCF-EV123 BuS
+
+idmr_config :			unconfig
+	@$(MKCONFIG) $(@:_config=) m68k mcf52x2 idmr
+
+M5271EVB_config :		unconfig
+	@$(MKCONFIG) $(@:_config=) m68k mcf52x2 m5271evb freescale
+
+M5272C3_config :		unconfig
+	@$(MKCONFIG) $(@:_config=) m68k mcf52x2 m5272c3 freescale
+
+M5275EVB_config :		unconfig
+	@$(MKCONFIG) $(@:_config=) m68k mcf52x2 m5275evb freescale
+
+M5282EVB_config :		unconfig
+	@$(MKCONFIG) $(@:_config=) m68k mcf52x2 m5282evb freescale
+
+M53017EVB_config :		unconfig
+	@$(MKCONFIG) $(@:_config=) m68k mcf532x m53017evb freescale
+
+M5329AFEE_config \
+M5329BFEE_config :	unconfig
+	@case "$@" in \
+	M5329AFEE_config)	NAND=0;; \
+	M5329BFEE_config)	NAND=16;; \
+	esac; \
+	if [ "$${NAND}" != "0" ] ; then \
+		echo "#define NANDFLASH_SIZE	$${NAND}" > $(obj)include/config.h ; \
+	fi
+	@$(MKCONFIG) -a M5329EVB m68k mcf532x m5329evb freescale
+
+M5373EVB_config :	unconfig
+	@case "$@" in \
+	M5373EVB_config)	NAND=16;; \
+	esac; \
+	if [ "$${NAND}" != "0" ] ; then \
+		echo "#define NANDFLASH_SIZE	$${NAND}" > $(obj)include/config.h ; \
+	fi
+	@$(MKCONFIG) -a M5373EVB m68k mcf532x m5373evb freescale
+
+M54451EVB_config \
+M54451EVB_stmicro_config :	unconfig
+	@case "$@" in \
+	M54451EVB_config)		FLASH=NOR;; \
+	M54451EVB_stmicro_config)	FLASH=STMICRO;; \
+	esac; \
+	if [ "$${FLASH}" = "NOR" ] ; then \
+		echo "TEXT_BASE = 0x00000000" > $(obj)board/freescale/m54451evb/config.tmp ; \
+		cp $(obj)board/freescale/m54451evb/u-boot.spa $(obj)board/freescale/m54451evb/u-boot.lds ; \
+		$(XECHO) "... with NOR boot..." ; \
+	fi; \
+	if [ "$${FLASH}" = "STMICRO" ] ; then \
+		echo "#define CONFIG_CF_SBF"	>> $(obj)include/config.h ; \
+		echo "#define CONFIG_SYS_STMICRO_BOOT"	>> $(obj)include/config.h ; \
+		echo "TEXT_BASE = 0x47E00000" > $(obj)board/freescale/m54451evb/config.tmp ; \
+		cp $(obj)board/freescale/m54451evb/u-boot.stm $(obj)board/freescale/m54451evb/u-boot.lds ; \
+		$(XECHO) "... with ST Micro boot..." ; \
+	fi; \
+	echo "#define CONFIG_SYS_INPUT_CLKSRC 24000000" >> $(obj)include/config.h ;
+	@$(MKCONFIG) -a M54451EVB m68k mcf5445x m54451evb freescale
+
+M54455EVB_config \
+M54455EVB_atmel_config \
+M54455EVB_intel_config \
+M54455EVB_a33_config \
+M54455EVB_a66_config \
+M54455EVB_i33_config \
+M54455EVB_i66_config \
+M54455EVB_stm33_config :	unconfig
+	@case "$@" in \
+	M54455EVB_config)		FLASH=ATMEL; FREQ=33333333;; \
+	M54455EVB_atmel_config)		FLASH=ATMEL; FREQ=33333333;; \
+	M54455EVB_intel_config)		FLASH=INTEL; FREQ=33333333;; \
+	M54455EVB_a33_config)		FLASH=ATMEL; FREQ=33333333;; \
+	M54455EVB_a66_config)		FLASH=ATMEL; FREQ=66666666;; \
+	M54455EVB_i33_config)		FLASH=INTEL; FREQ=33333333;; \
+	M54455EVB_i66_config)		FLASH=INTEL; FREQ=66666666;; \
+	M54455EVB_stm33_config)		FLASH=STMICRO; FREQ=33333333;; \
+	esac; \
+	if [ "$${FLASH}" = "INTEL" ] ; then \
+		echo "#define CONFIG_SYS_INTEL_BOOT" >> $(obj)include/config.h ; \
+		echo "TEXT_BASE = 0x00000000" > $(obj)board/freescale/m54455evb/config.tmp ; \
+		cp $(obj)board/freescale/m54455evb/u-boot.int $(obj)board/freescale/m54455evb/u-boot.lds ; \
+		$(XECHO) "... with INTEL boot..." ; \
+	fi; \
+	if [ "$${FLASH}" = "ATMEL" ] ; then \
+		echo "#define CONFIG_SYS_ATMEL_BOOT"	>> $(obj)include/config.h ; \
+		echo "TEXT_BASE = 0x04000000" > $(obj)board/freescale/m54455evb/config.tmp ; \
+		cp $(obj)board/freescale/m54455evb/u-boot.atm $(obj)board/freescale/m54455evb/u-boot.lds ; \
+		$(XECHO) "... with ATMEL boot..." ; \
+	fi; \
+	if [ "$${FLASH}" = "STMICRO" ] ; then \
+		echo "#define CONFIG_CF_SBF"	>> $(obj)include/config.h ; \
+		echo "#define CONFIG_SYS_STMICRO_BOOT"	>> $(obj)include/config.h ; \
+		echo "TEXT_BASE = 0x4FE00000" > $(obj)board/freescale/m54455evb/config.tmp ; \
+		cp $(obj)board/freescale/m54455evb/u-boot.stm $(obj)board/freescale/m54455evb/u-boot.lds ; \
+		$(XECHO) "... with ST Micro boot..." ; \
+	fi; \
+	echo "#define CONFIG_SYS_INPUT_CLKSRC $${FREQ}" >> $(obj)include/config.h ; \
+	$(XECHO) "... with $${FREQ}Hz input clock"
+	@$(MKCONFIG) -a M54455EVB m68k mcf5445x m54455evb freescale
+
+M5475AFE_config \
+M5475BFE_config \
+M5475CFE_config \
+M5475DFE_config \
+M5475EFE_config \
+M5475FFE_config \
+M5475GFE_config :	unconfig
+	@case "$@" in \
+	M5475AFE_config)	BOOT=2;CODE=0;VID=0;USB=0;RAM=64;RAM1=0;; \
+	M5475BFE_config)	BOOT=2;CODE=16;VID=0;USB=0;RAM=64;RAM1=0;; \
+	M5475CFE_config)	BOOT=2;CODE=16;VID=1;USB=1;RAM=64;RAM1=0;; \
+	M5475DFE_config)	BOOT=2;CODE=0;VID=0;USB=1;RAM=64;RAM1=0;; \
+	M5475EFE_config)	BOOT=2;CODE=0;VID=1;USB=1;RAM=64;RAM1=0;; \
+	M5475FFE_config)	BOOT=2;CODE=32;VID=1;USB=1;RAM=64;RAM1=64;; \
+	M5475GFE_config)	BOOT=4;CODE=0;VID=0;USB=0;RAM=64;RAM1=0;; \
+	esac; \
+	echo "#define CONFIG_SYS_BUSCLK	133333333" > $(obj)include/config.h ; \
+	echo "#define CONFIG_SYS_BOOTSZ	$${BOOT}" >> $(obj)include/config.h ; \
+	echo "#define CONFIG_SYS_DRAMSZ	$${RAM}" >> $(obj)include/config.h ; \
+	if [ "$${RAM1}" != "0" ] ; then \
+		echo "#define CONFIG_SYS_DRAMSZ1	$${RAM1}" >> $(obj)include/config.h ; \
+	fi; \
+	if [ "$${CODE}" != "0" ] ; then \
+		echo "#define CONFIG_SYS_NOR1SZ	$${CODE}" >> $(obj)include/config.h ; \
+	fi; \
+	if [ "$${VID}" == "1" ] ; then \
+		echo "#define CONFIG_SYS_VIDEO" >> $(obj)include/config.h ; \
+	fi; \
+	if [ "$${USB}" == "1" ] ; then \
+		echo "#define CONFIG_SYS_USBCTRL" >> $(obj)include/config.h ; \
+	fi
+	@$(MKCONFIG) -a M5475EVB m68k mcf547x_8x m547xevb freescale
+
+M5485AFE_config \
+M5485BFE_config \
+M5485CFE_config \
+M5485DFE_config \
+M5485EFE_config \
+M5485FFE_config \
+M5485GFE_config \
+M5485HFE_config :	unconfig
+	@case "$@" in \
+	M5485AFE_config)	BOOT=2;CODE=0;VID=0;USB=0;RAM=64;RAM1=0;; \
+	M5485BFE_config)	BOOT=2;CODE=16;VID=0;USB=0;RAM=64;RAM1=0;; \
+	M5485CFE_config)	BOOT=2;CODE=16;VID=1;USB=1;RAM=64;RAM1=0;; \
+	M5485DFE_config)	BOOT=2;CODE=0;VID=0;USB=1;RAM=64;RAM1=0;; \
+	M5485EFE_config)	BOOT=2;CODE=0;VID=1;USB=1;RAM=64;RAM1=0;; \
+	M5485FFE_config)	BOOT=2;CODE=32;VID=1;USB=1;RAM=64;RAM1=64;; \
+	M5485GFE_config)	BOOT=4;CODE=0;VID=0;USB=0;RAM=64;RAM1=0;; \
+	M5485HFE_config)	BOOT=2;CODE=16;VID=1;USB=0;RAM=64;RAM1=0;; \
+	esac; \
+	echo "#define CONFIG_SYS_BUSCLK	100000000" > $(obj)include/config.h ; \
+	echo "#define CONFIG_SYS_BOOTSZ	$${BOOT}" >> $(obj)include/config.h ; \
+	echo "#define CONFIG_SYS_DRAMSZ	$${RAM}" >> $(obj)include/config.h ; \
+	if [ "$${RAM1}" != "0" ] ; then \
+		echo "#define CONFIG_SYS_DRAMSZ1	$${RAM1}" >> $(obj)include/config.h ; \
+	fi; \
+	if [ "$${CODE}" != "0" ] ; then \
+		echo "#define CONFIG_SYS_NOR1SZ	$${CODE}" >> $(obj)include/config.h ; \
+	fi; \
+	if [ "$${VID}" == "1" ] ; then \
+		echo "#define CONFIG_SYS_VIDEO" >> $(obj)include/config.h ; \
+	fi; \
+	if [ "$${USB}" == "1" ] ; then \
+		echo "#define CONFIG_SYS_USBCTRL" >> $(obj)include/config.h ; \
+	fi
+	@$(MKCONFIG) -a M5485EVB m68k mcf547x_8x m548xevb freescale
+
+TASREG_config :		unconfig
+	@$(MKCONFIG) $(@:_config=) m68k mcf52x2 tasreg esd
+
+#########################################################################
+## MPC83xx Systems
+#########################################################################
+
+kmeter1_config: unconfig
+	@$(MKCONFIG) kmeter1 ppc mpc83xx kmeter1 keymile
+
+MPC8313ERDB_33_config \
+MPC8313ERDB_66_config \
+MPC8313ERDB_NAND_33_config \
+MPC8313ERDB_NAND_66_config: unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/freescale/mpc8313erdb
+	@if [ "$(findstring _33_,$@)" ] ; then \
+		$(XECHO) -n "...33M ..." ; \
+		echo "#define CONFIG_SYS_33MHZ" >>$(obj)include/config.h ; \
+	fi ; \
+	if [ "$(findstring _66_,$@)" ] ; then \
+		$(XECHO) -n "...66M..." ; \
+		echo "#define CONFIG_SYS_66MHZ" >>$(obj)include/config.h ; \
+	fi ; \
+	if [ "$(findstring _NAND_,$@)" ] ; then \
+		$(XECHO) -n "...NAND..." ; \
+		echo "TEXT_BASE = 0x00100000" > $(obj)board/freescale/mpc8313erdb/config.tmp ; \
+		echo "#define CONFIG_NAND_U_BOOT" >>$(obj)include/config.h ; \
+	fi ;
+	@$(MKCONFIG) -a MPC8313ERDB ppc mpc83xx mpc8313erdb freescale
+	@if [ "$(findstring _NAND_,$@)" ] ; then \
+		echo "CONFIG_NAND_U_BOOT = y" >> $(obj)include/config.mk ; \
+	fi ;
+
+MPC8315ERDB_config: unconfig
+	@$(MKCONFIG) -a MPC8315ERDB ppc mpc83xx mpc8315erdb freescale
+
+MPC8323ERDB_config:	unconfig
+	@$(MKCONFIG) -a MPC8323ERDB ppc mpc83xx mpc8323erdb freescale
+
+MPC832XEMDS_config \
+MPC832XEMDS_HOST_33_config \
+MPC832XEMDS_HOST_66_config \
+MPC832XEMDS_SLAVE_config \
+MPC832XEMDS_ATM_config:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _HOST_,$@)" ] ; then \
+		$(XECHO) -n "... PCI HOST " ; \
+		echo "#define CONFIG_PCI" >>$(obj)include/config.h ; \
+	fi ; \
+	if [ "$(findstring _SLAVE_,$@)" ] ; then \
+		$(XECHO) "...PCI SLAVE 66M"  ; \
+		echo "#define CONFIG_PCI" >>$(obj)include/config.h ; \
+		echo "#define CONFIG_PCISLAVE" >>$(obj)include/config.h ; \
+	fi ; \
+	if [ "$(findstring _33_,$@)" ] ; then \
+		$(XECHO) -n "...33M ..." ; \
+		echo "#define PCI_33M" >>$(obj)include/config.h ; \
+		echo "#define CONFIG_PQ_MDS_PIB 1" >>$(obj)include/config.h ; \
+	fi ; \
+	if [ "$(findstring _66_,$@)" ] ; then \
+		$(XECHO) -n "...66M..." ; \
+		echo "#define PCI_66M" >>$(obj)include/config.h ; \
+		echo "#define CONFIG_PQ_MDS_PIB 1" >>$(obj)include/config.h ; \
+	fi ; \
+	if [ "$(findstring _ATM_,$@)" ] ; then \
+		$(XECHO) -n "...ATM..." ; \
+		echo "#define CONFIG_PQ_MDS_PIB 1" >>$(obj)include/config.h ; \
+		echo "#define CONFIG_PQ_MDS_PIB_ATM	1" >>$(obj)include/config.h ; \
+	fi ;
+	@$(MKCONFIG) -a MPC832XEMDS ppc mpc83xx mpc832xemds freescale
+
+MPC8349EMDS_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc83xx mpc8349emds freescale
+
+MPC8349ITX_config \
+MPC8349ITX_LOWBOOT_config \
+MPC8349ITXGP_config:	unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/freescale/mpc8349itx
+	@echo "#define CONFIG_$(subst _LOWBOOT,,$(@:_config=))" >> $(obj)include/config.h
+	@if [ "$(findstring GP,$@)" ] ; then \
+		echo "TEXT_BASE = 0xFE000000" >$(obj)board/freescale/mpc8349itx/config.tmp ; \
+	fi
+	@if [ "$(findstring LOWBOOT,$@)" ] ; then \
+		echo "TEXT_BASE = 0xFE000000" >$(obj)board/freescale/mpc8349itx/config.tmp ; \
+	fi
+	@$(MKCONFIG) -a -n $(@:_config=) MPC8349ITX ppc mpc83xx mpc8349itx freescale
+
+MPC8360EMDS_config \
+MPC8360EMDS_HOST_33_config \
+MPC8360EMDS_HOST_66_config \
+MPC8360EMDS_SLAVE_config \
+MPC8360EMDS_ATM_config: unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _HOST_,$@)" ] ; then \
+		$(XECHO) -n "... PCI HOST " ; \
+		echo "#define CONFIG_PCI" >>$(obj)include/config.h ; \
+	fi ; \
+	if [ "$(findstring _SLAVE_,$@)" ] ; then \
+		$(XECHO) "...PCI SLAVE 66M"  ; \
+		echo "#define CONFIG_PCI" >>$(obj)include/config.h ; \
+		echo "#define CONFIG_PCISLAVE" >>$(obj)include/config.h ; \
+	fi ; \
+	if [ "$(findstring _33_,$@)" ] ; then \
+		$(XECHO) -n "...33M ..." ; \
+		echo "#define PCI_33M" >>$(obj)include/config.h ; \
+		echo "#define CONFIG_PQ_MDS_PIB 1" >>$(obj)include/config.h ; \
+	fi ; \
+	if [ "$(findstring _66_,$@)" ] ; then \
+		$(XECHO) -n "...66M..." ; \
+		echo "#define PCI_66M" >>$(obj)include/config.h ; \
+		echo "#define CONFIG_PQ_MDS_PIB 1" >>$(obj)include/config.h ; \
+	fi ; \
+	if [ "$(findstring _ATM_,$@)" ] ; then \
+		$(XECHO) -n "...ATM..." ; \
+		echo "#define CONFIG_PQ_MDS_PIB 1" >>$(obj)include/config.h ; \
+		echo "#define CONFIG_PQ_MDS_PIB_ATM	1" >>$(obj)include/config.h ; \
+	fi ;
+	@$(MKCONFIG) -a MPC8360EMDS ppc mpc83xx mpc8360emds freescale
+
+MPC8360ERDK_33_config \
+MPC8360ERDK_66_config \
+MPC8360ERDK_config:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _33_,$@)" ] ; then \
+		$(XECHO) -n "... CLKIN 33MHz " ; \
+		echo "#define CONFIG_CLKIN_33MHZ" >>$(obj)include/config.h ;\
+	fi ;
+	@$(MKCONFIG) -a MPC8360ERDK ppc mpc83xx mpc8360erdk freescale
+
+MPC837XEMDS_config \
+MPC837XEMDS_HOST_config:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _HOST_,$@)" ] ; then \
+		$(XECHO) -n "... PCI HOST " ; \
+		echo "#define CONFIG_PCI" >>$(obj)include/config.h ; \
+	fi ;
+	@$(MKCONFIG) -a MPC837XEMDS ppc mpc83xx mpc837xemds freescale
+
+MPC837XERDB_config:	unconfig
+	@$(MKCONFIG) -a MPC837XERDB ppc mpc83xx mpc837xerdb freescale
+
+MVBLM7_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc83xx mvblm7 matrix_vision
+
+sbc8349_config \
+sbc8349_PCI_33_config \
+sbc8349_PCI_66_config: unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _PCI_,$@)" ] ; then \
+		$(XECHO) -n "... PCI HOST at " ; \
+		echo "#define CONFIG_PCI" >>$(obj)include/config.h ; \
+	fi ; \
+	if [ "$(findstring _33_,$@)" ] ; then \
+		$(XECHO) -n "33MHz... " ; \
+		echo "#define PCI_33M" >>$(obj)include/config.h ; \
+	fi ; \
+	if [ "$(findstring _66_,$@)" ] ; then \
+		$(XECHO) -n "66MHz... " ; \
+		echo "#define PCI_66M" >>$(obj)include/config.h ; \
+	fi ;
+	@$(MKCONFIG) -a sbc8349 ppc mpc83xx sbc8349
+
+SIMPC8313_LP_config \
+SIMPC8313_SP_config: unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/sheldon/simpc8313
+	@if [ "$(findstring _LP_,$@)" ] ; then \
+		$(XECHO) -n "...Large Page NAND..." ; \
+		echo "#define CONFIG_NAND_LP" >> $(obj)include/config.h ; \
+	fi ; \
+	if [ "$(findstring _SP_,$@)" ] ; then \
+		$(XECHO) -n "...Small Page NAND..." ; \
+		echo "#define CONFIG_NAND_SP" >> $(obj)include/config.h ; \
+	fi ;
+	@$(MKCONFIG) -a SIMPC8313 ppc mpc83xx simpc8313 sheldon
+	@echo "CONFIG_NAND_U_BOOT = y" >> $(obj)include/config.mk
+
+TQM834x_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc83xx tqm834x tqc
+
+vme8349_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc83xx vme8349 esd
+
+#########################################################################
+## MPC85xx Systems
+#########################################################################
+
+ATUM8548_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc85xx atum8548
+
+MPC8536DS_config:       unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc85xx mpc8536ds freescale
+
+MPC8540ADS_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc85xx mpc8540ads freescale
+
+MPC8540EVAL_config \
+MPC8540EVAL_33_config \
+MPC8540EVAL_66_config \
+MPC8540EVAL_33_slave_config \
+MPC8540EVAL_66_slave_config:	  unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _33_,$@)" ] ; then \
+		$(XECHO) "... 33 MHz PCI" ; \
+	else \
+		echo "#define CONFIG_SYSCLK_66M" >>$(obj)include/config.h ; \
+		$(XECHO) "... 66 MHz PCI" ; \
+	fi ; \
+	if [ "$(findstring _slave_,$@)" ] ; then \
+		echo "#define CONFIG_PCI_SLAVE" >>$(obj)include/config.h ; \
+		$(XECHO) " slave" ; \
+	else \
+		$(XECHO) " host" ; \
+	fi
+	@$(MKCONFIG) -a MPC8540EVAL ppc mpc85xx mpc8540eval
+
+MPC8560ADS_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc85xx mpc8560ads freescale
+
+MPC8541CDS_legacy_config \
+MPC8541CDS_config:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _legacy_,$@)" ] ; then \
+		echo "#define CONFIG_LEGACY" >>$(obj)include/config.h ; \
+		$(XECHO) "... legacy" ; \
+	fi
+	@$(MKCONFIG) -a MPC8541CDS ppc mpc85xx mpc8541cds freescale
+
+MPC8544DS_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc85xx mpc8544ds freescale
+
+MPC8548CDS_legacy_config \
+MPC8548CDS_config:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _legacy_,$@)" ] ; then \
+		echo "#define CONFIG_LEGACY" >>$(obj)include/config.h ; \
+		$(XECHO) "... legacy" ; \
+	fi
+	@$(MKCONFIG) -a MPC8548CDS ppc mpc85xx mpc8548cds freescale
+
+MPC8555CDS_legacy_config \
+MPC8555CDS_config:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _legacy_,$@)" ] ; then \
+		echo "#define CONFIG_LEGACY" >>$(obj)include/config.h ; \
+		$(XECHO) "... legacy" ; \
+	fi
+	@$(MKCONFIG) -a MPC8555CDS ppc mpc85xx mpc8555cds freescale
+
+MPC8568MDS_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc85xx mpc8568mds freescale
+
+MPC8569MDS_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc85xx mpc8569mds freescale
+
+MPC8572DS_36BIT_config \
+MPC8572DS_config:       unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _36BIT_,$@)" ] ; then \
+		echo "#define CONFIG_PHYS_64BIT" >>$(obj)include/config.h ; \
+		$(XECHO) "... enabling 36-bit physical addressing." ; \
+	fi
+	@$(MKCONFIG) -a MPC8572DS ppc mpc85xx mpc8572ds freescale
+
+P2020DS_36BIT_config \
+P2020DS_config:		unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _36BIT_,$@)" ] ; then \
+		echo "#define CONFIG_PHYS_64BIT" >>$(obj)include/config.h ; \
+		$(XECHO) "... enabling 36-bit physical addressing." ; \
+	fi
+	@$(MKCONFIG) -a P2020DS ppc mpc85xx p2020ds freescale
+
+PM854_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc85xx pm854
+
+PM856_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc85xx pm856
+
+sbc8540_config \
+sbc8540_33_config \
+sbc8540_66_config:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _66_,$@)" ] ; then \
+		echo "#define CONFIG_PCI_66"	>>$(obj)include/config.h ; \
+		$(XECHO) "... 66 MHz PCI" ; \
+	else \
+		$(XECHO) "... 33 MHz PCI" ; \
+	fi
+	@$(MKCONFIG) -a SBC8540 ppc mpc85xx sbc8560
+
+sbc8548_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc85xx sbc8548
+
+sbc8560_config \
+sbc8560_33_config \
+sbc8560_66_config:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _66_,$@)" ] ; then \
+		echo "#define CONFIG_PCI_66"	>>$(obj)include/config.h ; \
+		$(XECHO) "... 66 MHz PCI" ; \
+	else \
+		$(XECHO) "... 33 MHz PCI" ; \
+	fi
+	@$(MKCONFIG) -a sbc8560 ppc mpc85xx sbc8560
+
+socrates_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc85xx socrates
+
+stxgp3_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc85xx stxgp3
+
+stxssa_config		\
+stxssa_4M_config:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _4M_,$@)" ] ; then \
+		echo "#define CONFIG_STXSSA_4M" >>$(obj)include/config.h ; \
+		$(XECHO) "... with 4 MiB flash memory" ; \
+	fi
+	@$(MKCONFIG) -a stxssa ppc mpc85xx stxssa
+
+TQM8540_config		\
+TQM8541_config		\
+TQM8548_config		\
+TQM8548_AG_config	\
+TQM8548_BE_config	\
+TQM8555_config		\
+TQM8560_config:		unconfig
+	@mkdir -p $(obj)include
+	@BTYPE=$(@:_config=); \
+	CTYPE=$(subst TQM,,$(subst _AG,,$(subst _BE,,$(@:_config=)))); \
+	$(XECHO) "... "$${BTYPE}" (MPC"$${CTYPE}")"; \
+	echo "#define CONFIG_MPC$${CTYPE}">>$(obj)include/config.h; \
+	echo "#define CONFIG_$${BTYPE}">>$(obj)include/config.h; \
+	echo "#define CONFIG_HOSTNAME tqm$${CTYPE}">>$(obj)include/config.h; \
+	echo "#define CONFIG_BOARDNAME \"$${BTYPE}\"">>$(obj)include/config.h;
+	@$(MKCONFIG) -a TQM85xx ppc mpc85xx tqm85xx tqc
+	@echo "CONFIG_$(@:_config=) = y">>$(obj)include/config.mk;
+
+XPEDITE5200_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc85xx xpedite5200 xes
+
+XPEDITE5370_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc85xx xpedite5370 xes
+
+#########################################################################
+## MPC86xx Systems
+#########################################################################
+
+MPC8610HPCD_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc86xx mpc8610hpcd freescale
+
+MPC8641HPCN_36BIT_config \
+MPC8641HPCN_config:    unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _36BIT_,$@)" ] ; then \
+		echo "#define CONFIG_PHYS_64BIT" >>$(obj)include/config.h ; \
+		$(XECHO) "... enabling 36-bit physical addressing." ; \
+	fi
+	@$(MKCONFIG) -a MPC8641HPCN ppc mpc86xx mpc8641hpcn freescale
+
+sbc8641d_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc86xx sbc8641d
+
+XPEDITE5170_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc86xx xpedite5170 xes
+
+#########################################################################
+## 74xx/7xx Systems
+#########################################################################
+
+AmigaOneG3SE_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc 74xx_7xx AmigaOneG3SE MAI
+
+BAB7xx_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc 74xx_7xx bab7xx eltec
+
+CPCI750_config:	unconfig
+	@$(MKCONFIG) CPCI750 ppc 74xx_7xx cpci750 esd
+
+DB64360_config:	unconfig
+	@$(MKCONFIG) DB64360 ppc 74xx_7xx db64360 Marvell
+
+DB64460_config:	unconfig
+	@$(MKCONFIG) DB64460 ppc 74xx_7xx db64460 Marvell
+
+ELPPC_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc 74xx_7xx elppc eltec
+
+EVB64260_config	\
+EVB64260_750CX_config:	unconfig
+	@$(MKCONFIG) EVB64260 ppc 74xx_7xx evb64260
+
+mpc7448hpc2_config:  unconfig
+	@$(MKCONFIG) $(@:_config=) ppc 74xx_7xx mpc7448hpc2 freescale
+
+P3G4_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc 74xx_7xx evb64260
+
+p3m750_config	\
+p3m7448_config:		unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring 750_,$@)" ] ; then \
+		echo "#define CONFIG_P3M750" >>$(obj)include/config.h ; \
+	else \
+		echo "#define CONFIG_P3M7448" >>$(obj)include/config.h ; \
+	fi
+	@$(MKCONFIG) -a p3mx ppc 74xx_7xx p3mx prodrive
+
+PCIPPC2_config \
+PCIPPC6_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc 74xx_7xx pcippc2
+
+ppmc7xx_config: unconfig
+	@$(MKCONFIG) $(@:_config=) ppc 74xx_7xx ppmc7xx
+
+ZUMA_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc 74xx_7xx evb64260
+
+#========================================================================
+# ARM
+#========================================================================
+#########################################################################
+## StrongARM Systems
+#########################################################################
+
+assabet_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm sa1100 assabet
+
+dnp1110_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm sa1100 dnp1110
+
+gcplus_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm sa1100 gcplus
+
+lart_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm sa1100 lart
+
+shannon_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm sa1100 shannon
+
+#########################################################################
+## ARM92xT Systems
+#########################################################################
+
+#########################################################################
+## Atmel AT91RM9200 Systems
+#########################################################################
+
+at91rm9200dk_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm920t at91rm9200dk atmel at91rm9200
+
+at91rm9200ek_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm920t at91rm9200ek atmel at91rm9200
+
+cmc_pu2_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm920t cmc_pu2 NULL at91rm9200
+
+csb637_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm920t csb637 NULL at91rm9200
+
+kb9202_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm920t kb9202 NULL at91rm9200
+
+m501sk_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm920t m501sk NULL at91rm9200
+
+mp2usb_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm920t mp2usb NULL at91rm9200
+
+#########################################################################
+## Atmel ARM926EJ-S Systems
+#########################################################################
+
+afeb9260_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm926ejs afeb9260 NULL at91
+
+at91cap9adk_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm926ejs at91cap9adk atmel at91
+
+at91sam9260ek_nandflash_config \
+at91sam9260ek_dataflash_cs0_config \
+at91sam9260ek_dataflash_cs1_config \
+at91sam9260ek_config \
+at91sam9g20ek_nandflash_config \
+at91sam9g20ek_dataflash_cs0_config \
+at91sam9g20ek_dataflash_cs1_config \
+at91sam9g20ek_config	:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring 9g20,$@)" ] ; then \
+		echo "#define CONFIG_AT91SAM9G20EK 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... 9G20 Variant" ; \
+	else \
+		echo "#define CONFIG_AT91SAM9260EK 1"	>>$(obj)include/config.h ; \
+	fi;
+	@if [ "$(findstring _nandflash,$@)" ] ; then \
+		echo "#define CONFIG_SYS_USE_NANDFLASH 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... with environment variable in NAND FLASH" ; \
+	elif [ "$(findstring dataflash_cs0,$@)" ] ; then \
+		echo "#define CONFIG_SYS_USE_DATAFLASH_CS0 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... with environment variable in SPI DATAFLASH CS0" ; \
+	else \
+		echo "#define CONFIG_SYS_USE_DATAFLASH_CS1 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... with environment variable in SPI DATAFLASH CS1" ; \
+	fi;
+	@$(MKCONFIG) -a at91sam9260ek arm arm926ejs at91sam9260ek atmel at91
+
+at91sam9xeek_nandflash_config \
+at91sam9xeek_dataflash_cs0_config \
+at91sam9xeek_dataflash_cs1_config \
+at91sam9xeek_config	:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _nandflash,$@)" ] ; then \
+		echo "#define CONFIG_SYS_USE_NANDFLASH 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... with environment variable in NAND FLASH" ; \
+	elif [ "$(findstring dataflash_cs0,$@)" ] ; then \
+		echo "#define CONFIG_SYS_USE_DATAFLASH_CS0 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... with environment variable in SPI DATAFLASH CS0" ; \
+	else \
+		echo "#define CONFIG_SYS_USE_DATAFLASH_CS1 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... with environment variable in SPI DATAFLASH CS1" ; \
+	fi;
+	@$(MKCONFIG) -n at91sam9xeek -a at91sam9260ek arm arm926ejs at91sam9260ek atmel at91
+
+at91sam9261ek_nandflash_config \
+at91sam9261ek_dataflash_cs0_config \
+at91sam9261ek_dataflash_cs3_config \
+at91sam9261ek_config \
+at91sam9g10ek_nandflash_config \
+at91sam9g10ek_dataflash_cs0_config \
+at91sam9g10ek_dataflash_cs3_config \
+at91sam9g10ek_config	:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring 9g10,$@)" ] ; then \
+		echo "#define CONFIG_AT91SAM9G10EK 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... 9G10 Variant" ; \
+	else \
+		echo "#define CONFIG_AT91SAM9261EK 1"	>>$(obj)include/config.h ; \
+	fi;
+	@if [ "$(findstring _nandflash,$@)" ] ; then \
+		echo "#define CONFIG_SYS_USE_NANDFLASH 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... with environment variable in NAND FLASH" ; \
+	elif [ "$(findstring dataflash_cs0,$@)" ] ; then \
+		echo "#define CONFIG_SYS_USE_DATAFLASH_CS3 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... with environment variable in SPI DATAFLASH CS3" ; \
+	else \
+		echo "#define CONFIG_SYS_USE_DATAFLASH_CS0 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... with environment variable in SPI DATAFLASH CS0" ; \
+	fi;
+	@$(MKCONFIG) -a at91sam9261ek arm arm926ejs at91sam9261ek atmel at91
+
+at91sam9263ek_norflash_config \
+at91sam9263ek_norflash_boot_config \
+at91sam9263ek_nandflash_config \
+at91sam9263ek_dataflash_config \
+at91sam9263ek_dataflash_cs0_config \
+at91sam9263ek_config	:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _nandflash,$@)" ] ; then \
+		echo "#define CONFIG_SYS_USE_NANDFLASH 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... with environment variable in NAND FLASH" ; \
+	elif [ "$(findstring norflash,$@)" ] ; then \
+		echo "#define CONFIG_SYS_USE_NORFLASH 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... with environment variable in NOR FLASH" ; \
+	else \
+		echo "#define CONFIG_SYS_USE_DATAFLASH 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... with environment variable in SPI DATAFLASH CS0" ; \
+	fi;
+	@if [ "$(findstring norflash_boot,$@)" ] ; then \
+		echo "#define CONFIG_SYS_USE_BOOT_NORFLASH 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... and boot from NOR FLASH" ; \
+	fi;
+	@$(MKCONFIG) -a at91sam9263ek arm arm926ejs at91sam9263ek atmel at91
+
+at91sam9rlek_nandflash_config \
+at91sam9rlek_dataflash_config \
+at91sam9rlek_dataflash_cs0_config \
+at91sam9rlek_config	:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _nandflash,$@)" ] ; then \
+		echo "#define CONFIG_SYS_USE_NANDFLASH 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... with environment variable in NAND FLASH" ; \
+	else \
+		echo "#define CONFIG_SYS_USE_DATAFLASH 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... with environment variable in SPI DATAFLASH CS0" ; \
+	fi;
+	@$(MKCONFIG) -a at91sam9rlek arm arm926ejs at91sam9rlek atmel at91
+
+meesc_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm926ejs meesc esd at91
+
+pm9261_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm926ejs pm9261 ronetix at91
+
+at91sam9m10g45ek_nandflash_config \
+at91sam9m10g45ek_dataflash_config \
+at91sam9m10g45ek_dataflash_cs0_config \
+at91sam9m10g45ek_config \
+at91sam9g45ekes_nandflash_config \
+at91sam9g45ekes_dataflash_config \
+at91sam9g45ekes_dataflash_cs0_config \
+at91sam9g45ekes_config	:	unconfig
+	@mkdir -p $(obj)include
+		@if [ "$(findstring 9m10,$@)" ] ; then \
+		echo "#define CONFIG_AT91SAM9M10G45EK 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... 9M10G45 Variant" ; \
+	else \
+		echo "#define CONFIG_AT91SAM9G45EKES 1"	>>$(obj)include/config.h ; \
+	fi;
+
+	@if [ "$(findstring _nandflash,$@)" ] ; then \
+		echo "#define CONFIG_SYS_USE_NANDFLASH 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... with environment variable in NAND FLASH" ; \
+	else \
+		echo "#define CONFIG_ATMEL_SPI 1"	>>$(obj)include/config.h ; \
+		$(XECHO) "... with environment variable in SPI DATAFLASH CS0" ; \
+	fi;
+	@$(MKCONFIG) -a at91sam9m10g45ek arm arm926ejs at91sam9m10g45ek atmel at91
+
+pm9263_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm926ejs pm9263 ronetix at91
+
+########################################################################
+## ARM Integrator boards - see doc/README-integrator for more info.
+integratorap_config	\
+ap_config		\
+ap966_config		\
+ap922_config		\
+ap922_XA10_config	\
+ap7_config		\
+ap720t_config		\
+ap920t_config		\
+ap926ejs_config		\
+ap946es_config: unconfig
+	@board/armltd/integrator/split_by_variant.sh ap $@
+
+integratorcp_config	\
+cp_config		\
+cp920t_config		\
+cp926ejs_config		\
+cp946es_config		\
+cp1136_config		\
+cp966_config		\
+cp922_config		\
+cp922_XA10_config	\
+cp1026_config: unconfig
+	@board/armltd/integrator/split_by_variant.sh cp $@
+
+davinci_dvevm_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm926ejs dvevm davinci davinci
+
+davinci_schmoogie_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm926ejs schmoogie davinci davinci
+
+davinci_sffsdr_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm926ejs sffsdr davinci davinci
+
+davinci_sonata_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm926ejs sonata davinci davinci
+
+davinci_dm355evm_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm926ejs dm355evm davinci davinci
+
+lpd7a400_config \
+lpd7a404_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm lh7a40x lpd7a40x
+
+mv88f6281gtw_ge_config: unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm926ejs $(@:_config=) Marvell kirkwood
+
+mx1ads_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm920t mx1ads NULL imx
+
+mx1fs2_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm920t mx1fs2 NULL imx
+
+netstar_config:		unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm925t netstar
+
+nhk8815_config \
+nhk8815_onenand_config:	unconfig
+	@mkdir -p $(obj)include
+	@ > $(obj)include/config.h
+	@if [ "$(findstring _onenand, $@)" ] ; then \
+		echo "#define CONFIG_BOOT_ONENAND" >> $(obj)include/config.h; \
+		$(XECHO) "... configured to boot from OneNand Flash"; \
+	else \
+		$(XECHO) "... configured to boot from Nand Flash"; \
+	fi
+	@$(MKCONFIG) -a nhk8815 arm arm926ejs nhk8815 st nomadik
+
+omap1510inn_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm925t omap1510inn
+
+xtract_omap1610xxx = $(subst _cs0boot,,$(subst _cs3boot,,$(subst _cs_autoboot,,$(subst _config,,$1))))
+
+omap1610inn_config \
+omap1610inn_cs0boot_config \
+omap1610inn_cs3boot_config \
+omap1610inn_cs_autoboot_config \
+omap1610h2_config \
+omap1610h2_cs0boot_config \
+omap1610h2_cs3boot_config \
+omap1610h2_cs_autoboot_config:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _cs0boot_, $@)" ] ; then \
+		echo "#define CONFIG_CS0_BOOT" >> .$(obj)include/config.h ; \
+		$(XECHO) "... configured for CS0 boot"; \
+	elif [ "$(findstring _cs_autoboot_, $@)" ] ; then \
+		echo "#define CONFIG_CS_AUTOBOOT" >> $(obj)include/config.h ; \
+		$(XECHO) "... configured for CS_AUTO boot"; \
+	else \
+		echo "#define CONFIG_CS3_BOOT" >> $(obj)include/config.h ; \
+		$(XECHO) "... configured for CS3 boot"; \
+	fi;
+	@$(MKCONFIG) -a $(call xtract_omap1610xxx,$@) arm arm926ejs omap1610inn NULL omap
+
+omap5912osk_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm926ejs omap5912osk NULL omap
+
+xtract_omap730p2 = $(subst _cs0boot,,$(subst _cs3boot,, $(subst _config,,$1)))
+
+omap730p2_config \
+omap730p2_cs0boot_config \
+omap730p2_cs3boot_config :	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _cs0boot_, $@)" ] ; then \
+		echo "#define CONFIG_CS0_BOOT" >> $(obj)include/config.h ; \
+		$(XECHO) "... configured for CS0 boot"; \
+	else \
+		echo "#define CONFIG_CS3_BOOT" >> $(obj)include/config.h ; \
+		$(XECHO) "... configured for CS3 boot"; \
+	fi;
+	@$(MKCONFIG) -a $(call xtract_omap730p2,$@) arm arm926ejs omap730p2 NULL omap
+
+rd6281a_config: unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm926ejs $(@:_config=) Marvell kirkwood
+
+sbc2410x_config: unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm920t sbc2410x NULL s3c24x0
+
+scb9328_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm920t scb9328 NULL imx
+
+sheevaplug_config: unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm926ejs $(@:_config=) Marvell kirkwood
+
+smdk2400_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm920t smdk2400 samsung s3c24x0
+
+smdk2410_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm920t smdk2410 samsung s3c24x0
+
+SX1_stdout_serial_config \
+SX1_config:		unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _stdout_serial_, $@)" ] ; then \
+		echo "#undef CONFIG_STDOUT_USBTTY" >> $(obj)include/config.h ; \
+		$(XECHO) "... configured for stdout serial"; \
+	else \
+		echo "#define CONFIG_STDOUT_USBTTY" >> $(obj)include/config.h ; \
+		$(XECHO) "... configured for stdout usbtty"; \
+	fi;
+	@$(MKCONFIG) SX1 arm arm925t sx1
+
+# TRAB default configuration:	8 MB Flash, 32 MB RAM
+xtract_trab = $(subst _bigram,,$(subst _bigflash,,$(subst _old,,$(subst _config,,$1))))
+
+trab_config \
+trab_bigram_config \
+trab_bigflash_config \
+trab_old_config:	unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/trab
+	@[ -z "$(findstring _bigram,$@)" ] || \
+		{ echo "#define CONFIG_FLASH_8MB"  >>$(obj)include/config.h ; \
+		  echo "#define CONFIG_RAM_32MB"   >>$(obj)include/config.h ; \
+		  $(XECHO) "... with 8 MB Flash, 32 MB RAM" ; \
+		}
+	@[ -z "$(findstring _bigflash,$@)" ] || \
+		{ echo "#define CONFIG_FLASH_16MB" >>$(obj)include/config.h ; \
+		  echo "#define CONFIG_RAM_16MB"   >>$(obj)include/config.h ; \
+		  $(XECHO) "... with 16 MB Flash, 16 MB RAM" ; \
+		  echo "TEXT_BASE = 0x0CF40000" >$(obj)board/trab/config.tmp ; \
+		}
+	@[ -z "$(findstring _old,$@)" ] || \
+		{ echo "#define CONFIG_FLASH_8MB"  >>$(obj)include/config.h ; \
+		  echo "#define CONFIG_RAM_16MB"   >>$(obj)include/config.h ; \
+		  $(XECHO) "... with 8 MB Flash, 16 MB RAM" ; \
+		  echo "TEXT_BASE = 0x0CF40000" >$(obj)board/trab/config.tmp ; \
+		}
+	@$(MKCONFIG) -a $(call xtract_trab,$@) arm arm920t trab NULL s3c24x0
+
+VCMA9_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm920t vcma9 mpl s3c24x0
+
+#########################################################################
+# ARM supplied Versatile development boards
+#########################################################################
+
+cm4008_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm920t cm4008 NULL ks8695
+
+cm41xx_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm920t cm41xx NULL ks8695
+
+versatile_config	\
+versatileab_config	\
+versatilepb_config :	unconfig
+	@board/armltd/versatile/split_by_variant.sh $@
+
+voiceblue_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm925t voiceblue
+
+#########################################################################
+## S3C44B0 Systems
+#########################################################################
+
+B2_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm s3c44b0 B2 dave
+
+#########################################################################
+## ARM720T Systems
+#########################################################################
+
+armadillo_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm720t armadillo
+
+ep7312_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm720t ep7312
+
+impa7_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm720t impa7
+
+modnet50_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm720t modnet50
+
+evb4510_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm720t evb4510 NULL s3c4510b
+
+lpc2292sodimm_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm720t lpc2292sodimm NULL lpc2292
+
+SMN42_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm720t SMN42 siemens lpc2292
+
+#########################################################################
+## ARM CORTEX Systems
+#########################################################################
+
+omap3_beagle_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm_cortexa8 beagle omap3 omap3
+
+omap3_overo_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm_cortexa8 overo omap3 omap3
+
+omap3_evm_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm_cortexa8 evm omap3 omap3
+
+omap3_pandora_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm_cortexa8 pandora omap3 omap3
+
+omap3_zoom1_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm_cortexa8 zoom1 omap3 omap3
+
+vpe_apollo_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm_cortexa8 vpe_apollo nxp pnx84xx
+
+vpe_apollo_eth_emu_config :	unconfig
+	@mkdir -p $(obj)include
+	@ >$(obj)include/config.h
+	@echo "#define CONFIG_LIPP_6300ETH" >>$(obj)include/config.h
+	@echo "#define CONFIG_USING_EMU_PHY" >>$(obj)include/config.h
+	@echo "#define __USING_EMU_PHY__" >>$(obj)include/config.h
+	@echo "#define TMFL_LIPP6100ETH_GMII_ADDRESS_CSR_VAL 0x0U" >>$(obj)include/config.h
+	@echo "#define TMFL_LIPP6100ETH_GMII_PHY_ADDRESS_VAL 0x0U" >>$(obj)include/config.h
+	@$(MKCONFIG) $(@:_eth_emu_config=) arm arm_cortexa8 vpe_apollo nxp pnx84xx
+
+omap3_zoom2_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm_cortexa8 zoom2 omap3 omap3
+
+#########################################################################
+## XScale Systems
+#########################################################################
+
+actux1_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm ixp actux1
+
+actux2_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm ixp actux2
+
+actux3_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm ixp actux3
+
+actux4_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm ixp actux4
+
+cerf250_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm pxa cerf250
+
+cradle_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm pxa cradle
+
+csb226_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm pxa csb226
+
+delta_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm pxa delta
+
+innokom_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm pxa innokom
+
+ixdp425_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm ixp ixdp425
+
+ixdpg425_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm ixp ixdp425
+
+lubbock_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm pxa lubbock
+
+pleb2_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm pxa pleb2
+
+logodl_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm pxa logodl
+
+pdnb3_config \
+scpu_config:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring scpu_,$@)" ] ; then \
+		echo "#define CONFIG_SCPU"	>>$(obj)include/config.h ; \
+		$(XECHO) "... on SCPU board variant" ; \
+	fi
+	@$(MKCONFIG) -a pdnb3 arm ixp pdnb3 prodrive
+
+pxa255_idp_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm pxa pxa255_idp
+
+polaris_config \
+trizepsiv_config	:	unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring polaris,$@)" ] ; then \
+		echo "#define CONFIG_POLARIS 1"	>>$(obj)include/config.h ; \
+	fi;
+	@$(MKCONFIG) -a trizepsiv arm pxa trizepsiv
+
+wepep250_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm pxa wepep250
+
+xaeniax_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm pxa xaeniax
+
+xm250_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) arm pxa xm250
+
+xsengine_config :	unconfig
+	@$(MKCONFIG) $(@:_config=) arm pxa xsengine
+
+zylonite_config :
+	@$(MKCONFIG) $(@:_config=) arm pxa zylonite
+
+#########################################################################
+## ARM1136 Systems
+#########################################################################
+
+apollon_config		: unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)onenand_ipl/board/apollon
+	@echo "#define CONFIG_ONENAND_U_BOOT" > $(obj)include/config.h
+	@$(MKCONFIG) $(@:_config=) arm arm1136 apollon NULL omap24xx
+	@echo "CONFIG_ONENAND_U_BOOT = y" >> $(obj)include/config.mk
+
+imx31_litekit_config	: unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm1136 imx31_litekit NULL mx31
+
+imx31_phycore_eet_config \
+imx31_phycore_config	: unconfig
+	@mkdir -p $(obj)include
+	@if [ -n "$(findstring _eet_,$@)" ]; then			\
+		echo "#define CONFIG_IMX31_PHYCORE_EET" >> $(obj)include/config.h;	\
+	fi
+	@$(MKCONFIG) -a imx31_phycore arm arm1136 imx31_phycore NULL mx31
+
+mx31ads_config		: unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm1136 mx31ads freescale mx31
+
+mx31pdk_config \
+mx31pdk_nand_config	: unconfig
+	@mkdir -p $(obj)include
+	@if [ -n "$(findstring _nand_,$@)" ]; then					\
+		echo "#define CONFIG_NAND_U_BOOT" >> $(obj)include/config.h;		\
+	else										\
+		echo "#define CONFIG_SKIP_LOWLEVEL_INIT" >> $(obj)include/config.h;	\
+		echo "#define CONFIG_SKIP_RELOCATE_UBOOT" >> $(obj)include/config.h;	\
+	fi
+	@$(MKCONFIG) -a mx31pdk arm arm1136 mx31pdk freescale mx31
+
+omap2420h4_config	: unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm1136 omap2420h4 NULL omap24xx
+
+qong_config		: unconfig
+	@$(MKCONFIG) $(@:_config=) arm arm1136 qong davedenx mx31
+
+#########################################################################
+## ARM1176 Systems
+#########################################################################
+smdk6400_noUSB_config	\
+smdk6400_config	:	unconfig
+	@mkdir -p $(obj)include $(obj)board/samsung/smdk6400
+	@mkdir -p $(obj)nand_spl/board/samsung/smdk6400
+	@echo "#define CONFIG_NAND_U_BOOT" > $(obj)include/config.h
+	@if [ -z "$(findstring smdk6400_noUSB_config,$@)" ]; then			\
+		echo "RAM_TEXT = 0x57e00000" >> $(obj)board/samsung/smdk6400/config.tmp;\
+		$(MKCONFIG) $(@:_config=) arm arm1176 smdk6400 samsung s3c64xx;		\
+	else										\
+		echo "RAM_TEXT = 0xc7e00000" >> $(obj)board/samsung/smdk6400/config.tmp;\
+		$(MKCONFIG) $(@:_noUSB_config=) arm arm1176 smdk6400 samsung s3c64xx;	\
+	fi
+	@echo "CONFIG_NAND_U_BOOT = y" >> $(obj)include/config.mk
+
+#========================================================================
+# i386
+#========================================================================
+#########################################################################
+## AMD SC520 CDP
+#########################################################################
+eNET_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) i386 i386 eNET NULL sc520
+
+sc520_cdp_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) i386 i386 sc520_cdp NULL sc520
+
+sc520_spunk_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) i386 i386 sc520_spunk NULL sc520
+
+sc520_spunk_rel_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) i386 i386 sc520_spunk NULL sc520
+
+#========================================================================
+# MIPS
+#========================================================================
+#########################################################################
+## MIPS32 4Kc
+#########################################################################
+
+xtract_incaip = $(subst _100MHz,,$(subst _133MHz,,$(subst _150MHz,,$(subst _config,,$1))))
+
+incaip_100MHz_config	\
+incaip_133MHz_config	\
+incaip_150MHz_config	\
+incaip_config: unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring _100MHz,$@)" ] || \
+		{ echo "#define CPU_CLOCK_RATE 100000000" >>$(obj)include/config.h ; \
+		  $(XECHO) "... with 100MHz system clock" ; \
+		}
+	@[ -z "$(findstring _133MHz,$@)" ] || \
+		{ echo "#define CPU_CLOCK_RATE 133000000" >>$(obj)include/config.h ; \
+		  $(XECHO) "... with 133MHz system clock" ; \
+		}
+	@[ -z "$(findstring _150MHz,$@)" ] || \
+		{ echo "#define CPU_CLOCK_RATE 150000000" >>$(obj)include/config.h ; \
+		  $(XECHO) "... with 150MHz system clock" ; \
+		}
+	@$(MKCONFIG) -a $(call xtract_incaip,$@) mips mips incaip
+
+tb0229_config: unconfig
+	@$(MKCONFIG) $(@:_config=) mips mips tb0229
+
+vct_premium_config		\
+vct_premium_small_config	\
+vct_premium_onenand_config	\
+vct_premium_onenand_small_config \
+vct_platinum_config		\
+vct_platinum_small_config	\
+vct_platinum_onenand_config	\
+vct_platinum_onenand_small_config \
+vct_platinumavc_config		\
+vct_platinumavc_small_config	\
+vct_platinumavc_onenand_config	\
+vct_platinumavc_onenand_small_config: unconfig
+	@mkdir -p $(obj)include
+	@if [ "$(findstring _premium,$@)" ] ; then \
+		echo "#define CONFIG_VCT_PREMIUM" > $(obj)include/config.h ; \
+		$(XECHO) "... on Premium board variant" ; \
+	fi
+	@if [ "$(findstring _platinum_,$@)" ] ; then \
+		echo "#define CONFIG_VCT_PLATINUM" > $(obj)include/config.h ; \
+		$(XECHO) "... on Platinum board variant" ; \
+	fi
+	@if [ "$(findstring _platinumavc,$@)" ] ; then \
+		echo "#define CONFIG_VCT_PLATINUMAVC" > $(obj)include/config.h ; \
+		$(XECHO) "... on PlatinumAVC board variant" ; \
+	fi
+	@if [ "$(findstring _onenand,$@)" ] ; then \
+		echo "#define CONFIG_VCT_ONENAND" >> $(obj)include/config.h ; \
+		$(XECHO) "... on OneNAND board variant" ; \
+	fi
+	@if [ "$(findstring _small,$@)" ] ; then \
+		echo "#define CONFIG_VCT_SMALL_IMAGE" >> $(obj)include/config.h ; \
+		$(XECHO) "... stripped down image variant" ; \
+	fi
+	@$(MKCONFIG) -a vct mips mips vct micronas
+
+#########################################################################
+## MIPS32 AU1X00
+#########################################################################
+
+dbau1000_config		:	unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_DBAU1000 1" >$(obj)include/config.h
+	@$(MKCONFIG) -a dbau1x00 mips mips dbau1x00
+
+dbau1100_config		:	unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_DBAU1100 1" >$(obj)include/config.h
+	@$(MKCONFIG) -a dbau1x00 mips mips dbau1x00
+
+dbau1500_config		:	unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_DBAU1500 1" >$(obj)include/config.h
+	@$(MKCONFIG) -a dbau1x00 mips mips dbau1x00
+
+dbau1550_config		:	unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_DBAU1550 1" >$(obj)include/config.h
+	@$(MKCONFIG) -a dbau1x00 mips mips dbau1x00
+
+dbau1550_el_config	:	unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_DBAU1550 1" >$(obj)include/config.h
+	@$(MKCONFIG) -a dbau1x00 mips mips dbau1x00
+
+gth2_config		:	unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_GTH2 1" >$(obj)include/config.h
+	@$(MKCONFIG) -a gth2 mips mips gth2
+
+pb1000_config		:	unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_PB1000 1" >$(obj)include/config.h
+	@$(MKCONFIG) -a pb1x00 mips mips pb1x00
+
+qemu_mips_config	: unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_QEMU_MIPS 1" >$(obj)include/config.h
+	@$(MKCONFIG) -a qemu-mips mips mips qemu-mips
+
+#########################################################################
+## MIPS64 5Kc
+#########################################################################
+
+purple_config :		unconfig
+	@$(MKCONFIG) $(@:_config=) mips mips purple
+
+#========================================================================
+# Nios
+#========================================================================
+#########################################################################
+## Nios32
+#########################################################################
+
+ADNPESC1_DNPEVA2_base_32_config	\
+ADNPESC1_base_32_config		\
+ADNPESC1_config: unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring _DNPEVA2,$@)" ] || \
+		{ echo "#define CONFIG_DNPEVA2 1" >>$(obj)include/config.h ; \
+		  $(XECHO) "... DNP/EVA2 configuration" ; \
+		}
+	@[ -z "$(findstring _base_32,$@)" ] || \
+		{ echo "#define CONFIG_NIOS_BASE_32 1" >>$(obj)include/config.h ; \
+		  $(XECHO) "... NIOS 'base_32' configuration" ; \
+		}
+	@[ -z "$(findstring ADNPESC1_config,$@)" ] || \
+		{ echo "#define CONFIG_NIOS_BASE_32 1" >>$(obj)include/config.h ; \
+		  $(XECHO) "... NIOS 'base_32' configuration (DEFAULT)" ; \
+		}
+	@$(MKCONFIG) -a ADNPESC1 nios nios adnpesc1 ssv
+
+DK1C20_safe_32_config		\
+DK1C20_standard_32_config	\
+DK1C20_config:	unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring _safe_32,$@)" ] || \
+		{ echo "#define CONFIG_NIOS_SAFE_32 1" >>$(obj)include/config.h ; \
+		  $(XECHO) "... NIOS 'safe_32' configuration" ; \
+		}
+	@[ -z "$(findstring _standard_32,$@)" ] || \
+		{ echo "#define CONFIG_NIOS_STANDARD_32 1" >>$(obj)include/config.h ; \
+		  $(XECHO) "... NIOS 'standard_32' configuration" ; \
+		}
+	@[ -z "$(findstring DK1C20_config,$@)" ] || \
+		{ echo "#define CONFIG_NIOS_STANDARD_32 1" >>$(obj)include/config.h ; \
+		  $(XECHO) "... NIOS 'standard_32' configuration (DEFAULT)" ; \
+		}
+	@$(MKCONFIG) -a DK1C20 nios nios dk1c20 altera
+
+DK1S10_safe_32_config		\
+DK1S10_standard_32_config	\
+DK1S10_mtx_ldk_20_config	\
+DK1S10_config:	unconfig
+	@mkdir -p $(obj)include
+	@[ -z "$(findstring _safe_32,$@)" ] || \
+		{ echo "#define CONFIG_NIOS_SAFE_32 1" >>$(obj)include/config.h ; \
+		  $(XECHO) "... NIOS 'safe_32' configuration" ; \
+		}
+	@[ -z "$(findstring _standard_32,$@)" ] || \
+		{ echo "#define CONFIG_NIOS_STANDARD_32 1" >>$(obj)include/config.h ; \
+		  $(XECHO) "... NIOS 'standard_32' configuration" ; \
+		}
+	@[ -z "$(findstring _mtx_ldk_20,$@)" ] || \
+		{ echo "#define CONFIG_NIOS_MTX_LDK_20 1" >>$(obj)include/config.h ; \
+		  $(XECHO) "... NIOS 'mtx_ldk_20' configuration" ; \
+		}
+	@[ -z "$(findstring DK1S10_config,$@)" ] || \
+		{ echo "#define CONFIG_NIOS_STANDARD_32 1" >>$(obj)include/config.h ; \
+		  $(XECHO) "... NIOS 'standard_32' configuration (DEFAULT)" ; \
+		}
+	@$(MKCONFIG) -a DK1S10 nios nios dk1s10 altera
+
+#########################################################################
+## Nios-II
+#########################################################################
+
+EP1C20_config : unconfig
+	@$(MKCONFIG)  EP1C20 nios2 nios2 ep1c20 altera
+
+EP1S10_config : unconfig
+	@$(MKCONFIG)  EP1S10 nios2 nios2 ep1s10 altera
+
+EP1S40_config : unconfig
+	@$(MKCONFIG)  EP1S40 nios2 nios2 ep1s40 altera
+
+PK1C20_config : unconfig
+	@$(MKCONFIG)  PK1C20 nios2 nios2 pk1c20 psyent
+
+PCI5441_config : unconfig
+	@$(MKCONFIG)  PCI5441 nios2 nios2 pci5441 psyent
+
+#========================================================================
+## Microblaze
+#========================================================================
+
+microblaze-generic_config:	unconfig
+	@mkdir -p $(obj)include
+	@$(MKCONFIG) -a $(@:_config=) microblaze microblaze microblaze-generic xilinx
+
+suzaku_config:	unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_SUZAKU 1" > $(obj)include/config.h
+	@$(MKCONFIG) -a $(@:_config=) microblaze microblaze suzaku AtmarkTechno
+
+#========================================================================
+# Blackfin
+#========================================================================
+
+# Analog Devices boards
+BFIN_BOARDS = bf518f-ezbrd bf526-ezbrd bf527-ezkit bf533-ezkit bf533-stamp \
+	bf537-pnav bf537-stamp bf538f-ezkit bf548-ezkit bf561-ezkit
+
+# Bluetechnix tinyboards
+BFIN_BOARDS += cm-bf527 cm-bf533 cm-bf537e cm-bf548 cm-bf561 tcm-bf537
+
+# Misc third party boards
+BFIN_BOARDS += bf537-minotaur bf537-srv1 blackstamp
+
+# I-SYST Micromodule
+BFIN_BOARDS += ibf-dsp561
+
+$(BFIN_BOARDS:%=%_config)	: unconfig
+	@$(MKCONFIG) $(@:_config=) blackfin blackfin $(@:_config=)
+
+$(BFIN_BOARDS):
+	$(MAKE) $@_config
+	$(MAKE)
+
+#========================================================================
+# AVR32
+#========================================================================
+
+atngw100_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) avr32 at32ap atngw100 atmel at32ap700x
+
+atstk1002_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) avr32 at32ap atstk1000 atmel at32ap700x
+
+atstk1003_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) avr32 at32ap atstk1000 atmel at32ap700x
+
+atstk1004_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) avr32 at32ap atstk1000 atmel at32ap700x
+
+atstk1006_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) avr32 at32ap atstk1000 atmel at32ap700x
+
+favr-32-ezkit_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) avr32 at32ap favr-32-ezkit earthlcd at32ap700x
+
+hammerhead_config	:	unconfig
+	@$(MKCONFIG) $(@:_config=) avr32 at32ap hammerhead miromico at32ap700x
+
+mimc200_config		:	unconfig
+	@$(MKCONFIG) $(@:_config=) avr32 at32ap mimc200 mimc at32ap700x
+
+#========================================================================
+# SH3 (SuperH)
+#========================================================================
+
+#########################################################################
+## sh2 (Renesas SuperH)
+#########################################################################
+rsk7203_config: unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_RSK7203 1" > $(obj)include/config.h
+	@$(MKCONFIG) -a $(@:_config=) sh sh2 rsk7203 renesas
+
+#########################################################################
+## sh3 (Renesas SuperH)
+#########################################################################
+
+mpr2_config: unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_MPR2 1" > $(obj)include/config.h
+	@$(MKCONFIG) -a $(@:_config=) sh sh3 mpr2
+
+ms7720se_config: unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_MS7720SE 1" > $(obj)include/config.h
+	@$(MKCONFIG) -a $(@:_config=) sh sh3 ms7720se
+
+#########################################################################
+## sh4 (Renesas SuperH)
+#########################################################################
+
+MigoR_config :       unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_MIGO_R 1" > $(obj)include/config.h
+	@$(MKCONFIG) -a $(@:_config=) sh sh4 MigoR renesas
+
+ms7750se_config: unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_MS7750SE 1" > $(obj)include/config.h
+	@$(MKCONFIG) -a $(@:_config=) sh sh4 ms7750se
+
+ms7722se_config :	unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_MS7722SE 1" > $(obj)include/config.h
+	@$(MKCONFIG) -a $(@:_config=) sh sh4 ms7722se
+
+r2dplus_config  :   unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_R2DPLUS 1" > $(obj)include/config.h
+	@$(MKCONFIG) -a $(@:_config=) sh sh4 r2dplus renesas
+
+r7780mp_config: unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_R7780MP 1" > $(obj)include/config.h
+	@$(MKCONFIG) -a $(@:_config=) sh sh4 r7780mp renesas
+
+sh7763rdp_config  :   unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_SH7763RDP 1" > $(obj)include/config.h
+	@$(MKCONFIG) -a $(@:_config=) sh sh4 sh7763rdp renesas
+
+xtract_sh7785lcr = $(subst _32bit,,$(subst _config,,$1))
+sh7785lcr_32bit_config \
+sh7785lcr_config  :   unconfig
+	@mkdir -p $(obj)include
+	@mkdir -p $(obj)board/renesas/sh7785lcr
+	@echo "#define CONFIG_SH7785LCR 1" > $(obj)include/config.h
+	@if [ "$(findstring 32bit, $@)" ] ; then \
+		echo "#define CONFIG_SH_32BIT 1" >> $(obj)include/config.h ; \
+		echo "TEXT_BASE = 0x8ff80000" > \
+			$(obj)board/renesas/sh7785lcr/config.tmp ; \
+		  $(XECHO) " ... enable 32-Bit Address Extended Mode" ; \
+	fi
+	@$(MKCONFIG) -a $(call xtract_sh7785lcr,$@) sh sh4 sh7785lcr renesas
+
+ap325rxa_config  :   unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_AP325RXA 1" > $(obj)include/config.h
+	@$(MKCONFIG) -a $(@:_config=) sh sh4 ap325rxa renesas
+
+espt_config  :   unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_ESPT 1" > $(obj)include/config.h
+	@$(MKCONFIG) -a $(@:_config=) sh sh4 espt
+
+#========================================================================
+# SPARC
+#========================================================================
+
+#########################################################################
+## LEON3
+#########################################################################
+
+# Gaisler GR-XC3S-1500 board
+gr_xc3s_1500_config : unconfig
+	@$(MKCONFIG) $(@:_config=) sparc leon3 gr_xc3s_1500 gaisler
+
+# Gaisler GR-CPCI-AX2000 board, a General purpose FPGA-AX system
+gr_cpci_ax2000_config : unconfig
+	@$(MKCONFIG) $(@:_config=) sparc leon3 gr_cpci_ax2000 gaisler
+
+# Gaisler GRLIB template design (GPL SPARC/LEON3) for Altera NIOS
+# Development board Stratix II edition, FPGA Device EP2S60.
+gr_ep2s60_config: unconfig
+	@$(MKCONFIG) $(@:_config=) sparc leon3 gr_ep2s60 gaisler
+
+# Gaisler LEON3 GRSIM simulator
+grsim_config : unconfig
+	@$(MKCONFIG) $(@:_config=) sparc leon3 grsim gaisler
+
+#########################################################################
+## LEON2
+#########################################################################
+
+# Gaisler LEON2 GRSIM simulator
+grsim_leon2_config : unconfig
+	@$(MKCONFIG) $(@:_config=) sparc leon2 grsim_leon2 gaisler
+
+#########################################################################
+#########################################################################
+#########################################################################
+
+clean:
+	@rm -f $(obj)examples/standalone/82559_eeprom			  \
+	       $(obj)examples/standalone/eepro100_eeprom		  \
+	       $(obj)examples/standalone/hello_world			  \
+	       $(obj)examples/standalone/interrupt			  \
+	       $(obj)examples/standalone/mem_to_mem_idma2intr		  \
+	       $(obj)examples/standalone/sched				  \
+	       $(obj)examples/standalone/smc91111_eeprom		  \
+	       $(obj)examples/standalone/test_burst			  \
+	       $(obj)examples/standalone/timer
+	@rm -f $(obj)examples/api/demo{,.bin}
+	@rm -f $(obj)tools/bmp_logo	   $(obj)tools/easylogo/easylogo  \
+	       $(obj)tools/env/{fw_printenv,fw_setenv}			  \
+	       $(obj)tools/envcrc					  \
+	       $(obj)tools/gdb/{astest,gdbcont,gdbsend}			  \
+	       $(obj)tools/gen_eth_addr    $(obj)tools/img2srec		  \
+	       $(obj)tools/mkimage	   $(obj)tools/mpc86x_clk	  \
+	       $(obj)tools/ncb		   $(obj)tools/ubsha1
+	@rm -f $(obj)board/cray/L1/{bootscript.c,bootscript.image}	  \
+	       $(obj)board/netstar/{eeprom,crcek,crcit,*.srec,*.bin}	  \
+	       $(obj)board/trab/trab_fkt   $(obj)board/voiceblue/eeprom   \
+	       $(obj)board/armltd/{integratorap,integratorcp}/u-boot.lds  \
+	       $(obj)lib_blackfin/u-boot.lds				  \
+	       $(obj)u-boot.lds						  \
+	       $(obj)cpu/blackfin/bootrom-asm-offsets.[chs]
+	@rm -f $(obj)include/bmp_logo.h
+	@rm -f $(obj)nand_spl/{u-boot.lds,u-boot-spl,u-boot-spl.map,System.map}
+	@rm -f $(obj)onenand_ipl/onenand-{ipl,ipl.bin,ipl-2k.bin,ipl-4k.bin,ipl.map}
+	@rm -f $(obj)onenand_ipl/u-boot.lds
+	@rm -f $(TIMESTAMP_FILE) $(VERSION_FILE)
+	@find $(OBJTREE) -type f \
+		\( -name 'core' -o -name '*.bak' -o -name '*~' \
+		-o -name '*.o'	-o -name '*.a' -o -name '*.exe'	\) -print \
+		| xargs rm -f
+
+clobber:	clean
+	@find $(OBJTREE) -type f \( -name .depend \
+		-o -name '*.srec' -o -name '*.bin' -o -name u-boot.img \) \
+		-print0 \
+		| xargs -0 rm -f
+	@rm -f $(OBJS) $(obj)*.bak $(obj)ctags $(obj)etags $(obj)TAGS \
+		$(obj)cscope.* $(obj)*.*~
+	@rm -f $(obj)u-boot $(obj)u-boot.map $(obj)u-boot.hex $(ALL)
+	@rm -f $(obj)tools/{env/crc32.c,inca-swap-bytes}
+	@rm -f $(obj)cpu/mpc824x/bedbug_603e.c
+	@rm -f $(obj)include/asm/proc $(obj)include/asm/arch $(obj)include/asm
+	@[ ! -d $(obj)nand_spl ] || find $(obj)nand_spl -name "*" -type l -print | xargs rm -f
+	@[ ! -d $(obj)onenand_ipl ] || find $(obj)onenand_ipl -name "*" -type l -print | xargs rm -f
+
+ifeq ($(OBJTREE),$(SRCTREE))
+mrproper \
+distclean:	clobber unconfig
+else
+mrproper \
+distclean:	clobber unconfig
+	rm -rf $(obj)*
+endif
+
+backup:
+	F=`basename $(TOPDIR)` ; cd .. ; \
+	gtar --force-local -zcvf `date "+$$F-%Y-%m-%d-%T.tar.gz"` $$F
+
+#########################################################################
diff -Naur u-boot-2009.08/net/eth.c u-boot-2009.08_alpha2/net/eth.c
--- u-boot-2009.08/net/eth.c	2009-08-31 12:57:42.000000000 -0500
+++ u-boot-2009.08_alpha2/net/eth.c	2009-12-21 17:21:07.000000000 -0600
@@ -199,9 +199,13 @@
 #endif
 	/* Try board-specific initialization first.  If it fails or isn't
 	 * present, try the cpu-specific initialization */
+#if 0	 
 	if (board_eth_init(bis) < 0)
 		cpu_eth_init(bis);
-
+#endif   
+#ifdef CONFIG_LIPP_6300ETH
+	lipp_6300eth_initialize();
+#endif
 #if defined(CONFIG_DB64360) || defined(CONFIG_CPCI750)
 	mv6436x_eth_initialize(bis);
 #endif
diff -Naur u-boot-2009.08/tools/Makefile u-boot-2009.08_alpha2/tools/Makefile
--- u-boot-2009.08/tools/Makefile	2009-08-31 12:57:42.000000000 -0500
+++ u-boot-2009.08_alpha2/tools/Makefile	2010-01-14 12:37:28.000000000 -0600
@@ -68,10 +68,10 @@
 # Generated executable files
 BIN_FILES-$(CONFIG_CMD_LOADS) += img2srec$(SFX)
 BIN_FILES-y += mkimage$(SFX)
-BIN_FILES-$(CONFIG_ENV_IS_EMBEDDED) += envcrc$(SFX)
+#BIN_FILES-$(CONFIG_ENV_IS_EMBEDDED) += envcrc$(SFX)
 BIN_FILES-$(CONFIG_ENV_IS_IN_DATAFLASH) += envcrc$(SFX)
 BIN_FILES-$(CONFIG_ENV_IS_IN_EEPROM) += envcrc$(SFX)
-BIN_FILES-$(CONFIG_ENV_IS_IN_FLASH) += envcrc$(SFX)
+#BIN_FILES-$(CONFIG_ENV_IS_IN_FLASH) += envcrc$(SFX)
 BIN_FILES-$(CONFIG_ENV_IS_IN_ONENAND) += envcrc$(SFX)
 BIN_FILES-$(CONFIG_ENV_IS_IN_NAND) += envcrc$(SFX)
 BIN_FILES-$(CONFIG_ENV_IS_IN_NVRAM) += envcrc$(SFX)
