diff -Naupr u-boot-2009.08.orig/README.trident u-boot-2009.08/README.trident
--- u-boot-2009.08.orig/README.trident	1969-12-31 18:00:00.000000000 -0600
+++ u-boot-2009.08/README.trident	2010-12-09 14:47:44.229701574 -0600
@@ -0,0 +1,15 @@
+This lists changes made to u-boot to work on Trident's products.
+
+NOTE: This is a work in progress and is not complete yet.
+
+
+Environment variables:
+
+nfs_timeout - Used to set the timeout for NFS. Value is in seconds. 
+	      Default is 2 seconds. This may need to be set to a
+	      higher value when using u-boot's NFS on congested
+	      networks.
+	      
+uboot_cmdline - set to '1' to force u-boot to pass the bootargs as the
+	      	command line to the kernel. 
+
diff -Naupr u-boot-2009.08.orig/net/nfs.c u-boot-2009.08/net/nfs.c
--- u-boot-2009.08.orig/net/nfs.c	2010-12-09 14:12:31.746202392 -0600
+++ u-boot-2009.08/net/nfs.c	2010-12-09 14:49:32.985626560 -0600
@@ -33,7 +33,7 @@
 
 #define HASHES_PER_LINE 80	/* Number of "loading" hashes per line	*/
 #define NFS_RETRY_COUNT 30
-#define NFS_TIMEOUT 2000UL
+static unsigned long nfs_timeout = 2000UL;
 
 static int fs_mounted = 0;
 static unsigned long rpc_id = 0;
@@ -576,7 +576,7 @@ NfsTimeout (void)
 		NetStartAgain ();
 	} else {
 		puts("T ");
-		NetSetTimeout (NFS_TIMEOUT, NfsTimeout);
+		NetSetTimeout (nfs_timeout, NfsTimeout);
 		NfsSend ();
 	}
 }
@@ -655,7 +655,7 @@ NfsHandler (uchar *pkt, unsigned dest, u
 
 	case STATE_READ_REQ:
 		rlen = nfs_read_reply (pkt, len);
-		NetSetTimeout (NFS_TIMEOUT, NfsTimeout);
+		NetSetTimeout (nfs_timeout, NfsTimeout);
 		if (rlen > 0) {
 			nfs_offset += rlen;
 			NfsSend ();
@@ -677,7 +677,18 @@ NfsHandler (uchar *pkt, unsigned dest, u
 void
 NfsStart (void)
 {
+        char *timeout_str;
 	debug("%s\n", __func__);
+
+        timeout_str = getenv("nfs_timeout");
+        if (timeout_str != NULL) {
+            unsigned long t;
+            t = simple_strtoul(timeout_str, NULL, 0);
+            if (t > 0) {
+                nfs_timeout = t * 1000;
+            }
+        }
+
 	NfsDownloadState = NETLOOP_FAIL;
 
 	NfsServerIP = NetServerIP;
@@ -740,7 +751,7 @@ NfsStart (void)
 	printf ("\nLoad address: 0x%lx\n"
 		"Loading: *\b", load_addr);
 
-	NetSetTimeout (NFS_TIMEOUT, NfsTimeout);
+	NetSetTimeout (nfs_timeout, NfsTimeout);
 	NetSetHandler (NfsHandler);
 
 	NfsTimeoutCount = 0;
