diff -Naurp u-boot-2009.08_org/drivers/mtd/nand/nand_bbt.c u-boot-2009.08/drivers/mtd/nand/nand_bbt.c
--- u-boot-2009.08_org/drivers/mtd/nand/nand_bbt.c	2011-07-05 09:54:56.045926000 +0530
+++ u-boot-2009.08/drivers/mtd/nand/nand_bbt.c	2011-07-05 18:21:21.171008000 +0530
@@ -583,6 +583,11 @@ static int write_bbt(struct mtd_info *mt
 	size_t retlen, len = 0;
 	loff_t to;
 	struct mtd_oob_ops ops;
+    int erz_cnt, erz_pgfl[td->maxblocks];
+
+    for(i=0; i<td->maxblocks; i++) {
+        erz_pgfl[i]= -1;
+    }
 
 	ops.ooblen = mtd->oobsize;
 	ops.ooboffs = 0;
@@ -618,6 +623,7 @@ static int write_bbt(struct mtd_info *mt
 			goto write;
 		}
 
+ find_free_block:
 		/* Automatic placement of the bad block table */
 		/* Search direction top -> down ? */
 		if (td->options & NAND_BBT_LASTBLOCK) {
@@ -640,8 +646,15 @@ static int write_bbt(struct mtd_info *mt
 			page = block <<
 				(this->bbt_erase_shift - this->page_shift);
 			/* Check, if the block is used by the mirror table */
-			if (!md || md->pages[chip] != page)
-				goto write;
+            /* Trident - Handle bad blocks within blocks reserved for bbt */
+            if ((!md || md->pages[chip] != page) && td->pages[chip] != page) {
+                for(erz_cnt =0; erz_cnt < td->maxblocks; erz_cnt++) {
+                    if(erz_pgfl[erz_cnt]== page)
+                        break;
+                }
+                if( erz_cnt == td->maxblocks)
+                goto write;
+            }
 		}
 		printk(KERN_ERR "No space left to write bad block table\n");
 		return -ENOSPC;
@@ -737,8 +750,15 @@ static int write_bbt(struct mtd_info *mt
 		einfo.addr = (unsigned long)to;
 		einfo.len = 1 << this->bbt_erase_shift;
 		res = nand_erase_nand(mtd, &einfo, 1);
-		if (res < 0)
-			goto outerr;
+        if (res < 0) {
+            /* Trident - Handle bad blocks within blocks reserved for bbt */
+            for (erz_cnt =0; erz_cnt < td->maxblocks; erz_cnt++) {
+                if(erz_pgfl[erz_cnt] < 0)
+                    break;
+            }
+            erz_pgfl[erz_cnt] = page;
+            goto find_free_block;
+        }
 
 		res = scan_write_bbt(mtd, to, len, buf, &buf[len]);
 		if (res < 0)
