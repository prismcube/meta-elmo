From 38efe0e03a3efb6b68fda4db4a7a7072ce97f171 Mon Sep 17 00:00:00 2001
From: Sangdol Kim <doliyu@marusys.com>
Date: Mon, 4 Feb 2013 01:54:22 +0900
Subject: [PATCH] [systemd]patch for systemd.

---
 arch/arm/include/asm/unistd.h |    5 +++++
 arch/arm/kernel/calls.S       |    4 ++++
 kernel/cgroup.c               |   16 +++++++++++++---
 3 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/arch/arm/include/asm/unistd.h b/arch/arm/include/asm/unistd.h
index dd2bf53..d41ccab 100644
--- a/arch/arm/include/asm/unistd.h
+++ b/arch/arm/include/asm/unistd.h
@@ -394,6 +394,11 @@
 #define __NR_recvmmsg			(__NR_SYSCALL_BASE+365)
 
 /*
+ * for systemd
+ */
+#define __NR_accept4                  	(__NR_SYSCALL_BASE+366)
+
+/*
  * The following SWIs are ARM private.
  */
 #define __ARM_NR_BASE			(__NR_SYSCALL_BASE+0x0f0000)
diff --git a/arch/arm/kernel/calls.S b/arch/arm/kernel/calls.S
index 37ae301..8ae720e 100644
--- a/arch/arm/kernel/calls.S
+++ b/arch/arm/kernel/calls.S
@@ -375,6 +375,10 @@
 		CALL(sys_rt_tgsigqueueinfo)
 		CALL(sys_perf_event_open)
 /* 365 */	CALL(sys_recvmmsg)
+/*
+ for systemd
+*/
+/* 366 */     	CALL(sys_accept4)
 #ifndef syscalls_counted
 .equ syscalls_padding, ((NR_syscalls + 3) & ~3) - NR_syscalls
 #define syscalls_counted
diff --git a/kernel/cgroup.c b/kernel/cgroup.c
index 6d870f2..49dc931 100644
--- a/kernel/cgroup.c
+++ b/kernel/cgroup.c
@@ -3854,6 +3854,7 @@ int __init cgroup_init(void)
 	int err;
 	int i;
 	struct hlist_head *hhead;
+	static struct kobject *cgroup_kobj;
 
 	err = bdi_init(&cgroup_backing_dev_info);
 	if (err)
@@ -3872,9 +3873,18 @@ int __init cgroup_init(void)
 	hhead = css_set_hash(init_css_set.subsys);
 	hlist_add_head(&init_css_set.hlist, hhead);
 	BUG_ON(!init_root_id(&rootnode));
-	err = register_filesystem(&cgroup_fs_type);
-	if (err < 0)
-		goto out;
+
+	cgroup_kobj = kobject_create_and_add("cgroup", fs_kobj);
+        if (!cgroup_kobj) {
+                err = -ENOMEM;
+                goto out;
+        }
+
+        err = register_filesystem(&cgroup_fs_type);
+        if (err < 0) {
+                kobject_put(cgroup_kobj);
+                goto out;
+        }
 
 	proc_create("cgroups", 0, NULL, &proc_cgroupstats_operations);
 
-- 
1.7.2.3

